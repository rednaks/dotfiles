!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACR_HLFCYA_Mask	src/stm32f10x_flash.c	47;"	d	file:
ACR_LATENCY_Mask	src/stm32f10x_flash.c	46;"	d	file:
ACR_PRFTBE_Mask	src/stm32f10x_flash.c	48;"	d	file:
ACR_PRFTBS_Mask	src/stm32f10x_flash.c	51;"	d	file:
ADCCLK_Frequency	inc/stm32f10x_rcc.h	/^  uint32_t ADCCLK_Frequency;  \/*!< returns ADCCLK clock frequency expressed in Hz *\/$/;"	m	struct:__anon31	access:public
ADCPrescTable	src/stm32f10x_rcc.c	/^static __I uint8_t ADCPrescTable[4] = {2, 4, 6, 8};$/;"	v	file:
ADCPrescTable	tags	/^ADCPrescTable	src\/stm32f10x_rcc.c	\/^static __I uint8_t ADCPrescTable[4] = {2, 4, 6, 8};$\/;"	v	file:$/;"	v	file:
ADC_AnalogWatchdogCmd	inc/stm32f10x_adc.h	/^void ADC_AnalogWatchdogCmd(ADC_TypeDef* ADCx, uint32_t ADC_AnalogWatchdog);$/;"	p	signature:(ADC_TypeDef* ADCx, uint32_t ADC_AnalogWatchdog)
ADC_AnalogWatchdogCmd	src/stm32f10x_adc.c	/^void ADC_AnalogWatchdogCmd(ADC_TypeDef* ADCx, uint32_t ADC_AnalogWatchdog)$/;"	f	signature:(ADC_TypeDef* ADCx, uint32_t ADC_AnalogWatchdog)
ADC_AnalogWatchdogSingleChannelConfig	inc/stm32f10x_adc.h	/^void ADC_AnalogWatchdogSingleChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel);$/;"	p	signature:(ADC_TypeDef* ADCx, uint8_t ADC_Channel)
ADC_AnalogWatchdogSingleChannelConfig	src/stm32f10x_adc.c	/^void ADC_AnalogWatchdogSingleChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel)$/;"	f	signature:(ADC_TypeDef* ADCx, uint8_t ADC_Channel)
ADC_AnalogWatchdogThresholdsConfig	inc/stm32f10x_adc.h	/^void ADC_AnalogWatchdogThresholdsConfig(ADC_TypeDef* ADCx, uint16_t HighThreshold, uint16_t LowThreshold);$/;"	p	signature:(ADC_TypeDef* ADCx, uint16_t HighThreshold, uint16_t LowThreshold)
ADC_AnalogWatchdogThresholdsConfig	src/stm32f10x_adc.c	/^void ADC_AnalogWatchdogThresholdsConfig(ADC_TypeDef* ADCx, uint16_t HighThreshold,$/;"	f	signature:(ADC_TypeDef* ADCx, uint16_t HighThreshold, uint16_t LowThreshold)
ADC_AnalogWatchdog_AllInjecEnable	inc/stm32f10x_adc.h	293;"	d
ADC_AnalogWatchdog_AllRegAllInjecEnable	inc/stm32f10x_adc.h	294;"	d
ADC_AnalogWatchdog_AllRegEnable	inc/stm32f10x_adc.h	292;"	d
ADC_AnalogWatchdog_None	inc/stm32f10x_adc.h	295;"	d
ADC_AnalogWatchdog_SingleInjecEnable	inc/stm32f10x_adc.h	290;"	d
ADC_AnalogWatchdog_SingleRegEnable	inc/stm32f10x_adc.h	289;"	d
ADC_AnalogWatchdog_SingleRegOrInjecEnable	inc/stm32f10x_adc.h	291;"	d
ADC_AutoInjectedConvCmd	inc/stm32f10x_adc.h	/^void ADC_AutoInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState);$/;"	p	signature:(ADC_TypeDef* ADCx, FunctionalState NewState)
ADC_AutoInjectedConvCmd	src/stm32f10x_adc.c	/^void ADC_AutoInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)$/;"	f	signature:(ADC_TypeDef* ADCx, FunctionalState NewState)
ADC_Channel_0	inc/stm32f10x_adc.h	173;"	d
ADC_Channel_1	inc/stm32f10x_adc.h	174;"	d
ADC_Channel_10	inc/stm32f10x_adc.h	183;"	d
ADC_Channel_11	inc/stm32f10x_adc.h	184;"	d
ADC_Channel_12	inc/stm32f10x_adc.h	185;"	d
ADC_Channel_13	inc/stm32f10x_adc.h	186;"	d
ADC_Channel_14	inc/stm32f10x_adc.h	187;"	d
ADC_Channel_15	inc/stm32f10x_adc.h	188;"	d
ADC_Channel_16	inc/stm32f10x_adc.h	189;"	d
ADC_Channel_17	inc/stm32f10x_adc.h	190;"	d
ADC_Channel_2	inc/stm32f10x_adc.h	175;"	d
ADC_Channel_3	inc/stm32f10x_adc.h	176;"	d
ADC_Channel_4	inc/stm32f10x_adc.h	177;"	d
ADC_Channel_5	inc/stm32f10x_adc.h	178;"	d
ADC_Channel_6	inc/stm32f10x_adc.h	179;"	d
ADC_Channel_7	inc/stm32f10x_adc.h	180;"	d
ADC_Channel_8	inc/stm32f10x_adc.h	181;"	d
ADC_Channel_9	inc/stm32f10x_adc.h	182;"	d
ADC_Channel_TempSensor	inc/stm32f10x_adc.h	192;"	d
ADC_Channel_Vrefint	inc/stm32f10x_adc.h	193;"	d
ADC_ClearFlag	inc/stm32f10x_adc.h	/^void ADC_ClearFlag(ADC_TypeDef* ADCx, uint8_t ADC_FLAG);$/;"	p	signature:(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
ADC_ClearFlag	src/stm32f10x_adc.c	/^void ADC_ClearFlag(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)$/;"	f	signature:(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
ADC_ClearITPendingBit	inc/stm32f10x_adc.h	/^void ADC_ClearITPendingBit(ADC_TypeDef* ADCx, uint16_t ADC_IT);$/;"	p	signature:(ADC_TypeDef* ADCx, uint16_t ADC_IT)
ADC_ClearITPendingBit	src/stm32f10x_adc.c	/^void ADC_ClearITPendingBit(ADC_TypeDef* ADCx, uint16_t ADC_IT)$/;"	f	signature:(ADC_TypeDef* ADCx, uint16_t ADC_IT)
ADC_Cmd	inc/stm32f10x_adc.h	/^void ADC_Cmd(ADC_TypeDef* ADCx, FunctionalState NewState);$/;"	p	signature:(ADC_TypeDef* ADCx, FunctionalState NewState)
ADC_Cmd	src/stm32f10x_adc.c	/^void ADC_Cmd(ADC_TypeDef* ADCx, FunctionalState NewState)$/;"	f	signature:(ADC_TypeDef* ADCx, FunctionalState NewState)
ADC_ContinuousConvMode	inc/stm32f10x_adc.h	/^  FunctionalState ADC_ContinuousConvMode; \/*!< Specifies whether the conversion is performed in$/;"	m	struct:__anon30	access:public
ADC_DMACmd	inc/stm32f10x_adc.h	/^void ADC_DMACmd(ADC_TypeDef* ADCx, FunctionalState NewState);$/;"	p	signature:(ADC_TypeDef* ADCx, FunctionalState NewState)
ADC_DMACmd	src/stm32f10x_adc.c	/^void ADC_DMACmd(ADC_TypeDef* ADCx, FunctionalState NewState)$/;"	f	signature:(ADC_TypeDef* ADCx, FunctionalState NewState)
ADC_DataAlign	inc/stm32f10x_adc.h	/^  uint32_t ADC_DataAlign;                 \/*!< Specifies whether the ADC data alignment is left or right.$/;"	m	struct:__anon30	access:public
ADC_DataAlign_Left	inc/stm32f10x_adc.h	162;"	d
ADC_DataAlign_Right	inc/stm32f10x_adc.h	161;"	d
ADC_DeInit	inc/stm32f10x_adc.h	/^void ADC_DeInit(ADC_TypeDef* ADCx);$/;"	p	signature:(ADC_TypeDef* ADCx)
ADC_DeInit	src/stm32f10x_adc.c	/^void ADC_DeInit(ADC_TypeDef* ADCx)$/;"	f	signature:(ADC_TypeDef* ADCx)
ADC_DiscModeChannelCountConfig	inc/stm32f10x_adc.h	/^void ADC_DiscModeChannelCountConfig(ADC_TypeDef* ADCx, uint8_t Number);$/;"	p	signature:(ADC_TypeDef* ADCx, uint8_t Number)
ADC_DiscModeChannelCountConfig	src/stm32f10x_adc.c	/^void ADC_DiscModeChannelCountConfig(ADC_TypeDef* ADCx, uint8_t Number)$/;"	f	signature:(ADC_TypeDef* ADCx, uint8_t Number)
ADC_DiscModeCmd	inc/stm32f10x_adc.h	/^void ADC_DiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState);$/;"	p	signature:(ADC_TypeDef* ADCx, FunctionalState NewState)
ADC_DiscModeCmd	src/stm32f10x_adc.c	/^void ADC_DiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)$/;"	f	signature:(ADC_TypeDef* ADCx, FunctionalState NewState)
ADC_ExternalTrigConv	inc/stm32f10x_adc.h	/^  uint32_t ADC_ExternalTrigConv;          \/*!< Defines the external trigger used to start the analog$/;"	m	struct:__anon30	access:public
ADC_ExternalTrigConvCmd	inc/stm32f10x_adc.h	/^void ADC_ExternalTrigConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState);$/;"	p	signature:(ADC_TypeDef* ADCx, FunctionalState NewState)
ADC_ExternalTrigConvCmd	src/stm32f10x_adc.c	/^void ADC_ExternalTrigConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)$/;"	f	signature:(ADC_TypeDef* ADCx, FunctionalState NewState)
ADC_ExternalTrigConv_Ext_IT11_TIM8_TRGO	inc/stm32f10x_adc.h	127;"	d
ADC_ExternalTrigConv_None	inc/stm32f10x_adc.h	130;"	d
ADC_ExternalTrigConv_T1_CC1	inc/stm32f10x_adc.h	122;"	d
ADC_ExternalTrigConv_T1_CC2	inc/stm32f10x_adc.h	123;"	d
ADC_ExternalTrigConv_T1_CC3	inc/stm32f10x_adc.h	129;"	d
ADC_ExternalTrigConv_T2_CC2	inc/stm32f10x_adc.h	124;"	d
ADC_ExternalTrigConv_T2_CC3	inc/stm32f10x_adc.h	133;"	d
ADC_ExternalTrigConv_T3_CC1	inc/stm32f10x_adc.h	132;"	d
ADC_ExternalTrigConv_T3_TRGO	inc/stm32f10x_adc.h	125;"	d
ADC_ExternalTrigConv_T4_CC4	inc/stm32f10x_adc.h	126;"	d
ADC_ExternalTrigConv_T5_CC1	inc/stm32f10x_adc.h	136;"	d
ADC_ExternalTrigConv_T5_CC3	inc/stm32f10x_adc.h	137;"	d
ADC_ExternalTrigConv_T8_CC1	inc/stm32f10x_adc.h	134;"	d
ADC_ExternalTrigConv_T8_TRGO	inc/stm32f10x_adc.h	135;"	d
ADC_ExternalTrigInjecConv_Ext_IT15_TIM8_CC4	inc/stm32f10x_adc.h	240;"	d
ADC_ExternalTrigInjecConv_None	inc/stm32f10x_adc.h	244;"	d
ADC_ExternalTrigInjecConv_T1_CC4	inc/stm32f10x_adc.h	243;"	d
ADC_ExternalTrigInjecConv_T1_TRGO	inc/stm32f10x_adc.h	242;"	d
ADC_ExternalTrigInjecConv_T2_CC1	inc/stm32f10x_adc.h	237;"	d
ADC_ExternalTrigInjecConv_T2_TRGO	inc/stm32f10x_adc.h	236;"	d
ADC_ExternalTrigInjecConv_T3_CC4	inc/stm32f10x_adc.h	238;"	d
ADC_ExternalTrigInjecConv_T4_CC3	inc/stm32f10x_adc.h	246;"	d
ADC_ExternalTrigInjecConv_T4_TRGO	inc/stm32f10x_adc.h	239;"	d
ADC_ExternalTrigInjecConv_T5_CC4	inc/stm32f10x_adc.h	250;"	d
ADC_ExternalTrigInjecConv_T5_TRGO	inc/stm32f10x_adc.h	249;"	d
ADC_ExternalTrigInjecConv_T8_CC2	inc/stm32f10x_adc.h	247;"	d
ADC_ExternalTrigInjecConv_T8_CC4	inc/stm32f10x_adc.h	248;"	d
ADC_ExternalTrigInjectedConvCmd	inc/stm32f10x_adc.h	/^void ADC_ExternalTrigInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState);$/;"	p	signature:(ADC_TypeDef* ADCx, FunctionalState NewState)
ADC_ExternalTrigInjectedConvCmd	src/stm32f10x_adc.c	/^void ADC_ExternalTrigInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)$/;"	f	signature:(ADC_TypeDef* ADCx, FunctionalState NewState)
ADC_ExternalTrigInjectedConvConfig	inc/stm32f10x_adc.h	/^void ADC_ExternalTrigInjectedConvConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConv);$/;"	p	signature:(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConv)
ADC_ExternalTrigInjectedConvConfig	src/stm32f10x_adc.c	/^void ADC_ExternalTrigInjectedConvConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConv)$/;"	f	signature:(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConv)
ADC_FLAG_AWD	inc/stm32f10x_adc.h	328;"	d
ADC_FLAG_EOC	inc/stm32f10x_adc.h	329;"	d
ADC_FLAG_JEOC	inc/stm32f10x_adc.h	330;"	d
ADC_FLAG_JSTRT	inc/stm32f10x_adc.h	331;"	d
ADC_FLAG_STRT	inc/stm32f10x_adc.h	332;"	d
ADC_GetCalibrationStatus	inc/stm32f10x_adc.h	/^FlagStatus ADC_GetCalibrationStatus(ADC_TypeDef* ADCx);$/;"	p	signature:(ADC_TypeDef* ADCx)
ADC_GetCalibrationStatus	src/stm32f10x_adc.c	/^FlagStatus ADC_GetCalibrationStatus(ADC_TypeDef* ADCx)$/;"	f	signature:(ADC_TypeDef* ADCx)
ADC_GetConversionValue	inc/stm32f10x_adc.h	/^uint16_t ADC_GetConversionValue(ADC_TypeDef* ADCx);$/;"	p	signature:(ADC_TypeDef* ADCx)
ADC_GetConversionValue	src/stm32f10x_adc.c	/^uint16_t ADC_GetConversionValue(ADC_TypeDef* ADCx)$/;"	f	signature:(ADC_TypeDef* ADCx)
ADC_GetDualModeConversionValue	inc/stm32f10x_adc.h	/^uint32_t ADC_GetDualModeConversionValue(void);$/;"	p	signature:(void)
ADC_GetDualModeConversionValue	src/stm32f10x_adc.c	/^uint32_t ADC_GetDualModeConversionValue(void)$/;"	f	signature:(void)
ADC_GetFlagStatus	inc/stm32f10x_adc.h	/^FlagStatus ADC_GetFlagStatus(ADC_TypeDef* ADCx, uint8_t ADC_FLAG);$/;"	p	signature:(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
ADC_GetFlagStatus	src/stm32f10x_adc.c	/^FlagStatus ADC_GetFlagStatus(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)$/;"	f	signature:(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
ADC_GetITStatus	inc/stm32f10x_adc.h	/^ITStatus ADC_GetITStatus(ADC_TypeDef* ADCx, uint16_t ADC_IT);$/;"	p	signature:(ADC_TypeDef* ADCx, uint16_t ADC_IT)
ADC_GetITStatus	src/stm32f10x_adc.c	/^ITStatus ADC_GetITStatus(ADC_TypeDef* ADCx, uint16_t ADC_IT)$/;"	f	signature:(ADC_TypeDef* ADCx, uint16_t ADC_IT)
ADC_GetInjectedConversionValue	inc/stm32f10x_adc.h	/^uint16_t ADC_GetInjectedConversionValue(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel);$/;"	p	signature:(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel)
ADC_GetInjectedConversionValue	src/stm32f10x_adc.c	/^uint16_t ADC_GetInjectedConversionValue(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel)$/;"	f	signature:(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel)
ADC_GetResetCalibrationStatus	inc/stm32f10x_adc.h	/^FlagStatus ADC_GetResetCalibrationStatus(ADC_TypeDef* ADCx);$/;"	p	signature:(ADC_TypeDef* ADCx)
ADC_GetResetCalibrationStatus	src/stm32f10x_adc.c	/^FlagStatus ADC_GetResetCalibrationStatus(ADC_TypeDef* ADCx)$/;"	f	signature:(ADC_TypeDef* ADCx)
ADC_GetSoftwareStartConvStatus	inc/stm32f10x_adc.h	/^FlagStatus ADC_GetSoftwareStartConvStatus(ADC_TypeDef* ADCx);$/;"	p	signature:(ADC_TypeDef* ADCx)
ADC_GetSoftwareStartConvStatus	src/stm32f10x_adc.c	/^FlagStatus ADC_GetSoftwareStartConvStatus(ADC_TypeDef* ADCx)$/;"	f	signature:(ADC_TypeDef* ADCx)
ADC_GetSoftwareStartInjectedConvCmdStatus	inc/stm32f10x_adc.h	/^FlagStatus ADC_GetSoftwareStartInjectedConvCmdStatus(ADC_TypeDef* ADCx);$/;"	p	signature:(ADC_TypeDef* ADCx)
ADC_GetSoftwareStartInjectedConvCmdStatus	src/stm32f10x_adc.c	/^FlagStatus ADC_GetSoftwareStartInjectedConvCmdStatus(ADC_TypeDef* ADCx)$/;"	f	signature:(ADC_TypeDef* ADCx)
ADC_ITConfig	inc/stm32f10x_adc.h	/^void ADC_ITConfig(ADC_TypeDef* ADCx, uint16_t ADC_IT, FunctionalState NewState);$/;"	p	signature:(ADC_TypeDef* ADCx, uint16_t ADC_IT, FunctionalState NewState)
ADC_ITConfig	src/stm32f10x_adc.c	/^void ADC_ITConfig(ADC_TypeDef* ADCx, uint16_t ADC_IT, FunctionalState NewState)$/;"	f	signature:(ADC_TypeDef* ADCx, uint16_t ADC_IT, FunctionalState NewState)
ADC_IT_AWD	inc/stm32f10x_adc.h	313;"	d
ADC_IT_EOC	inc/stm32f10x_adc.h	312;"	d
ADC_IT_JEOC	inc/stm32f10x_adc.h	314;"	d
ADC_Init	inc/stm32f10x_adc.h	/^void ADC_Init(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct);$/;"	p	signature:(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct)
ADC_Init	src/stm32f10x_adc.c	/^void ADC_Init(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct)$/;"	f	signature:(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct)
ADC_InitTypeDef	inc/stm32f10x_adc.h	/^}ADC_InitTypeDef;$/;"	t	typeref:struct:__anon30
ADC_InjectedChannelConfig	inc/stm32f10x_adc.h	/^void ADC_InjectedChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_SampleTime);$/;"	p	signature:(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_SampleTime)
ADC_InjectedChannelConfig	src/stm32f10x_adc.c	/^void ADC_InjectedChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_SampleTime)$/;"	f	signature:(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_SampleTime)
ADC_InjectedChannel_1	inc/stm32f10x_adc.h	273;"	d
ADC_InjectedChannel_2	inc/stm32f10x_adc.h	274;"	d
ADC_InjectedChannel_3	inc/stm32f10x_adc.h	275;"	d
ADC_InjectedChannel_4	inc/stm32f10x_adc.h	276;"	d
ADC_InjectedDiscModeCmd	inc/stm32f10x_adc.h	/^void ADC_InjectedDiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState);$/;"	p	signature:(ADC_TypeDef* ADCx, FunctionalState NewState)
ADC_InjectedDiscModeCmd	src/stm32f10x_adc.c	/^void ADC_InjectedDiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)$/;"	f	signature:(ADC_TypeDef* ADCx, FunctionalState NewState)
ADC_InjectedSequencerLengthConfig	inc/stm32f10x_adc.h	/^void ADC_InjectedSequencerLengthConfig(ADC_TypeDef* ADCx, uint8_t Length);$/;"	p	signature:(ADC_TypeDef* ADCx, uint8_t Length)
ADC_InjectedSequencerLengthConfig	src/stm32f10x_adc.c	/^void ADC_InjectedSequencerLengthConfig(ADC_TypeDef* ADCx, uint8_t Length)$/;"	f	signature:(ADC_TypeDef* ADCx, uint8_t Length)
ADC_Mode	inc/stm32f10x_adc.h	/^  uint32_t ADC_Mode;                      \/*!< Configures the ADC to operate in independent or$/;"	m	struct:__anon30	access:public
ADC_Mode_AlterTrig	inc/stm32f10x_adc.h	102;"	d
ADC_Mode_FastInterl	inc/stm32f10x_adc.h	100;"	d
ADC_Mode_Independent	inc/stm32f10x_adc.h	93;"	d
ADC_Mode_InjecSimult	inc/stm32f10x_adc.h	98;"	d
ADC_Mode_InjecSimult_FastInterl	inc/stm32f10x_adc.h	96;"	d
ADC_Mode_InjecSimult_SlowInterl	inc/stm32f10x_adc.h	97;"	d
ADC_Mode_RegInjecSimult	inc/stm32f10x_adc.h	94;"	d
ADC_Mode_RegSimult	inc/stm32f10x_adc.h	99;"	d
ADC_Mode_RegSimult_AlterTrig	inc/stm32f10x_adc.h	95;"	d
ADC_Mode_SlowInterl	inc/stm32f10x_adc.h	101;"	d
ADC_NbrOfChannel	inc/stm32f10x_adc.h	/^  uint8_t ADC_NbrOfChannel;               \/*!< Specifies the number of ADC channels that will be converted$/;"	m	struct:__anon30	access:public
ADC_RegularChannelConfig	inc/stm32f10x_adc.h	/^void ADC_RegularChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_SampleTime);$/;"	p	signature:(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_SampleTime)
ADC_RegularChannelConfig	src/stm32f10x_adc.c	/^void ADC_RegularChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_SampleTime)$/;"	f	signature:(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_SampleTime)
ADC_ResetCalibration	inc/stm32f10x_adc.h	/^void ADC_ResetCalibration(ADC_TypeDef* ADCx);$/;"	p	signature:(ADC_TypeDef* ADCx)
ADC_ResetCalibration	src/stm32f10x_adc.c	/^void ADC_ResetCalibration(ADC_TypeDef* ADCx)$/;"	f	signature:(ADC_TypeDef* ADCx)
ADC_SampleTime_13Cycles5	inc/stm32f10x_adc.h	214;"	d
ADC_SampleTime_1Cycles5	inc/stm32f10x_adc.h	212;"	d
ADC_SampleTime_239Cycles5	inc/stm32f10x_adc.h	219;"	d
ADC_SampleTime_28Cycles5	inc/stm32f10x_adc.h	215;"	d
ADC_SampleTime_41Cycles5	inc/stm32f10x_adc.h	216;"	d
ADC_SampleTime_55Cycles5	inc/stm32f10x_adc.h	217;"	d
ADC_SampleTime_71Cycles5	inc/stm32f10x_adc.h	218;"	d
ADC_SampleTime_7Cycles5	inc/stm32f10x_adc.h	213;"	d
ADC_ScanConvMode	inc/stm32f10x_adc.h	/^  FunctionalState ADC_ScanConvMode;       \/*!< Specifies whether the conversion is performed in$/;"	m	struct:__anon30	access:public
ADC_SetInjectedOffset	inc/stm32f10x_adc.h	/^void ADC_SetInjectedOffset(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset);$/;"	p	signature:(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset)
ADC_SetInjectedOffset	src/stm32f10x_adc.c	/^void ADC_SetInjectedOffset(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset)$/;"	f	signature:(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset)
ADC_SoftwareStartConvCmd	inc/stm32f10x_adc.h	/^void ADC_SoftwareStartConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState);$/;"	p	signature:(ADC_TypeDef* ADCx, FunctionalState NewState)
ADC_SoftwareStartConvCmd	src/stm32f10x_adc.c	/^void ADC_SoftwareStartConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)$/;"	f	signature:(ADC_TypeDef* ADCx, FunctionalState NewState)
ADC_SoftwareStartInjectedConvCmd	inc/stm32f10x_adc.h	/^void ADC_SoftwareStartInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState);$/;"	p	signature:(ADC_TypeDef* ADCx, FunctionalState NewState)
ADC_SoftwareStartInjectedConvCmd	src/stm32f10x_adc.c	/^void ADC_SoftwareStartInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)$/;"	f	signature:(ADC_TypeDef* ADCx, FunctionalState NewState)
ADC_StartCalibration	inc/stm32f10x_adc.h	/^void ADC_StartCalibration(ADC_TypeDef* ADCx);$/;"	p	signature:(ADC_TypeDef* ADCx)
ADC_StartCalibration	src/stm32f10x_adc.c	/^void ADC_StartCalibration(ADC_TypeDef* ADCx)$/;"	f	signature:(ADC_TypeDef* ADCx)
ADC_StructInit	inc/stm32f10x_adc.h	/^void ADC_StructInit(ADC_InitTypeDef* ADC_InitStruct);$/;"	p	signature:(ADC_InitTypeDef* ADC_InitStruct)
ADC_StructInit	src/stm32f10x_adc.c	/^void ADC_StructInit(ADC_InitTypeDef* ADC_InitStruct)$/;"	f	signature:(ADC_InitTypeDef* ADC_InitStruct)
ADC_TempSensorVrefintCmd	inc/stm32f10x_adc.h	/^void ADC_TempSensorVrefintCmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
ADC_TempSensorVrefintCmd	src/stm32f10x_adc.c	/^void ADC_TempSensorVrefintCmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
AFIO_OFFSET	src/stm32f10x_gpio.c	47;"	d	file:
AIRCR_VECTKEY_MASK	src/misc.c	46;"	d	file:
APBAHBPrescTable	src/stm32f10x_rcc.c	/^static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};$/;"	v	file:
ATACMD_BitNumber	src/stm32f10x_sdio.c	64;"	d	file:
BCR_FACCEN_Set	src/stm32f10x_fsmc.c	50;"	d	file:
BCR_MBKEN_Reset	src/stm32f10x_fsmc.c	49;"	d	file:
BCR_MBKEN_Set	src/stm32f10x_fsmc.c	48;"	d	file:
BDCR_ADDRESS	src/stm32f10x_rcc.c	179;"	d	file:
BDCR_BDRST_BB	src/stm32f10x_rcc.c	95;"	d	file:
BDCR_OFFSET	src/stm32f10x_rcc.c	89;"	d	file:
BDCR_RTCEN_BB	src/stm32f10x_rcc.c	91;"	d	file:
BDRST_BitNumber	src/stm32f10x_rcc.c	94;"	d	file:
BIT_Mask	src/stm32f10x_wwdg.c	62;"	d	file:
BKP_ClearFlag	inc/stm32f10x_bkp.h	/^void BKP_ClearFlag(void);$/;"	p	signature:(void)
BKP_ClearFlag	src/stm32f10x_bkp.c	/^void BKP_ClearFlag(void)$/;"	f	signature:(void)
BKP_ClearITPendingBit	inc/stm32f10x_bkp.h	/^void BKP_ClearITPendingBit(void);$/;"	p	signature:(void)
BKP_ClearITPendingBit	src/stm32f10x_bkp.c	/^void BKP_ClearITPendingBit(void)$/;"	f	signature:(void)
BKP_DR1	inc/stm32f10x_bkp.h	85;"	d
BKP_DR10	inc/stm32f10x_bkp.h	94;"	d
BKP_DR11	inc/stm32f10x_bkp.h	95;"	d
BKP_DR12	inc/stm32f10x_bkp.h	96;"	d
BKP_DR13	inc/stm32f10x_bkp.h	97;"	d
BKP_DR14	inc/stm32f10x_bkp.h	98;"	d
BKP_DR15	inc/stm32f10x_bkp.h	99;"	d
BKP_DR16	inc/stm32f10x_bkp.h	100;"	d
BKP_DR17	inc/stm32f10x_bkp.h	101;"	d
BKP_DR18	inc/stm32f10x_bkp.h	102;"	d
BKP_DR19	inc/stm32f10x_bkp.h	103;"	d
BKP_DR2	inc/stm32f10x_bkp.h	86;"	d
BKP_DR20	inc/stm32f10x_bkp.h	104;"	d
BKP_DR21	inc/stm32f10x_bkp.h	105;"	d
BKP_DR22	inc/stm32f10x_bkp.h	106;"	d
BKP_DR23	inc/stm32f10x_bkp.h	107;"	d
BKP_DR24	inc/stm32f10x_bkp.h	108;"	d
BKP_DR25	inc/stm32f10x_bkp.h	109;"	d
BKP_DR26	inc/stm32f10x_bkp.h	110;"	d
BKP_DR27	inc/stm32f10x_bkp.h	111;"	d
BKP_DR28	inc/stm32f10x_bkp.h	112;"	d
BKP_DR29	inc/stm32f10x_bkp.h	113;"	d
BKP_DR3	inc/stm32f10x_bkp.h	87;"	d
BKP_DR30	inc/stm32f10x_bkp.h	114;"	d
BKP_DR31	inc/stm32f10x_bkp.h	115;"	d
BKP_DR32	inc/stm32f10x_bkp.h	116;"	d
BKP_DR33	inc/stm32f10x_bkp.h	117;"	d
BKP_DR34	inc/stm32f10x_bkp.h	118;"	d
BKP_DR35	inc/stm32f10x_bkp.h	119;"	d
BKP_DR36	inc/stm32f10x_bkp.h	120;"	d
BKP_DR37	inc/stm32f10x_bkp.h	121;"	d
BKP_DR38	inc/stm32f10x_bkp.h	122;"	d
BKP_DR39	inc/stm32f10x_bkp.h	123;"	d
BKP_DR4	inc/stm32f10x_bkp.h	88;"	d
BKP_DR40	inc/stm32f10x_bkp.h	124;"	d
BKP_DR41	inc/stm32f10x_bkp.h	125;"	d
BKP_DR42	inc/stm32f10x_bkp.h	126;"	d
BKP_DR5	inc/stm32f10x_bkp.h	89;"	d
BKP_DR6	inc/stm32f10x_bkp.h	90;"	d
BKP_DR7	inc/stm32f10x_bkp.h	91;"	d
BKP_DR8	inc/stm32f10x_bkp.h	92;"	d
BKP_DR9	inc/stm32f10x_bkp.h	93;"	d
BKP_DeInit	inc/stm32f10x_bkp.h	/^void BKP_DeInit(void);$/;"	p	signature:(void)
BKP_DeInit	src/stm32f10x_bkp.c	/^void BKP_DeInit(void)$/;"	f	signature:(void)
BKP_GetFlagStatus	inc/stm32f10x_bkp.h	/^FlagStatus BKP_GetFlagStatus(void);$/;"	p	signature:(void)
BKP_GetFlagStatus	src/stm32f10x_bkp.c	/^FlagStatus BKP_GetFlagStatus(void)$/;"	f	signature:(void)
BKP_GetITStatus	inc/stm32f10x_bkp.h	/^ITStatus BKP_GetITStatus(void);$/;"	p	signature:(void)
BKP_GetITStatus	src/stm32f10x_bkp.c	/^ITStatus BKP_GetITStatus(void)$/;"	f	signature:(void)
BKP_ITConfig	inc/stm32f10x_bkp.h	/^void BKP_ITConfig(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
BKP_ITConfig	src/stm32f10x_bkp.c	/^void BKP_ITConfig(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
BKP_OFFSET	src/stm32f10x_bkp.c	47;"	d	file:
BKP_RTCOutputConfig	inc/stm32f10x_bkp.h	/^void BKP_RTCOutputConfig(uint16_t BKP_RTCOutputSource);$/;"	p	signature:(uint16_t BKP_RTCOutputSource)
BKP_RTCOutputConfig	src/stm32f10x_bkp.c	/^void BKP_RTCOutputConfig(uint16_t BKP_RTCOutputSource)$/;"	f	signature:(uint16_t BKP_RTCOutputSource)
BKP_RTCOutputSource_Alarm	inc/stm32f10x_bkp.h	71;"	d
BKP_RTCOutputSource_CalibClock	inc/stm32f10x_bkp.h	70;"	d
BKP_RTCOutputSource_None	inc/stm32f10x_bkp.h	69;"	d
BKP_RTCOutputSource_Second	inc/stm32f10x_bkp.h	72;"	d
BKP_ReadBackupRegister	inc/stm32f10x_bkp.h	/^uint16_t BKP_ReadBackupRegister(uint16_t BKP_DR);$/;"	p	signature:(uint16_t BKP_DR)
BKP_ReadBackupRegister	src/stm32f10x_bkp.c	/^uint16_t BKP_ReadBackupRegister(uint16_t BKP_DR)$/;"	f	signature:(uint16_t BKP_DR)
BKP_SetRTCCalibrationValue	inc/stm32f10x_bkp.h	/^void BKP_SetRTCCalibrationValue(uint8_t CalibrationValue);$/;"	p	signature:(uint8_t CalibrationValue)
BKP_SetRTCCalibrationValue	src/stm32f10x_bkp.c	/^void BKP_SetRTCCalibrationValue(uint8_t CalibrationValue)$/;"	f	signature:(uint8_t CalibrationValue)
BKP_TamperPinCmd	inc/stm32f10x_bkp.h	/^void BKP_TamperPinCmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
BKP_TamperPinCmd	src/stm32f10x_bkp.c	/^void BKP_TamperPinCmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
BKP_TamperPinLevelConfig	inc/stm32f10x_bkp.h	/^void BKP_TamperPinLevelConfig(uint16_t BKP_TamperPinLevel);$/;"	p	signature:(uint16_t BKP_TamperPinLevel)
BKP_TamperPinLevelConfig	src/stm32f10x_bkp.c	/^void BKP_TamperPinLevelConfig(uint16_t BKP_TamperPinLevel)$/;"	f	signature:(uint16_t BKP_TamperPinLevel)
BKP_TamperPinLevel_High	inc/stm32f10x_bkp.h	57;"	d
BKP_TamperPinLevel_Low	inc/stm32f10x_bkp.h	58;"	d
BKP_WriteBackupRegister	inc/stm32f10x_bkp.h	/^void BKP_WriteBackupRegister(uint16_t BKP_DR, uint16_t Data);$/;"	p	signature:(uint16_t BKP_DR, uint16_t Data)
BKP_WriteBackupRegister	src/stm32f10x_bkp.c	/^void BKP_WriteBackupRegister(uint16_t BKP_DR, uint16_t Data)$/;"	f	signature:(uint16_t BKP_DR, uint16_t Data)
BitAction	inc/stm32f10x_gpio.h	/^}BitAction;$/;"	t	typeref:enum:__anon28
Bit_RESET	inc/stm32f10x_gpio.h	/^{ Bit_RESET = 0,$/;"	e	enum:__anon28
Bit_SET	inc/stm32f10x_gpio.h	/^  Bit_SET$/;"	e	enum:__anon28
CANINITFAILED	inc/stm32f10x_can.h	190;"	d
CANINITOK	inc/stm32f10x_can.h	191;"	d
CANSLEEPFAILED	inc/stm32f10x_can.h	409;"	d
CANSLEEPOK	inc/stm32f10x_can.h	410;"	d
CANTXFAILED	inc/stm32f10x_can.h	383;"	d
CANTXOK	inc/stm32f10x_can.h	384;"	d
CANTXPENDING	inc/stm32f10x_can.h	385;"	d
CANWAKEUPFAILED	inc/stm32f10x_can.h	420;"	d
CANWAKEUPOK	inc/stm32f10x_can.h	421;"	d
CAN_ABOM	inc/stm32f10x_can.h	/^  FunctionalState CAN_ABOM;  \/*!< Enable or disable the automatic bus-off management.$/;"	m	struct:__anon3	access:public
CAN_AWUM	inc/stm32f10x_can.h	/^  FunctionalState CAN_AWUM;  \/*!< Enable or disable the automatic wake-up mode. $/;"	m	struct:__anon3	access:public
CAN_BS1	inc/stm32f10x_can.h	/^  uint8_t CAN_BS1;          \/*!< Specifies the number of time quanta in Bit Segment 1.$/;"	m	struct:__anon3	access:public
CAN_BS1_10tq	inc/stm32f10x_can.h	240;"	d
CAN_BS1_11tq	inc/stm32f10x_can.h	241;"	d
CAN_BS1_12tq	inc/stm32f10x_can.h	242;"	d
CAN_BS1_13tq	inc/stm32f10x_can.h	243;"	d
CAN_BS1_14tq	inc/stm32f10x_can.h	244;"	d
CAN_BS1_15tq	inc/stm32f10x_can.h	245;"	d
CAN_BS1_16tq	inc/stm32f10x_can.h	246;"	d
CAN_BS1_1tq	inc/stm32f10x_can.h	231;"	d
CAN_BS1_2tq	inc/stm32f10x_can.h	232;"	d
CAN_BS1_3tq	inc/stm32f10x_can.h	233;"	d
CAN_BS1_4tq	inc/stm32f10x_can.h	234;"	d
CAN_BS1_5tq	inc/stm32f10x_can.h	235;"	d
CAN_BS1_6tq	inc/stm32f10x_can.h	236;"	d
CAN_BS1_7tq	inc/stm32f10x_can.h	237;"	d
CAN_BS1_8tq	inc/stm32f10x_can.h	238;"	d
CAN_BS1_9tq	inc/stm32f10x_can.h	239;"	d
CAN_BS2	inc/stm32f10x_can.h	/^  uint8_t CAN_BS2;          \/*!< Specifies the number of time quanta in Bit Segment 2.$/;"	m	struct:__anon3	access:public
CAN_BS2_1tq	inc/stm32f10x_can.h	257;"	d
CAN_BS2_2tq	inc/stm32f10x_can.h	258;"	d
CAN_BS2_3tq	inc/stm32f10x_can.h	259;"	d
CAN_BS2_4tq	inc/stm32f10x_can.h	260;"	d
CAN_BS2_5tq	inc/stm32f10x_can.h	261;"	d
CAN_BS2_6tq	inc/stm32f10x_can.h	262;"	d
CAN_BS2_7tq	inc/stm32f10x_can.h	263;"	d
CAN_BS2_8tq	inc/stm32f10x_can.h	264;"	d
CAN_CancelTransmit	inc/stm32f10x_can.h	/^void CAN_CancelTransmit(CAN_TypeDef* CANx, uint8_t Mailbox);$/;"	p	signature:(CAN_TypeDef* CANx, uint8_t Mailbox)
CAN_CancelTransmit	src/stm32f10x_can.c	/^void CAN_CancelTransmit(CAN_TypeDef* CANx, uint8_t Mailbox)$/;"	f	signature:(CAN_TypeDef* CANx, uint8_t Mailbox)
CAN_ClearFlag	inc/stm32f10x_can.h	/^void CAN_ClearFlag(CAN_TypeDef* CANx, uint32_t CAN_FLAG);$/;"	p	signature:(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
CAN_ClearFlag	src/stm32f10x_can.c	/^void CAN_ClearFlag(CAN_TypeDef* CANx, uint32_t CAN_FLAG)$/;"	f	signature:(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
CAN_ClearITPendingBit	inc/stm32f10x_can.h	/^void CAN_ClearITPendingBit(CAN_TypeDef* CANx, uint32_t CAN_IT);$/;"	p	signature:(CAN_TypeDef* CANx, uint32_t CAN_IT)
CAN_ClearITPendingBit	src/stm32f10x_can.c	/^void CAN_ClearITPendingBit(CAN_TypeDef* CANx, uint32_t CAN_IT)$/;"	f	signature:(CAN_TypeDef* CANx, uint32_t CAN_IT)
CAN_DBGFreeze	inc/stm32f10x_can.h	/^void CAN_DBGFreeze(CAN_TypeDef* CANx, FunctionalState NewState);$/;"	p	signature:(CAN_TypeDef* CANx, FunctionalState NewState)
CAN_DBGFreeze	src/stm32f10x_can.c	/^void CAN_DBGFreeze(CAN_TypeDef* CANx, FunctionalState NewState)$/;"	f	signature:(CAN_TypeDef* CANx, FunctionalState NewState)
CAN_DeInit	inc/stm32f10x_can.h	/^void CAN_DeInit(CAN_TypeDef* CANx);$/;"	p	signature:(CAN_TypeDef* CANx)
CAN_DeInit	src/stm32f10x_can.c	/^void CAN_DeInit(CAN_TypeDef* CANx)$/;"	f	signature:(CAN_TypeDef* CANx)
CAN_FIFO0	inc/stm32f10x_can.h	396;"	d
CAN_FIFO1	inc/stm32f10x_can.h	397;"	d
CAN_FIFORelease	inc/stm32f10x_can.h	/^void CAN_FIFORelease(CAN_TypeDef* CANx, uint8_t FIFONumber);$/;"	p	signature:(CAN_TypeDef* CANx, uint8_t FIFONumber)
CAN_FIFORelease	src/stm32f10x_can.c	/^void CAN_FIFORelease(CAN_TypeDef* CANx, uint8_t FIFONumber)$/;"	f	signature:(CAN_TypeDef* CANx, uint8_t FIFONumber)
CAN_FLAG_BOF	inc/stm32f10x_can.h	433;"	d
CAN_FLAG_EPV	inc/stm32f10x_can.h	432;"	d
CAN_FLAG_EWG	inc/stm32f10x_can.h	431;"	d
CAN_FilterActivation	inc/stm32f10x_can.h	/^  FunctionalState CAN_FilterActivation;  \/*!< Enable or disable the filter.$/;"	m	struct:__anon4	access:public
CAN_FilterFIFO0	inc/stm32f10x_can.h	325;"	d
CAN_FilterFIFO1	inc/stm32f10x_can.h	326;"	d
CAN_FilterFIFOAssignment	inc/stm32f10x_can.h	/^  uint16_t CAN_FilterFIFOAssignment;     \/*!< Specifies the FIFO (0 or 1) which will be assigned to the filter.$/;"	m	struct:__anon4	access:public
CAN_FilterIdHigh	inc/stm32f10x_can.h	/^  uint16_t CAN_FilterIdHigh;             \/*!< Specifies the filter identification number (MSBs for a 32-bit$/;"	m	struct:__anon4	access:public
CAN_FilterIdLow	inc/stm32f10x_can.h	/^  uint16_t CAN_FilterIdLow;              \/*!< Specifies the filter identification number (LSBs for a 32-bit$/;"	m	struct:__anon4	access:public
CAN_FilterInit	inc/stm32f10x_can.h	/^void CAN_FilterInit(CAN_FilterInitTypeDef* CAN_FilterInitStruct);$/;"	p	signature:(CAN_FilterInitTypeDef* CAN_FilterInitStruct)
CAN_FilterInit	src/stm32f10x_can.c	/^void CAN_FilterInit(CAN_FilterInitTypeDef* CAN_FilterInitStruct)$/;"	f	signature:(CAN_FilterInitTypeDef* CAN_FilterInitStruct)
CAN_FilterInitTypeDef	inc/stm32f10x_can.h	/^} CAN_FilterInitTypeDef;$/;"	t	typeref:struct:__anon4
CAN_FilterMaskIdHigh	inc/stm32f10x_can.h	/^  uint16_t CAN_FilterMaskIdHigh;         \/*!< Specifies the filter mask number or identification number,$/;"	m	struct:__anon4	access:public
CAN_FilterMaskIdLow	inc/stm32f10x_can.h	/^  uint16_t CAN_FilterMaskIdLow;          \/*!< Specifies the filter mask number or identification number,$/;"	m	struct:__anon4	access:public
CAN_FilterMode	inc/stm32f10x_can.h	/^  uint8_t CAN_FilterMode;                \/*!< Specifies the filter mode to be initialized.$/;"	m	struct:__anon4	access:public
CAN_FilterMode_IdList	inc/stm32f10x_can.h	299;"	d
CAN_FilterMode_IdMask	inc/stm32f10x_can.h	298;"	d
CAN_FilterNumber	inc/stm32f10x_can.h	/^  uint8_t CAN_FilterNumber;              \/*!< Specifies the filter which will be initialized. It ranges from 0 to 13. *\/$/;"	m	struct:__anon4	access:public
CAN_FilterScale	inc/stm32f10x_can.h	/^  uint8_t CAN_FilterScale;               \/*!< Specifies the filter scale.$/;"	m	struct:__anon4	access:public
CAN_FilterScale_16bit	inc/stm32f10x_can.h	311;"	d
CAN_FilterScale_32bit	inc/stm32f10x_can.h	312;"	d
CAN_GetFlagStatus	inc/stm32f10x_can.h	/^FlagStatus CAN_GetFlagStatus(CAN_TypeDef* CANx, uint32_t CAN_FLAG);$/;"	p	signature:(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
CAN_GetFlagStatus	src/stm32f10x_can.c	/^FlagStatus CAN_GetFlagStatus(CAN_TypeDef* CANx, uint32_t CAN_FLAG)$/;"	f	signature:(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
CAN_GetITStatus	inc/stm32f10x_can.h	/^ITStatus CAN_GetITStatus(CAN_TypeDef* CANx, uint32_t CAN_IT);$/;"	p	signature:(CAN_TypeDef* CANx, uint32_t CAN_IT)
CAN_GetITStatus	src/stm32f10x_can.c	/^ITStatus CAN_GetITStatus(CAN_TypeDef* CANx, uint32_t CAN_IT)$/;"	f	signature:(CAN_TypeDef* CANx, uint32_t CAN_IT)
CAN_ID_EXT	inc/stm32f10x_can.h	360;"	d
CAN_ID_STD	inc/stm32f10x_can.h	359;"	d
CAN_ITConfig	inc/stm32f10x_can.h	/^void CAN_ITConfig(CAN_TypeDef* CANx, uint32_t CAN_IT, FunctionalState NewState);$/;"	p	signature:(CAN_TypeDef* CANx, uint32_t CAN_IT, FunctionalState NewState)
CAN_ITConfig	src/stm32f10x_can.c	/^void CAN_ITConfig(CAN_TypeDef* CANx, uint32_t CAN_IT, FunctionalState NewState)$/;"	f	signature:(CAN_TypeDef* CANx, uint32_t CAN_IT, FunctionalState NewState)
CAN_IT_BOF	inc/stm32f10x_can.h	458;"	d
CAN_IT_EPV	inc/stm32f10x_can.h	457;"	d
CAN_IT_ERR	inc/stm32f10x_can.h	460;"	d
CAN_IT_EWG	inc/stm32f10x_can.h	456;"	d
CAN_IT_FF0	inc/stm32f10x_can.h	451;"	d
CAN_IT_FF1	inc/stm32f10x_can.h	454;"	d
CAN_IT_FMP0	inc/stm32f10x_can.h	450;"	d
CAN_IT_FMP1	inc/stm32f10x_can.h	453;"	d
CAN_IT_FOV0	inc/stm32f10x_can.h	452;"	d
CAN_IT_FOV1	inc/stm32f10x_can.h	455;"	d
CAN_IT_LEC	inc/stm32f10x_can.h	459;"	d
CAN_IT_RQCP0	inc/stm32f10x_can.h	446;"	d
CAN_IT_RQCP1	inc/stm32f10x_can.h	447;"	d
CAN_IT_RQCP2	inc/stm32f10x_can.h	448;"	d
CAN_IT_SLK	inc/stm32f10x_can.h	462;"	d
CAN_IT_TME	inc/stm32f10x_can.h	449;"	d
CAN_IT_WKU	inc/stm32f10x_can.h	461;"	d
CAN_Init	inc/stm32f10x_can.h	/^uint8_t CAN_Init(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct);$/;"	p	signature:(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct)
CAN_Init	src/stm32f10x_can.c	/^uint8_t CAN_Init(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct)$/;"	f	signature:(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct)
CAN_InitTypeDef	inc/stm32f10x_can.h	/^} CAN_InitTypeDef;$/;"	t	typeref:struct:__anon3
CAN_MessagePending	inc/stm32f10x_can.h	/^uint8_t CAN_MessagePending(CAN_TypeDef* CANx, uint8_t FIFONumber);$/;"	p	signature:(CAN_TypeDef* CANx, uint8_t FIFONumber)
CAN_MessagePending	src/stm32f10x_can.c	/^uint8_t CAN_MessagePending(CAN_TypeDef* CANx, uint8_t FIFONumber)$/;"	f	signature:(CAN_TypeDef* CANx, uint8_t FIFONumber)
CAN_Mode	inc/stm32f10x_can.h	/^  uint8_t CAN_Mode;         \/*!< Specifies the CAN operating mode.$/;"	m	struct:__anon3	access:public
CAN_Mode_LoopBack	inc/stm32f10x_can.h	202;"	d
CAN_Mode_Normal	inc/stm32f10x_can.h	201;"	d
CAN_Mode_Silent	inc/stm32f10x_can.h	203;"	d
CAN_Mode_Silent_LoopBack	inc/stm32f10x_can.h	204;"	d
CAN_NART	inc/stm32f10x_can.h	/^  FunctionalState CAN_NART;  \/*!< Enable or disable the no-automatic retransmission mode.$/;"	m	struct:__anon3	access:public
CAN_NO_MB	inc/stm32f10x_can.h	386;"	d
CAN_Prescaler	inc/stm32f10x_can.h	/^  uint16_t CAN_Prescaler;   \/*!< Specifies the length of a time quantum. It ranges from 1 to 1024. *\/$/;"	m	struct:__anon3	access:public
CAN_RFLM	inc/stm32f10x_can.h	/^  FunctionalState CAN_RFLM;  \/*!< Enable or disable the Receive FIFO Locked mode.$/;"	m	struct:__anon3	access:public
CAN_RTR_DATA	inc/stm32f10x_can.h	371;"	d
CAN_RTR_REMOTE	inc/stm32f10x_can.h	372;"	d
CAN_Receive	inc/stm32f10x_can.h	/^void CAN_Receive(CAN_TypeDef* CANx, uint8_t FIFONumber, CanRxMsg* RxMessage);$/;"	p	signature:(CAN_TypeDef* CANx, uint8_t FIFONumber, CanRxMsg* RxMessage)
CAN_Receive	src/stm32f10x_can.c	/^void CAN_Receive(CAN_TypeDef* CANx, uint8_t FIFONumber, CanRxMsg* RxMessage)$/;"	f	signature:(CAN_TypeDef* CANx, uint8_t FIFONumber, CanRxMsg* RxMessage)
CAN_SJW	inc/stm32f10x_can.h	/^  uint8_t CAN_SJW;          \/*!< Specifies the maximum number of time quanta the CAN hardware$/;"	m	struct:__anon3	access:public
CAN_SJW_1tq	inc/stm32f10x_can.h	216;"	d
CAN_SJW_2tq	inc/stm32f10x_can.h	217;"	d
CAN_SJW_3tq	inc/stm32f10x_can.h	218;"	d
CAN_SJW_4tq	inc/stm32f10x_can.h	219;"	d
CAN_SlaveStartBank	inc/stm32f10x_can.h	/^void CAN_SlaveStartBank(uint8_t CAN_BankNumber); $/;"	p	signature:(uint8_t CAN_BankNumber)
CAN_SlaveStartBank	src/stm32f10x_can.c	/^void CAN_SlaveStartBank(uint8_t CAN_BankNumber) $/;"	f	signature:(uint8_t CAN_BankNumber)
CAN_Sleep	inc/stm32f10x_can.h	/^uint8_t CAN_Sleep(CAN_TypeDef* CANx);$/;"	p	signature:(CAN_TypeDef* CANx)
CAN_Sleep	src/stm32f10x_can.c	/^uint8_t CAN_Sleep(CAN_TypeDef* CANx)$/;"	f	signature:(CAN_TypeDef* CANx)
CAN_StructInit	inc/stm32f10x_can.h	/^void CAN_StructInit(CAN_InitTypeDef* CAN_InitStruct);$/;"	p	signature:(CAN_InitTypeDef* CAN_InitStruct)
CAN_StructInit	src/stm32f10x_can.c	/^void CAN_StructInit(CAN_InitTypeDef* CAN_InitStruct)$/;"	f	signature:(CAN_InitTypeDef* CAN_InitStruct)
CAN_TTCM	inc/stm32f10x_can.h	/^  FunctionalState CAN_TTCM; \/*!< Enable or disable the time triggered communication mode.$/;"	m	struct:__anon3	access:public
CAN_TXFP	inc/stm32f10x_can.h	/^  FunctionalState CAN_TXFP;  \/*!< Enable or disable the transmit FIFO priority.$/;"	m	struct:__anon3	access:public
CAN_Transmit	inc/stm32f10x_can.h	/^uint8_t CAN_Transmit(CAN_TypeDef* CANx, CanTxMsg* TxMessage);$/;"	p	signature:(CAN_TypeDef* CANx, CanTxMsg* TxMessage)
CAN_Transmit	src/stm32f10x_can.c	/^uint8_t CAN_Transmit(CAN_TypeDef* CANx, CanTxMsg* TxMessage)$/;"	f	signature:(CAN_TypeDef* CANx, CanTxMsg* TxMessage)
CAN_TransmitStatus	inc/stm32f10x_can.h	/^uint8_t CAN_TransmitStatus(CAN_TypeDef* CANx, uint8_t TransmitMailbox);$/;"	p	signature:(CAN_TypeDef* CANx, uint8_t TransmitMailbox)
CAN_TransmitStatus	src/stm32f10x_can.c	/^uint8_t CAN_TransmitStatus(CAN_TypeDef* CANx, uint8_t TransmitMailbox)$/;"	f	signature:(CAN_TypeDef* CANx, uint8_t TransmitMailbox)
CAN_WakeUp	inc/stm32f10x_can.h	/^uint8_t CAN_WakeUp(CAN_TypeDef* CANx);$/;"	p	signature:(CAN_TypeDef* CANx)
CAN_WakeUp	src/stm32f10x_can.c	/^uint8_t CAN_WakeUp(CAN_TypeDef* CANx)$/;"	f	signature:(CAN_TypeDef* CANx)
CCER_CCE_Set	src/stm32f10x_tim.c	49;"	d	file:
CCER_CCNE_Set	src/stm32f10x_tim.c	50;"	d	file:
CCMR_Offset	src/stm32f10x_tim.c	48;"	d	file:
CCR_CCR_Set	src/stm32f10x_i2c.c	116;"	d	file:
CCR_CLEAR_Mask	src/stm32f10x_dma.c	69;"	d	file:
CCR_ENABLE_Reset	src/stm32f10x_dma.c	47;"	d	file:
CCR_ENABLE_Set	src/stm32f10x_dma.c	46;"	d	file:
CCR_FS_Set	src/stm32f10x_i2c.c	113;"	d	file:
CEC_BitPeriodFlexibleMode	inc/stm32f10x_cec.h	81;"	d
CEC_BitPeriodMode	inc/stm32f10x_cec.h	/^  uint16_t CEC_BitPeriodMode; \/*!< Configures the CEC Bit Period Error Mode. $/;"	m	struct:__anon7	access:public
CEC_BitPeriodStdMode	inc/stm32f10x_cec.h	80;"	d
CEC_BitTimingErrFreeMode	inc/stm32f10x_cec.h	69;"	d
CEC_BitTimingMode	inc/stm32f10x_cec.h	/^  uint16_t CEC_BitTimingMode; \/*!< Configures the CEC Bit Timing Error Mode. $/;"	m	struct:__anon7	access:public
CEC_BitTimingStdMode	inc/stm32f10x_cec.h	68;"	d
CEC_ClearFlag	inc/stm32f10x_cec.h	/^void CEC_ClearFlag(uint32_t CEC_FLAG);$/;"	p	signature:(uint32_t CEC_FLAG)
CEC_ClearFlag	src/stm32f10x_cec.c	/^void CEC_ClearFlag(uint32_t CEC_FLAG)$/;"	f	signature:(uint32_t CEC_FLAG)
CEC_ClearITPendingBit	inc/stm32f10x_cec.h	/^void CEC_ClearITPendingBit(uint16_t CEC_IT);$/;"	p	signature:(uint16_t CEC_IT)
CEC_ClearITPendingBit	src/stm32f10x_cec.c	/^void CEC_ClearITPendingBit(uint16_t CEC_IT)$/;"	f	signature:(uint16_t CEC_IT)
CEC_Cmd	inc/stm32f10x_cec.h	/^void CEC_Cmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
CEC_Cmd	src/stm32f10x_cec.c	/^void CEC_Cmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
CEC_DeInit	inc/stm32f10x_cec.h	/^void CEC_DeInit(void);$/;"	p	signature:(void)
CEC_DeInit	src/stm32f10x_cec.c	/^void CEC_DeInit(void)$/;"	f	signature:(void)
CEC_EndOfMessageCmd	inc/stm32f10x_cec.h	/^void CEC_EndOfMessageCmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
CEC_EndOfMessageCmd	src/stm32f10x_cec.c	/^void CEC_EndOfMessageCmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
CEC_FLAG_ACKE	inc/stm32f10x_cec.h	132;"	d
CEC_FLAG_BPE	inc/stm32f10x_cec.h	129;"	d
CEC_FLAG_BTE	inc/stm32f10x_cec.h	128;"	d
CEC_FLAG_LINE	inc/stm32f10x_cec.h	133;"	d
CEC_FLAG_RBTF	inc/stm32f10x_cec.h	145;"	d
CEC_FLAG_RBTFE	inc/stm32f10x_cec.h	130;"	d
CEC_FLAG_REOM	inc/stm32f10x_cec.h	143;"	d
CEC_FLAG_RERR	inc/stm32f10x_cec.h	144;"	d
CEC_FLAG_RSOM	inc/stm32f10x_cec.h	142;"	d
CEC_FLAG_SBE	inc/stm32f10x_cec.h	131;"	d
CEC_FLAG_TBTFE	inc/stm32f10x_cec.h	134;"	d
CEC_FLAG_TBTRF	inc/stm32f10x_cec.h	141;"	d
CEC_FLAG_TEOM	inc/stm32f10x_cec.h	139;"	d
CEC_FLAG_TERR	inc/stm32f10x_cec.h	140;"	d
CEC_GetFlagStatus	inc/stm32f10x_cec.h	/^FlagStatus CEC_GetFlagStatus(uint32_t CEC_FLAG);$/;"	p	signature:(uint32_t CEC_FLAG)
CEC_GetFlagStatus	src/stm32f10x_cec.c	/^FlagStatus CEC_GetFlagStatus(uint32_t CEC_FLAG) $/;"	f	signature:(uint32_t CEC_FLAG)
CEC_GetITStatus	inc/stm32f10x_cec.h	/^ITStatus CEC_GetITStatus(uint8_t CEC_IT);$/;"	p	signature:(uint8_t CEC_IT)
CEC_GetITStatus	src/stm32f10x_cec.c	/^ITStatus CEC_GetITStatus(uint8_t CEC_IT)$/;"	f	signature:(uint8_t CEC_IT)
CEC_ITConfig	inc/stm32f10x_cec.h	/^void CEC_ITConfig(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
CEC_ITConfig	src/stm32f10x_cec.c	/^void CEC_ITConfig(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
CEC_IT_RBTF	inc/stm32f10x_cec.h	96;"	d
CEC_IT_RERR	inc/stm32f10x_cec.h	95;"	d
CEC_IT_TBTRF	inc/stm32f10x_cec.h	94;"	d
CEC_IT_TERR	inc/stm32f10x_cec.h	93;"	d
CEC_Init	inc/stm32f10x_cec.h	/^void CEC_Init(CEC_InitTypeDef* CEC_InitStruct);$/;"	p	signature:(CEC_InitTypeDef* CEC_InitStruct)
CEC_Init	src/stm32f10x_cec.c	/^void CEC_Init(CEC_InitTypeDef* CEC_InitStruct)$/;"	f	signature:(CEC_InitTypeDef* CEC_InitStruct)
CEC_InitTypeDef	inc/stm32f10x_cec.h	/^}CEC_InitTypeDef;$/;"	t	typeref:struct:__anon7
CEC_OFFSET	src/stm32f10x_cec.c	48;"	d	file:
CEC_OwnAddressConfig	inc/stm32f10x_cec.h	/^void CEC_OwnAddressConfig(uint8_t CEC_OwnAddress);$/;"	p	signature:(uint8_t CEC_OwnAddress)
CEC_OwnAddressConfig	src/stm32f10x_cec.c	/^void CEC_OwnAddressConfig(uint8_t CEC_OwnAddress)$/;"	f	signature:(uint8_t CEC_OwnAddress)
CEC_ReceiveDataByte	inc/stm32f10x_cec.h	/^uint8_t CEC_ReceiveDataByte(void);$/;"	p	signature:(void)
CEC_ReceiveDataByte	src/stm32f10x_cec.c	/^uint8_t CEC_ReceiveDataByte(void)$/;"	f	signature:(void)
CEC_SendDataByte	inc/stm32f10x_cec.h	/^void CEC_SendDataByte(uint8_t Data);$/;"	p	signature:(uint8_t Data)
CEC_SendDataByte	src/stm32f10x_cec.c	/^void CEC_SendDataByte(uint8_t Data)$/;"	f	signature:(uint8_t Data)
CEC_SetPrescaler	inc/stm32f10x_cec.h	/^void CEC_SetPrescaler(uint16_t CEC_Prescaler);$/;"	p	signature:(uint16_t CEC_Prescaler)
CEC_SetPrescaler	src/stm32f10x_cec.c	/^void CEC_SetPrescaler(uint16_t CEC_Prescaler)$/;"	f	signature:(uint16_t CEC_Prescaler)
CEC_StartOfMessage	inc/stm32f10x_cec.h	/^void CEC_StartOfMessage(void);$/;"	p	signature:(void)
CEC_StartOfMessage	src/stm32f10x_cec.c	/^void CEC_StartOfMessage(void)$/;"	f	signature:(void)
CFGR2_I2S2SRC_BB	src/stm32f10x_rcc.c	110;"	d	file:
CFGR2_I2S3SRC_BB	src/stm32f10x_rcc.c	114;"	d	file:
CFGR2_OFFSET	src/stm32f10x_rcc.c	108;"	d	file:
CFGR2_PLL2MUL	src/stm32f10x_rcc.c	157;"	d	file:
CFGR2_PLL3MUL	src/stm32f10x_rcc.c	158;"	d	file:
CFGR2_PREDIV1	src/stm32f10x_rcc.c	153;"	d	file:
CFGR2_PREDIV1SRC	src/stm32f10x_rcc.c	152;"	d	file:
CFGR2_PREDIV2	src/stm32f10x_rcc.c	156;"	d	file:
CFGR_ADCPRE_Reset_Mask	src/stm32f10x_rcc.c	144;"	d	file:
CFGR_ADCPRE_Set_Mask	src/stm32f10x_rcc.c	145;"	d	file:
CFGR_BYTE4_ADDRESS	src/stm32f10x_rcc.c	176;"	d	file:
CFGR_CLEAR_Mask	src/stm32f10x_cec.c	72;"	d	file:
CFGR_HPRE_Reset_Mask	src/stm32f10x_rcc.c	138;"	d	file:
CFGR_HPRE_Set_Mask	src/stm32f10x_rcc.c	139;"	d	file:
CFGR_IE_BB	src/stm32f10x_cec.c	59;"	d	file:
CFGR_OFFSET	src/stm32f10x_cec.c	53;"	d	file:
CFGR_OFFSET	src/stm32f10x_rcc.c	76;"	d	file:
CFGR_OTGFSPRE_BB	src/stm32f10x_rcc.c	83;"	d	file:
CFGR_PE_BB	src/stm32f10x_cec.c	55;"	d	file:
CFGR_PLLMull_Mask	src/stm32f10x_rcc.c	133;"	d	file:
CFGR_PLLSRC_Mask	src/stm32f10x_rcc.c	134;"	d	file:
CFGR_PLLXTPRE_Mask	src/stm32f10x_rcc.c	135;"	d	file:
CFGR_PLL_Mask	src/stm32f10x_rcc.c	128;"	d	file:
CFGR_PLL_Mask	src/stm32f10x_rcc.c	130;"	d	file:
CFGR_PPRE1_Reset_Mask	src/stm32f10x_rcc.c	140;"	d	file:
CFGR_PPRE1_Set_Mask	src/stm32f10x_rcc.c	141;"	d	file:
CFGR_PPRE2_Reset_Mask	src/stm32f10x_rcc.c	142;"	d	file:
CFGR_PPRE2_Set_Mask	src/stm32f10x_rcc.c	143;"	d	file:
CFGR_SWS_Mask	src/stm32f10x_rcc.c	136;"	d	file:
CFGR_SW_Mask	src/stm32f10x_rcc.c	137;"	d	file:
CFGR_USBPRE_BB	src/stm32f10x_rcc.c	80;"	d	file:
CFR_EWI_BB	src/stm32f10x_wwdg.c	52;"	d	file:
CFR_OFFSET	src/stm32f10x_wwdg.c	50;"	d	file:
CFR_WDGTB_Mask	src/stm32f10x_wwdg.c	60;"	d	file:
CFR_W_Mask	src/stm32f10x_wwdg.c	61;"	d	file:
CIR_BYTE2_ADDRESS	src/stm32f10x_rcc.c	170;"	d	file:
CIR_BYTE3_ADDRESS	src/stm32f10x_rcc.c	173;"	d	file:
CLKCR_CLEAR_MASK	src/stm32f10x_sdio.c	95;"	d	file:
CLKCR_CLKEN_BB	src/stm32f10x_sdio.c	46;"	d	file:
CLKCR_OFFSET	src/stm32f10x_sdio.c	44;"	d	file:
CLKEN_BitNumber	src/stm32f10x_sdio.c	45;"	d	file:
CMD_ATACMD_BB	src/stm32f10x_sdio.c	65;"	d	file:
CMD_CLEAR_MASK	src/stm32f10x_sdio.c	110;"	d	file:
CMD_ENCMDCOMPL_BB	src/stm32f10x_sdio.c	57;"	d	file:
CMD_NIEN_BB	src/stm32f10x_sdio.c	61;"	d	file:
CMD_OFFSET	src/stm32f10x_sdio.c	51;"	d	file:
CMD_SDIOSUSPEND_BB	src/stm32f10x_sdio.c	53;"	d	file:
CR1_ACK_Reset	src/stm32f10x_i2c.c	61;"	d	file:
CR1_ACK_Set	src/stm32f10x_i2c.c	60;"	d	file:
CR1_AWDCH_Reset	src/stm32f10x_adc.c	62;"	d	file:
CR1_AWDMode_Reset	src/stm32f10x_adc.c	65;"	d	file:
CR1_CLEAR_Mask	src/stm32f10x_adc.c	68;"	d	file:
CR1_CLEAR_Mask	src/stm32f10x_i2c.c	88;"	d	file:
CR1_CLEAR_Mask	src/stm32f10x_spi.c	67;"	d	file:
CR1_CLEAR_Mask	src/stm32f10x_usart.c	54;"	d	file:
CR1_CRCEN_Reset	src/stm32f10x_spi.c	60;"	d	file:
CR1_CRCEN_Set	src/stm32f10x_spi.c	59;"	d	file:
CR1_CRCNext_Set	src/stm32f10x_spi.c	56;"	d	file:
CR1_DISCEN_Reset	src/stm32f10x_adc.c	51;"	d	file:
CR1_DISCEN_Set	src/stm32f10x_adc.c	50;"	d	file:
CR1_DISCNUM_Reset	src/stm32f10x_adc.c	47;"	d	file:
CR1_ENARP_Reset	src/stm32f10x_i2c.c	81;"	d	file:
CR1_ENARP_Set	src/stm32f10x_i2c.c	80;"	d	file:
CR1_ENGC_Reset	src/stm32f10x_i2c.c	65;"	d	file:
CR1_ENGC_Set	src/stm32f10x_i2c.c	64;"	d	file:
CR1_ENPEC_Reset	src/stm32f10x_i2c.c	77;"	d	file:
CR1_ENPEC_Set	src/stm32f10x_i2c.c	76;"	d	file:
CR1_JAUTO_Reset	src/stm32f10x_adc.c	55;"	d	file:
CR1_JAUTO_Set	src/stm32f10x_adc.c	54;"	d	file:
CR1_JDISCEN_Reset	src/stm32f10x_adc.c	59;"	d	file:
CR1_JDISCEN_Set	src/stm32f10x_adc.c	58;"	d	file:
CR1_NOSTRETCH_Reset	src/stm32f10x_i2c.c	85;"	d	file:
CR1_NOSTRETCH_Set	src/stm32f10x_i2c.c	84;"	d	file:
CR1_OVER8_Reset	src/stm32f10x_usart.c	84;"	d	file:
CR1_OVER8_Set	src/stm32f10x_usart.c	83;"	d	file:
CR1_PEC_Reset	src/stm32f10x_i2c.c	73;"	d	file:
CR1_PEC_Set	src/stm32f10x_i2c.c	72;"	d	file:
CR1_PE_Reset	src/stm32f10x_i2c.c	49;"	d	file:
CR1_PE_Set	src/stm32f10x_i2c.c	48;"	d	file:
CR1_RWU_Reset	src/stm32f10x_usart.c	52;"	d	file:
CR1_RWU_Set	src/stm32f10x_usart.c	51;"	d	file:
CR1_SBK_Set	src/stm32f10x_usart.c	53;"	d	file:
CR1_SPE_Reset	src/stm32f10x_spi.c	49;"	d	file:
CR1_SPE_Set	src/stm32f10x_spi.c	48;"	d	file:
CR1_START_Reset	src/stm32f10x_i2c.c	53;"	d	file:
CR1_START_Set	src/stm32f10x_i2c.c	52;"	d	file:
CR1_STOP_Reset	src/stm32f10x_i2c.c	57;"	d	file:
CR1_STOP_Set	src/stm32f10x_i2c.c	56;"	d	file:
CR1_SWRST_Reset	src/stm32f10x_i2c.c	69;"	d	file:
CR1_SWRST_Set	src/stm32f10x_i2c.c	68;"	d	file:
CR1_UE_Reset	src/stm32f10x_usart.c	47;"	d	file:
CR1_UE_Set	src/stm32f10x_usart.c	46;"	d	file:
CR1_WAKE_Mask	src/stm32f10x_usart.c	49;"	d	file:
CR2_ADON_Reset	src/stm32f10x_adc.c	72;"	d	file:
CR2_ADON_Set	src/stm32f10x_adc.c	71;"	d	file:
CR2_Address_Mask	src/stm32f10x_usart.c	55;"	d	file:
CR2_CAL_Set	src/stm32f10x_adc.c	82;"	d	file:
CR2_CLEAR_Mask	src/stm32f10x_adc.c	114;"	d	file:
CR2_CLOCK_CLEAR_Mask	src/stm32f10x_usart.c	62;"	d	file:
CR2_DMAEN_Reset	src/stm32f10x_i2c.c	92;"	d	file:
CR2_DMAEN_Set	src/stm32f10x_i2c.c	91;"	d	file:
CR2_DMA_Reset	src/stm32f10x_adc.c	76;"	d	file:
CR2_DMA_Set	src/stm32f10x_adc.c	75;"	d	file:
CR2_EXTTRIG_Reset	src/stm32f10x_adc.c	89;"	d	file:
CR2_EXTTRIG_SWSTART_Reset	src/stm32f10x_adc.c	93;"	d	file:
CR2_EXTTRIG_SWSTART_Set	src/stm32f10x_adc.c	92;"	d	file:
CR2_EXTTRIG_Set	src/stm32f10x_adc.c	88;"	d	file:
CR2_FREQ_Reset	src/stm32f10x_i2c.c	99;"	d	file:
CR2_JEXTSEL_Reset	src/stm32f10x_adc.c	96;"	d	file:
CR2_JEXTTRIG_JSWSTART_Reset	src/stm32f10x_adc.c	107;"	d	file:
CR2_JEXTTRIG_JSWSTART_Set	src/stm32f10x_adc.c	106;"	d	file:
CR2_JEXTTRIG_Reset	src/stm32f10x_adc.c	100;"	d	file:
CR2_JEXTTRIG_Set	src/stm32f10x_adc.c	99;"	d	file:
CR2_JSWSTART_Set	src/stm32f10x_adc.c	103;"	d	file:
CR2_LAST_Reset	src/stm32f10x_i2c.c	96;"	d	file:
CR2_LAST_Set	src/stm32f10x_i2c.c	95;"	d	file:
CR2_LBDL_Mask	src/stm32f10x_usart.c	60;"	d	file:
CR2_LINEN_Reset	src/stm32f10x_usart.c	58;"	d	file:
CR2_LINEN_Set	src/stm32f10x_usart.c	57;"	d	file:
CR2_RSTCAL_Set	src/stm32f10x_adc.c	79;"	d	file:
CR2_SSOE_Reset	src/stm32f10x_spi.c	64;"	d	file:
CR2_SSOE_Set	src/stm32f10x_spi.c	63;"	d	file:
CR2_STOP_CLEAR_Mask	src/stm32f10x_usart.c	61;"	d	file:
CR2_SWSTART_Set	src/stm32f10x_adc.c	85;"	d	file:
CR2_TSVREFE_Reset	src/stm32f10x_adc.c	111;"	d	file:
CR2_TSVREFE_Set	src/stm32f10x_adc.c	110;"	d	file:
CR3_CLEAR_Mask	src/stm32f10x_usart.c	74;"	d	file:
CR3_HDSEL_Reset	src/stm32f10x_usart.c	71;"	d	file:
CR3_HDSEL_Set	src/stm32f10x_usart.c	70;"	d	file:
CR3_IREN_Reset	src/stm32f10x_usart.c	77;"	d	file:
CR3_IREN_Set	src/stm32f10x_usart.c	76;"	d	file:
CR3_IRLP_Mask	src/stm32f10x_usart.c	73;"	d	file:
CR3_NACK_Reset	src/stm32f10x_usart.c	68;"	d	file:
CR3_NACK_Set	src/stm32f10x_usart.c	67;"	d	file:
CR3_ONEBITE_Reset	src/stm32f10x_usart.c	88;"	d	file:
CR3_ONEBITE_Set	src/stm32f10x_usart.c	87;"	d	file:
CR3_SCEN_Reset	src/stm32f10x_usart.c	65;"	d	file:
CR3_SCEN_Set	src/stm32f10x_usart.c	64;"	d	file:
CRC_CalcBlockCRC	inc/stm32f10x_crc.h	/^uint32_t CRC_CalcBlockCRC(uint32_t pBuffer[], uint32_t BufferLength);$/;"	p	signature:(uint32_t pBuffer[], uint32_t BufferLength)
CRC_CalcBlockCRC	src/stm32f10x_crc.c	/^uint32_t CRC_CalcBlockCRC(uint32_t pBuffer[], uint32_t BufferLength)$/;"	f	signature:(uint32_t pBuffer[], uint32_t BufferLength)
CRC_CalcCRC	inc/stm32f10x_crc.h	/^uint32_t CRC_CalcCRC(uint32_t Data);$/;"	p	signature:(uint32_t Data)
CRC_CalcCRC	src/stm32f10x_crc.c	/^uint32_t CRC_CalcCRC(uint32_t Data)$/;"	f	signature:(uint32_t Data)
CRC_GetCRC	inc/stm32f10x_crc.h	/^uint32_t CRC_GetCRC(void);$/;"	p	signature:(void)
CRC_GetCRC	src/stm32f10x_crc.c	/^uint32_t CRC_GetCRC(void)$/;"	f	signature:(void)
CRC_GetIDRegister	inc/stm32f10x_crc.h	/^uint8_t CRC_GetIDRegister(void);$/;"	p	signature:(void)
CRC_GetIDRegister	src/stm32f10x_crc.c	/^uint8_t CRC_GetIDRegister(void)$/;"	f	signature:(void)
CRC_ResetDR	inc/stm32f10x_crc.h	/^void CRC_ResetDR(void);$/;"	p	signature:(void)
CRC_ResetDR	src/stm32f10x_crc.c	/^void CRC_ResetDR(void)$/;"	f	signature:(void)
CRC_SetIDRegister	inc/stm32f10x_crc.h	/^void CRC_SetIDRegister(uint8_t IDValue);$/;"	p	signature:(uint8_t IDValue)
CRC_SetIDRegister	src/stm32f10x_crc.c	/^void CRC_SetIDRegister(uint8_t IDValue)$/;"	f	signature:(uint8_t IDValue)
CRL_CNF_Reset	src/stm32f10x_rtc.c	45;"	d	file:
CRL_CNF_Set	src/stm32f10x_rtc.c	44;"	d	file:
CR_CLEAR_Mask	src/stm32f10x_dac.c	53;"	d	file:
CR_CSSON_BB	src/stm32f10x_rcc.c	71;"	d	file:
CR_CWUF_Set	src/stm32f10x_pwr.c	72;"	d	file:
CR_DBP_BB	src/stm32f10x_pwr.c	54;"	d	file:
CR_DMAEN_Set	src/stm32f10x_dac.c	50;"	d	file:
CR_DS_Mask	src/stm32f10x_pwr.c	71;"	d	file:
CR_EN_Set	src/stm32f10x_dac.c	47;"	d	file:
CR_HSEBYP_Reset	src/stm32f10x_rcc.c	120;"	d	file:
CR_HSEBYP_Set	src/stm32f10x_rcc.c	121;"	d	file:
CR_HSEON_Reset	src/stm32f10x_rcc.c	122;"	d	file:
CR_HSEON_Set	src/stm32f10x_rcc.c	123;"	d	file:
CR_HSION_BB	src/stm32f10x_rcc.c	53;"	d	file:
CR_HSITRIM_Mask	src/stm32f10x_rcc.c	124;"	d	file:
CR_LOCK_Set	src/stm32f10x_flash.c	65;"	d	file:
CR_MER_Reset	src/stm32f10x_flash.c	59;"	d	file:
CR_MER_Set	src/stm32f10x_flash.c	58;"	d	file:
CR_OFFSET	src/stm32f10x_bkp.c	52;"	d	file:
CR_OFFSET	src/stm32f10x_pwr.c	52;"	d	file:
CR_OFFSET	src/stm32f10x_rcc.c	51;"	d	file:
CR_OPTER_Reset	src/stm32f10x_flash.c	63;"	d	file:
CR_OPTER_Set	src/stm32f10x_flash.c	62;"	d	file:
CR_OPTPG_Reset	src/stm32f10x_flash.c	61;"	d	file:
CR_OPTPG_Set	src/stm32f10x_flash.c	60;"	d	file:
CR_PDDS_Set	src/stm32f10x_pwr.c	70;"	d	file:
CR_PER_Reset	src/stm32f10x_flash.c	57;"	d	file:
CR_PER_Set	src/stm32f10x_flash.c	56;"	d	file:
CR_PG_Reset	src/stm32f10x_flash.c	55;"	d	file:
CR_PG_Set	src/stm32f10x_flash.c	54;"	d	file:
CR_PLL2ON_BB	src/stm32f10x_rcc.c	62;"	d	file:
CR_PLL3ON_BB	src/stm32f10x_rcc.c	66;"	d	file:
CR_PLLON_BB	src/stm32f10x_rcc.c	57;"	d	file:
CR_PLS_Mask	src/stm32f10x_pwr.c	73;"	d	file:
CR_PVDE_BB	src/stm32f10x_pwr.c	58;"	d	file:
CR_RESET_Set	src/stm32f10x_crc.c	47;"	d	file:
CR_STRT_Set	src/stm32f10x_flash.c	64;"	d	file:
CR_TPAL_BB	src/stm32f10x_bkp.c	54;"	d	file:
CR_TPE_BB	src/stm32f10x_bkp.c	58;"	d	file:
CR_WDGA_Set	src/stm32f10x_wwdg.c	57;"	d	file:
CSR_CTE_Set	src/stm32f10x_bkp.c	82;"	d	file:
CSR_CTI_Set	src/stm32f10x_bkp.c	83;"	d	file:
CSR_EWUP_BB	src/stm32f10x_pwr.c	65;"	d	file:
CSR_LSION_BB	src/stm32f10x_rcc.c	102;"	d	file:
CSR_OFFSET	src/stm32f10x_bkp.c	63;"	d	file:
CSR_OFFSET	src/stm32f10x_cec.c	64;"	d	file:
CSR_OFFSET	src/stm32f10x_pwr.c	63;"	d	file:
CSR_OFFSET	src/stm32f10x_rcc.c	100;"	d	file:
CSR_RMVF_Set	src/stm32f10x_rcc.c	148;"	d	file:
CSR_TEF_BB	src/stm32f10x_bkp.c	73;"	d	file:
CSR_TEOM_BB	src/stm32f10x_cec.c	70;"	d	file:
CSR_TIF_BB	src/stm32f10x_bkp.c	69;"	d	file:
CSR_TPIE_BB	src/stm32f10x_bkp.c	65;"	d	file:
CSR_TSOM_BB	src/stm32f10x_cec.c	66;"	d	file:
CSSON_BitNumber	src/stm32f10x_rcc.c	70;"	d	file:
CanRxMsg	inc/stm32f10x_can.h	/^} CanRxMsg;$/;"	t	typeref:struct:__anon6
CanTxMsg	inc/stm32f10x_can.h	/^} CanTxMsg;$/;"	t	typeref:struct:__anon5
CheckITStatus	src/stm32f10x_can.c	/^static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit)$/;"	f	file:	signature:(uint32_t CAN_Reg, uint32_t It_Bit)
CheckITStatus	src/stm32f10x_can.c	/^static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit);$/;"	p	file:	signature:(uint32_t CAN_Reg, uint32_t It_Bit)
DAC_Align_12b_L	inc/stm32f10x_dac.h	208;"	d
DAC_Align_12b_R	inc/stm32f10x_dac.h	207;"	d
DAC_Align_8b_R	inc/stm32f10x_dac.h	209;"	d
DAC_Channel_1	inc/stm32f10x_dac.h	195;"	d
DAC_Channel_2	inc/stm32f10x_dac.h	196;"	d
DAC_ClearFlag	inc/stm32f10x_dac.h	/^void DAC_ClearFlag(uint32_t DAC_Channel, uint32_t DAC_FLAG);$/;"	p	signature:(uint32_t DAC_Channel, uint32_t DAC_FLAG)
DAC_ClearFlag	src/stm32f10x_dac.c	/^void DAC_ClearFlag(uint32_t DAC_Channel, uint32_t DAC_FLAG)$/;"	f	signature:(uint32_t DAC_Channel, uint32_t DAC_FLAG)
DAC_ClearITPendingBit	inc/stm32f10x_dac.h	/^void DAC_ClearITPendingBit(uint32_t DAC_Channel, uint32_t DAC_IT);$/;"	p	signature:(uint32_t DAC_Channel, uint32_t DAC_IT)
DAC_ClearITPendingBit	src/stm32f10x_dac.c	/^void DAC_ClearITPendingBit(uint32_t DAC_Channel, uint32_t DAC_IT)$/;"	f	signature:(uint32_t DAC_Channel, uint32_t DAC_IT)
DAC_Cmd	inc/stm32f10x_dac.h	/^void DAC_Cmd(uint32_t DAC_Channel, FunctionalState NewState);$/;"	p	signature:(uint32_t DAC_Channel, FunctionalState NewState)
DAC_Cmd	src/stm32f10x_dac.c	/^void DAC_Cmd(uint32_t DAC_Channel, FunctionalState NewState)$/;"	f	signature:(uint32_t DAC_Channel, FunctionalState NewState)
DAC_DMACmd	inc/stm32f10x_dac.h	/^void DAC_DMACmd(uint32_t DAC_Channel, FunctionalState NewState);$/;"	p	signature:(uint32_t DAC_Channel, FunctionalState NewState)
DAC_DMACmd	src/stm32f10x_dac.c	/^void DAC_DMACmd(uint32_t DAC_Channel, FunctionalState NewState)$/;"	f	signature:(uint32_t DAC_Channel, FunctionalState NewState)
DAC_DeInit	inc/stm32f10x_dac.h	/^void DAC_DeInit(void);$/;"	p	signature:(void)
DAC_DeInit	src/stm32f10x_dac.c	/^void DAC_DeInit(void)$/;"	f	signature:(void)
DAC_DualSoftwareTriggerCmd	inc/stm32f10x_dac.h	/^void DAC_DualSoftwareTriggerCmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
DAC_DualSoftwareTriggerCmd	src/stm32f10x_dac.c	/^void DAC_DualSoftwareTriggerCmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
DAC_FLAG_DMAUDR	inc/stm32f10x_dac.h	253;"	d
DAC_GetDataOutputValue	inc/stm32f10x_dac.h	/^uint16_t DAC_GetDataOutputValue(uint32_t DAC_Channel);$/;"	p	signature:(uint32_t DAC_Channel)
DAC_GetDataOutputValue	src/stm32f10x_dac.c	/^uint16_t DAC_GetDataOutputValue(uint32_t DAC_Channel)$/;"	f	signature:(uint32_t DAC_Channel)
DAC_GetFlagStatus	inc/stm32f10x_dac.h	/^FlagStatus DAC_GetFlagStatus(uint32_t DAC_Channel, uint32_t DAC_FLAG);$/;"	p	signature:(uint32_t DAC_Channel, uint32_t DAC_FLAG)
DAC_GetFlagStatus	src/stm32f10x_dac.c	/^FlagStatus DAC_GetFlagStatus(uint32_t DAC_Channel, uint32_t DAC_FLAG)$/;"	f	signature:(uint32_t DAC_Channel, uint32_t DAC_FLAG)
DAC_GetITStatus	inc/stm32f10x_dac.h	/^ITStatus DAC_GetITStatus(uint32_t DAC_Channel, uint32_t DAC_IT);$/;"	p	signature:(uint32_t DAC_Channel, uint32_t DAC_IT)
DAC_GetITStatus	src/stm32f10x_dac.c	/^ITStatus DAC_GetITStatus(uint32_t DAC_Channel, uint32_t DAC_IT)$/;"	f	signature:(uint32_t DAC_Channel, uint32_t DAC_IT)
DAC_ITConfig	inc/stm32f10x_dac.h	/^void DAC_ITConfig(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState);$/;"	p	signature:(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState)
DAC_ITConfig	src/stm32f10x_dac.c	/^void DAC_ITConfig(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState)  $/;"	f	signature:(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState)
DAC_IT_DMAUDR	inc/stm32f10x_dac.h	242;"	d
DAC_Init	inc/stm32f10x_dac.h	/^void DAC_Init(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct);$/;"	p	signature:(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct)
DAC_Init	src/stm32f10x_dac.c	/^void DAC_Init(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct)$/;"	f	signature:(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct)
DAC_InitTypeDef	inc/stm32f10x_dac.h	/^}DAC_InitTypeDef;$/;"	t	typeref:struct:__anon8
DAC_LFSRUnmask_Bit0	inc/stm32f10x_dac.h	126;"	d
DAC_LFSRUnmask_Bits10_0	inc/stm32f10x_dac.h	136;"	d
DAC_LFSRUnmask_Bits11_0	inc/stm32f10x_dac.h	137;"	d
DAC_LFSRUnmask_Bits1_0	inc/stm32f10x_dac.h	127;"	d
DAC_LFSRUnmask_Bits2_0	inc/stm32f10x_dac.h	128;"	d
DAC_LFSRUnmask_Bits3_0	inc/stm32f10x_dac.h	129;"	d
DAC_LFSRUnmask_Bits4_0	inc/stm32f10x_dac.h	130;"	d
DAC_LFSRUnmask_Bits5_0	inc/stm32f10x_dac.h	131;"	d
DAC_LFSRUnmask_Bits6_0	inc/stm32f10x_dac.h	132;"	d
DAC_LFSRUnmask_Bits7_0	inc/stm32f10x_dac.h	133;"	d
DAC_LFSRUnmask_Bits8_0	inc/stm32f10x_dac.h	134;"	d
DAC_LFSRUnmask_Bits9_0	inc/stm32f10x_dac.h	135;"	d
DAC_LFSRUnmask_TriangleAmplitude	inc/stm32f10x_dac.h	/^  uint32_t DAC_LFSRUnmask_TriangleAmplitude; \/*!< Specifies the LFSR mask for noise wave generation or$/;"	m	struct:__anon8	access:public
DAC_OutputBuffer	inc/stm32f10x_dac.h	/^  uint32_t DAC_OutputBuffer;                 \/*!< Specifies whether the DAC channel output buffer is enabled or disabled.$/;"	m	struct:__anon8	access:public
DAC_OutputBuffer_Disable	inc/stm32f10x_dac.h	184;"	d
DAC_OutputBuffer_Enable	inc/stm32f10x_dac.h	183;"	d
DAC_SetChannel1Data	inc/stm32f10x_dac.h	/^void DAC_SetChannel1Data(uint32_t DAC_Align, uint16_t Data);$/;"	p	signature:(uint32_t DAC_Align, uint16_t Data)
DAC_SetChannel1Data	src/stm32f10x_dac.c	/^void DAC_SetChannel1Data(uint32_t DAC_Align, uint16_t Data)$/;"	f	signature:(uint32_t DAC_Align, uint16_t Data)
DAC_SetChannel2Data	inc/stm32f10x_dac.h	/^void DAC_SetChannel2Data(uint32_t DAC_Align, uint16_t Data);$/;"	p	signature:(uint32_t DAC_Align, uint16_t Data)
DAC_SetChannel2Data	src/stm32f10x_dac.c	/^void DAC_SetChannel2Data(uint32_t DAC_Align, uint16_t Data)$/;"	f	signature:(uint32_t DAC_Align, uint16_t Data)
DAC_SetDualChannelData	inc/stm32f10x_dac.h	/^void DAC_SetDualChannelData(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1);$/;"	p	signature:(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1)
DAC_SetDualChannelData	src/stm32f10x_dac.c	/^void DAC_SetDualChannelData(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1)$/;"	f	signature:(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1)
DAC_SoftwareTriggerCmd	inc/stm32f10x_dac.h	/^void DAC_SoftwareTriggerCmd(uint32_t DAC_Channel, FunctionalState NewState);$/;"	p	signature:(uint32_t DAC_Channel, FunctionalState NewState)
DAC_SoftwareTriggerCmd	src/stm32f10x_dac.c	/^void DAC_SoftwareTriggerCmd(uint32_t DAC_Channel, FunctionalState NewState)$/;"	f	signature:(uint32_t DAC_Channel, FunctionalState NewState)
DAC_StructInit	inc/stm32f10x_dac.h	/^void DAC_StructInit(DAC_InitTypeDef* DAC_InitStruct);$/;"	p	signature:(DAC_InitTypeDef* DAC_InitStruct)
DAC_StructInit	src/stm32f10x_dac.c	/^void DAC_StructInit(DAC_InitTypeDef* DAC_InitStruct)$/;"	f	signature:(DAC_InitTypeDef* DAC_InitStruct)
DAC_TriangleAmplitude_1	inc/stm32f10x_dac.h	138;"	d
DAC_TriangleAmplitude_1023	inc/stm32f10x_dac.h	147;"	d
DAC_TriangleAmplitude_127	inc/stm32f10x_dac.h	144;"	d
DAC_TriangleAmplitude_15	inc/stm32f10x_dac.h	141;"	d
DAC_TriangleAmplitude_2047	inc/stm32f10x_dac.h	148;"	d
DAC_TriangleAmplitude_255	inc/stm32f10x_dac.h	145;"	d
DAC_TriangleAmplitude_3	inc/stm32f10x_dac.h	139;"	d
DAC_TriangleAmplitude_31	inc/stm32f10x_dac.h	142;"	d
DAC_TriangleAmplitude_4095	inc/stm32f10x_dac.h	149;"	d
DAC_TriangleAmplitude_511	inc/stm32f10x_dac.h	146;"	d
DAC_TriangleAmplitude_63	inc/stm32f10x_dac.h	143;"	d
DAC_TriangleAmplitude_7	inc/stm32f10x_dac.h	140;"	d
DAC_Trigger	inc/stm32f10x_dac.h	/^  uint32_t DAC_Trigger;                      \/*!< Specifies the external trigger for the selected DAC channel.$/;"	m	struct:__anon8	access:public
DAC_Trigger_Ext_IT9	inc/stm32f10x_dac.h	91;"	d
DAC_Trigger_None	inc/stm32f10x_dac.h	78;"	d
DAC_Trigger_Software	inc/stm32f10x_dac.h	92;"	d
DAC_Trigger_T15_TRGO	inc/stm32f10x_dac.h	87;"	d
DAC_Trigger_T2_TRGO	inc/stm32f10x_dac.h	89;"	d
DAC_Trigger_T3_TRGO	inc/stm32f10x_dac.h	83;"	d
DAC_Trigger_T4_TRGO	inc/stm32f10x_dac.h	90;"	d
DAC_Trigger_T5_TRGO	inc/stm32f10x_dac.h	86;"	d
DAC_Trigger_T6_TRGO	inc/stm32f10x_dac.h	80;"	d
DAC_Trigger_T7_TRGO	inc/stm32f10x_dac.h	85;"	d
DAC_Trigger_T8_TRGO	inc/stm32f10x_dac.h	81;"	d
DAC_WaveGeneration	inc/stm32f10x_dac.h	/^  uint32_t DAC_WaveGeneration;               \/*!< Specifies whether DAC channel noise waves or triangle waves$/;"	m	struct:__anon8	access:public
DAC_WaveGenerationCmd	inc/stm32f10x_dac.h	/^void DAC_WaveGenerationCmd(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState);$/;"	p	signature:(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState)
DAC_WaveGenerationCmd	src/stm32f10x_dac.c	/^void DAC_WaveGenerationCmd(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState)$/;"	f	signature:(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState)
DAC_WaveGeneration_Noise	inc/stm32f10x_dac.h	113;"	d
DAC_WaveGeneration_None	inc/stm32f10x_dac.h	112;"	d
DAC_WaveGeneration_Triangle	inc/stm32f10x_dac.h	114;"	d
DAC_Wave_Noise	inc/stm32f10x_dac.h	221;"	d
DAC_Wave_Triangle	inc/stm32f10x_dac.h	222;"	d
DBGAFR_LOCATION_MASK	src/stm32f10x_gpio.c	68;"	d	file:
DBGAFR_NUMBITS_MASK	src/stm32f10x_gpio.c	69;"	d	file:
DBGAFR_POSITION_MASK	src/stm32f10x_gpio.c	66;"	d	file:
DBGAFR_SWJCFG_MASK	src/stm32f10x_gpio.c	67;"	d	file:
DBGMCU_CAN1_STOP	inc/stm32f10x_dbgmcu.h	62;"	d
DBGMCU_CAN2_STOP	inc/stm32f10x_dbgmcu.h	69;"	d
DBGMCU_Config	inc/stm32f10x_dbgmcu.h	/^void DBGMCU_Config(uint32_t DBGMCU_Periph, FunctionalState NewState);$/;"	p	signature:(uint32_t DBGMCU_Periph, FunctionalState NewState)
DBGMCU_Config	src/stm32f10x_dbgmcu.c	/^void DBGMCU_Config(uint32_t DBGMCU_Periph, FunctionalState NewState)$/;"	f	signature:(uint32_t DBGMCU_Periph, FunctionalState NewState)
DBGMCU_GetDEVID	inc/stm32f10x_dbgmcu.h	/^uint32_t DBGMCU_GetDEVID(void);$/;"	p	signature:(void)
DBGMCU_GetDEVID	src/stm32f10x_dbgmcu.c	/^uint32_t DBGMCU_GetDEVID(void)$/;"	f	signature:(void)
DBGMCU_GetREVID	inc/stm32f10x_dbgmcu.h	/^uint32_t DBGMCU_GetREVID(void);$/;"	p	signature:(void)
DBGMCU_GetREVID	src/stm32f10x_dbgmcu.c	/^uint32_t DBGMCU_GetREVID(void)$/;"	f	signature:(void)
DBGMCU_I2C1_SMBUS_TIMEOUT	inc/stm32f10x_dbgmcu.h	63;"	d
DBGMCU_I2C2_SMBUS_TIMEOUT	inc/stm32f10x_dbgmcu.h	64;"	d
DBGMCU_IWDG_STOP	inc/stm32f10x_dbgmcu.h	56;"	d
DBGMCU_SLEEP	inc/stm32f10x_dbgmcu.h	53;"	d
DBGMCU_STANDBY	inc/stm32f10x_dbgmcu.h	55;"	d
DBGMCU_STOP	inc/stm32f10x_dbgmcu.h	54;"	d
DBGMCU_TIM10_STOP	inc/stm32f10x_dbgmcu.h	77;"	d
DBGMCU_TIM11_STOP	inc/stm32f10x_dbgmcu.h	78;"	d
DBGMCU_TIM12_STOP	inc/stm32f10x_dbgmcu.h	73;"	d
DBGMCU_TIM13_STOP	inc/stm32f10x_dbgmcu.h	74;"	d
DBGMCU_TIM14_STOP	inc/stm32f10x_dbgmcu.h	75;"	d
DBGMCU_TIM15_STOP	inc/stm32f10x_dbgmcu.h	70;"	d
DBGMCU_TIM16_STOP	inc/stm32f10x_dbgmcu.h	71;"	d
DBGMCU_TIM17_STOP	inc/stm32f10x_dbgmcu.h	72;"	d
DBGMCU_TIM1_STOP	inc/stm32f10x_dbgmcu.h	58;"	d
DBGMCU_TIM2_STOP	inc/stm32f10x_dbgmcu.h	59;"	d
DBGMCU_TIM3_STOP	inc/stm32f10x_dbgmcu.h	60;"	d
DBGMCU_TIM4_STOP	inc/stm32f10x_dbgmcu.h	61;"	d
DBGMCU_TIM5_STOP	inc/stm32f10x_dbgmcu.h	66;"	d
DBGMCU_TIM6_STOP	inc/stm32f10x_dbgmcu.h	67;"	d
DBGMCU_TIM7_STOP	inc/stm32f10x_dbgmcu.h	68;"	d
DBGMCU_TIM8_STOP	inc/stm32f10x_dbgmcu.h	65;"	d
DBGMCU_TIM9_STOP	inc/stm32f10x_dbgmcu.h	76;"	d
DBGMCU_WWDG_STOP	inc/stm32f10x_dbgmcu.h	57;"	d
DBP_BitNumber	src/stm32f10x_pwr.c	53;"	d	file:
DCTRL_CLEAR_MASK	src/stm32f10x_sdio.c	105;"	d	file:
DCTRL_DMAEN_BB	src/stm32f10x_sdio.c	72;"	d	file:
DCTRL_OFFSET	src/stm32f10x_sdio.c	70;"	d	file:
DCTRL_RWMOD_BB	src/stm32f10x_sdio.c	84;"	d	file:
DCTRL_RWSTART_BB	src/stm32f10x_sdio.c	76;"	d	file:
DCTRL_RWSTOP_BB	src/stm32f10x_sdio.c	80;"	d	file:
DCTRL_SDIOEN_BB	src/stm32f10x_sdio.c	88;"	d	file:
DHR12R1_Offset	src/stm32f10x_dac.c	63;"	d	file:
DHR12R2_Offset	src/stm32f10x_dac.c	64;"	d	file:
DHR12RD_Offset	src/stm32f10x_dac.c	65;"	d	file:
DLC	inc/stm32f10x_can.h	/^  uint8_t DLC;     \/*!< Specifies the length of the frame that will be received.$/;"	m	struct:__anon6	access:public
DLC	inc/stm32f10x_can.h	/^  uint8_t DLC;     \/*!< Specifies the length of the frame that will be transmitted.$/;"	m	struct:__anon5	access:public
DMA1_Channel1_IT_Mask	src/stm32f10x_dma.c	50;"	d	file:
DMA1_Channel2_IT_Mask	src/stm32f10x_dma.c	51;"	d	file:
DMA1_Channel3_IT_Mask	src/stm32f10x_dma.c	52;"	d	file:
DMA1_Channel4_IT_Mask	src/stm32f10x_dma.c	53;"	d	file:
DMA1_Channel5_IT_Mask	src/stm32f10x_dma.c	54;"	d	file:
DMA1_Channel6_IT_Mask	src/stm32f10x_dma.c	55;"	d	file:
DMA1_Channel7_IT_Mask	src/stm32f10x_dma.c	56;"	d	file:
DMA1_FLAG_GL1	inc/stm32f10x_dma.h	303;"	d
DMA1_FLAG_GL2	inc/stm32f10x_dma.h	307;"	d
DMA1_FLAG_GL3	inc/stm32f10x_dma.h	311;"	d
DMA1_FLAG_GL4	inc/stm32f10x_dma.h	315;"	d
DMA1_FLAG_GL5	inc/stm32f10x_dma.h	319;"	d
DMA1_FLAG_GL6	inc/stm32f10x_dma.h	323;"	d
DMA1_FLAG_GL7	inc/stm32f10x_dma.h	327;"	d
DMA1_FLAG_HT1	inc/stm32f10x_dma.h	305;"	d
DMA1_FLAG_HT2	inc/stm32f10x_dma.h	309;"	d
DMA1_FLAG_HT3	inc/stm32f10x_dma.h	313;"	d
DMA1_FLAG_HT4	inc/stm32f10x_dma.h	317;"	d
DMA1_FLAG_HT5	inc/stm32f10x_dma.h	321;"	d
DMA1_FLAG_HT6	inc/stm32f10x_dma.h	325;"	d
DMA1_FLAG_HT7	inc/stm32f10x_dma.h	329;"	d
DMA1_FLAG_TC1	inc/stm32f10x_dma.h	304;"	d
DMA1_FLAG_TC2	inc/stm32f10x_dma.h	308;"	d
DMA1_FLAG_TC3	inc/stm32f10x_dma.h	312;"	d
DMA1_FLAG_TC4	inc/stm32f10x_dma.h	316;"	d
DMA1_FLAG_TC5	inc/stm32f10x_dma.h	320;"	d
DMA1_FLAG_TC6	inc/stm32f10x_dma.h	324;"	d
DMA1_FLAG_TC7	inc/stm32f10x_dma.h	328;"	d
DMA1_FLAG_TE1	inc/stm32f10x_dma.h	306;"	d
DMA1_FLAG_TE2	inc/stm32f10x_dma.h	310;"	d
DMA1_FLAG_TE3	inc/stm32f10x_dma.h	314;"	d
DMA1_FLAG_TE4	inc/stm32f10x_dma.h	318;"	d
DMA1_FLAG_TE5	inc/stm32f10x_dma.h	322;"	d
DMA1_FLAG_TE6	inc/stm32f10x_dma.h	326;"	d
DMA1_FLAG_TE7	inc/stm32f10x_dma.h	330;"	d
DMA1_IT_GL1	inc/stm32f10x_dma.h	219;"	d
DMA1_IT_GL2	inc/stm32f10x_dma.h	223;"	d
DMA1_IT_GL3	inc/stm32f10x_dma.h	227;"	d
DMA1_IT_GL4	inc/stm32f10x_dma.h	231;"	d
DMA1_IT_GL5	inc/stm32f10x_dma.h	235;"	d
DMA1_IT_GL6	inc/stm32f10x_dma.h	239;"	d
DMA1_IT_GL7	inc/stm32f10x_dma.h	243;"	d
DMA1_IT_HT1	inc/stm32f10x_dma.h	221;"	d
DMA1_IT_HT2	inc/stm32f10x_dma.h	225;"	d
DMA1_IT_HT3	inc/stm32f10x_dma.h	229;"	d
DMA1_IT_HT4	inc/stm32f10x_dma.h	233;"	d
DMA1_IT_HT5	inc/stm32f10x_dma.h	237;"	d
DMA1_IT_HT6	inc/stm32f10x_dma.h	241;"	d
DMA1_IT_HT7	inc/stm32f10x_dma.h	245;"	d
DMA1_IT_TC1	inc/stm32f10x_dma.h	220;"	d
DMA1_IT_TC2	inc/stm32f10x_dma.h	224;"	d
DMA1_IT_TC3	inc/stm32f10x_dma.h	228;"	d
DMA1_IT_TC4	inc/stm32f10x_dma.h	232;"	d
DMA1_IT_TC5	inc/stm32f10x_dma.h	236;"	d
DMA1_IT_TC6	inc/stm32f10x_dma.h	240;"	d
DMA1_IT_TC7	inc/stm32f10x_dma.h	244;"	d
DMA1_IT_TE1	inc/stm32f10x_dma.h	222;"	d
DMA1_IT_TE2	inc/stm32f10x_dma.h	226;"	d
DMA1_IT_TE3	inc/stm32f10x_dma.h	230;"	d
DMA1_IT_TE4	inc/stm32f10x_dma.h	234;"	d
DMA1_IT_TE5	inc/stm32f10x_dma.h	238;"	d
DMA1_IT_TE6	inc/stm32f10x_dma.h	242;"	d
DMA1_IT_TE7	inc/stm32f10x_dma.h	246;"	d
DMA2_Channel1_IT_Mask	src/stm32f10x_dma.c	59;"	d	file:
DMA2_Channel2_IT_Mask	src/stm32f10x_dma.c	60;"	d	file:
DMA2_Channel3_IT_Mask	src/stm32f10x_dma.c	61;"	d	file:
DMA2_Channel4_IT_Mask	src/stm32f10x_dma.c	62;"	d	file:
DMA2_Channel5_IT_Mask	src/stm32f10x_dma.c	63;"	d	file:
DMA2_FLAG_GL1	inc/stm32f10x_dma.h	332;"	d
DMA2_FLAG_GL2	inc/stm32f10x_dma.h	336;"	d
DMA2_FLAG_GL3	inc/stm32f10x_dma.h	340;"	d
DMA2_FLAG_GL4	inc/stm32f10x_dma.h	344;"	d
DMA2_FLAG_GL5	inc/stm32f10x_dma.h	348;"	d
DMA2_FLAG_HT1	inc/stm32f10x_dma.h	334;"	d
DMA2_FLAG_HT2	inc/stm32f10x_dma.h	338;"	d
DMA2_FLAG_HT3	inc/stm32f10x_dma.h	342;"	d
DMA2_FLAG_HT4	inc/stm32f10x_dma.h	346;"	d
DMA2_FLAG_HT5	inc/stm32f10x_dma.h	350;"	d
DMA2_FLAG_TC1	inc/stm32f10x_dma.h	333;"	d
DMA2_FLAG_TC2	inc/stm32f10x_dma.h	337;"	d
DMA2_FLAG_TC3	inc/stm32f10x_dma.h	341;"	d
DMA2_FLAG_TC4	inc/stm32f10x_dma.h	345;"	d
DMA2_FLAG_TC5	inc/stm32f10x_dma.h	349;"	d
DMA2_FLAG_TE1	inc/stm32f10x_dma.h	335;"	d
DMA2_FLAG_TE2	inc/stm32f10x_dma.h	339;"	d
DMA2_FLAG_TE3	inc/stm32f10x_dma.h	343;"	d
DMA2_FLAG_TE4	inc/stm32f10x_dma.h	347;"	d
DMA2_FLAG_TE5	inc/stm32f10x_dma.h	351;"	d
DMA2_IT_GL1	inc/stm32f10x_dma.h	248;"	d
DMA2_IT_GL2	inc/stm32f10x_dma.h	252;"	d
DMA2_IT_GL3	inc/stm32f10x_dma.h	256;"	d
DMA2_IT_GL4	inc/stm32f10x_dma.h	260;"	d
DMA2_IT_GL5	inc/stm32f10x_dma.h	264;"	d
DMA2_IT_HT1	inc/stm32f10x_dma.h	250;"	d
DMA2_IT_HT2	inc/stm32f10x_dma.h	254;"	d
DMA2_IT_HT3	inc/stm32f10x_dma.h	258;"	d
DMA2_IT_HT4	inc/stm32f10x_dma.h	262;"	d
DMA2_IT_HT5	inc/stm32f10x_dma.h	266;"	d
DMA2_IT_TC1	inc/stm32f10x_dma.h	249;"	d
DMA2_IT_TC2	inc/stm32f10x_dma.h	253;"	d
DMA2_IT_TC3	inc/stm32f10x_dma.h	257;"	d
DMA2_IT_TC4	inc/stm32f10x_dma.h	261;"	d
DMA2_IT_TC5	inc/stm32f10x_dma.h	265;"	d
DMA2_IT_TE1	inc/stm32f10x_dma.h	251;"	d
DMA2_IT_TE2	inc/stm32f10x_dma.h	255;"	d
DMA2_IT_TE3	inc/stm32f10x_dma.h	259;"	d
DMA2_IT_TE4	inc/stm32f10x_dma.h	263;"	d
DMA2_IT_TE5	inc/stm32f10x_dma.h	267;"	d
DMAEN_BitNumber	src/stm32f10x_sdio.c	71;"	d	file:
DMA_BufferSize	inc/stm32f10x_dma.h	/^  uint32_t DMA_BufferSize;         \/*!< Specifies the buffer size, in data unit, of the specified Channel. $/;"	m	struct:__anon35	access:public
DMA_ClearFlag	inc/stm32f10x_dma.h	/^void DMA_ClearFlag(uint32_t DMA_FLAG);$/;"	p	signature:(uint32_t DMA_FLAG)
DMA_ClearFlag	src/stm32f10x_dma.c	/^void DMA_ClearFlag(uint32_t DMA_FLAG)$/;"	f	signature:(uint32_t DMA_FLAG)
DMA_ClearITPendingBit	inc/stm32f10x_dma.h	/^void DMA_ClearITPendingBit(uint32_t DMA_IT);$/;"	p	signature:(uint32_t DMA_IT)
DMA_ClearITPendingBit	src/stm32f10x_dma.c	/^void DMA_ClearITPendingBit(uint32_t DMA_IT)$/;"	f	signature:(uint32_t DMA_IT)
DMA_Cmd	inc/stm32f10x_dma.h	/^void DMA_Cmd(DMA_Channel_TypeDef* DMAy_Channelx, FunctionalState NewState);$/;"	p	signature:(DMA_Channel_TypeDef* DMAy_Channelx, FunctionalState NewState)
DMA_Cmd	src/stm32f10x_dma.c	/^void DMA_Cmd(DMA_Channel_TypeDef* DMAy_Channelx, FunctionalState NewState)$/;"	f	signature:(DMA_Channel_TypeDef* DMAy_Channelx, FunctionalState NewState)
DMA_DIR	inc/stm32f10x_dma.h	/^  uint32_t DMA_DIR;                \/*!< Specifies if the peripheral is the source or destination.$/;"	m	struct:__anon35	access:public
DMA_DIR_PeripheralDST	inc/stm32f10x_dma.h	111;"	d
DMA_DIR_PeripheralSRC	inc/stm32f10x_dma.h	112;"	d
DMA_DeInit	inc/stm32f10x_dma.h	/^void DMA_DeInit(DMA_Channel_TypeDef* DMAy_Channelx);$/;"	p	signature:(DMA_Channel_TypeDef* DMAy_Channelx)
DMA_DeInit	src/stm32f10x_dma.c	/^void DMA_DeInit(DMA_Channel_TypeDef* DMAy_Channelx)$/;"	f	signature:(DMA_Channel_TypeDef* DMAy_Channelx)
DMA_GetCurrDataCounter	inc/stm32f10x_dma.h	/^uint16_t DMA_GetCurrDataCounter(DMA_Channel_TypeDef* DMAy_Channelx);$/;"	p	signature:(DMA_Channel_TypeDef* DMAy_Channelx)
DMA_GetCurrDataCounter	src/stm32f10x_dma.c	/^uint16_t DMA_GetCurrDataCounter(DMA_Channel_TypeDef* DMAy_Channelx)$/;"	f	signature:(DMA_Channel_TypeDef* DMAy_Channelx)
DMA_GetFlagStatus	inc/stm32f10x_dma.h	/^FlagStatus DMA_GetFlagStatus(uint32_t DMA_FLAG);$/;"	p	signature:(uint32_t DMA_FLAG)
DMA_GetFlagStatus	src/stm32f10x_dma.c	/^FlagStatus DMA_GetFlagStatus(uint32_t DMA_FLAG)$/;"	f	signature:(uint32_t DMA_FLAG)
DMA_GetITStatus	inc/stm32f10x_dma.h	/^ITStatus DMA_GetITStatus(uint32_t DMA_IT);$/;"	p	signature:(uint32_t DMA_IT)
DMA_GetITStatus	src/stm32f10x_dma.c	/^ITStatus DMA_GetITStatus(uint32_t DMA_IT)$/;"	f	signature:(uint32_t DMA_IT)
DMA_ITConfig	inc/stm32f10x_dma.h	/^void DMA_ITConfig(DMA_Channel_TypeDef* DMAy_Channelx, uint32_t DMA_IT, FunctionalState NewState);$/;"	p	signature:(DMA_Channel_TypeDef* DMAy_Channelx, uint32_t DMA_IT, FunctionalState NewState)
DMA_ITConfig	src/stm32f10x_dma.c	/^void DMA_ITConfig(DMA_Channel_TypeDef* DMAy_Channelx, uint32_t DMA_IT, FunctionalState NewState)$/;"	f	signature:(DMA_Channel_TypeDef* DMAy_Channelx, uint32_t DMA_IT, FunctionalState NewState)
DMA_IT_HT	inc/stm32f10x_dma.h	215;"	d
DMA_IT_TC	inc/stm32f10x_dma.h	214;"	d
DMA_IT_TE	inc/stm32f10x_dma.h	216;"	d
DMA_Init	inc/stm32f10x_dma.h	/^void DMA_Init(DMA_Channel_TypeDef* DMAy_Channelx, DMA_InitTypeDef* DMA_InitStruct);$/;"	p	signature:(DMA_Channel_TypeDef* DMAy_Channelx, DMA_InitTypeDef* DMA_InitStruct)
DMA_Init	src/stm32f10x_dma.c	/^void DMA_Init(DMA_Channel_TypeDef* DMAy_Channelx, DMA_InitTypeDef* DMA_InitStruct)$/;"	f	signature:(DMA_Channel_TypeDef* DMAy_Channelx, DMA_InitTypeDef* DMA_InitStruct)
DMA_InitTypeDef	inc/stm32f10x_dma.h	/^}DMA_InitTypeDef;$/;"	t	typeref:struct:__anon35
DMA_M2M	inc/stm32f10x_dma.h	/^  uint32_t DMA_M2M;                \/*!< Specifies if the DMAy Channelx will be used in memory-to-memory transfer.$/;"	m	struct:__anon35	access:public
DMA_M2M_Disable	inc/stm32f10x_dma.h	203;"	d
DMA_M2M_Enable	inc/stm32f10x_dma.h	202;"	d
DMA_MemoryBaseAddr	inc/stm32f10x_dma.h	/^  uint32_t DMA_MemoryBaseAddr;     \/*!< Specifies the memory base address for DMAy Channelx. *\/$/;"	m	struct:__anon35	access:public
DMA_MemoryDataSize	inc/stm32f10x_dma.h	/^  uint32_t DMA_MemoryDataSize;     \/*!< Specifies the Memory data width.$/;"	m	struct:__anon35	access:public
DMA_MemoryDataSize_Byte	inc/stm32f10x_dma.h	161;"	d
DMA_MemoryDataSize_HalfWord	inc/stm32f10x_dma.h	162;"	d
DMA_MemoryDataSize_Word	inc/stm32f10x_dma.h	163;"	d
DMA_MemoryInc	inc/stm32f10x_dma.h	/^  uint32_t DMA_MemoryInc;          \/*!< Specifies whether the memory address register is incremented or not.$/;"	m	struct:__anon35	access:public
DMA_MemoryInc_Disable	inc/stm32f10x_dma.h	136;"	d
DMA_MemoryInc_Enable	inc/stm32f10x_dma.h	135;"	d
DMA_Mode	inc/stm32f10x_dma.h	/^  uint32_t DMA_Mode;               \/*!< Specifies the operation mode of the DMAy Channelx.$/;"	m	struct:__anon35	access:public
DMA_Mode_Circular	inc/stm32f10x_dma.h	175;"	d
DMA_Mode_Normal	inc/stm32f10x_dma.h	176;"	d
DMA_PeripheralBaseAddr	inc/stm32f10x_dma.h	/^  uint32_t DMA_PeripheralBaseAddr; \/*!< Specifies the peripheral base address for DMAy Channelx. *\/$/;"	m	struct:__anon35	access:public
DMA_PeripheralDataSize	inc/stm32f10x_dma.h	/^  uint32_t DMA_PeripheralDataSize; \/*!< Specifies the Peripheral data width.$/;"	m	struct:__anon35	access:public
DMA_PeripheralDataSize_Byte	inc/stm32f10x_dma.h	147;"	d
DMA_PeripheralDataSize_HalfWord	inc/stm32f10x_dma.h	148;"	d
DMA_PeripheralDataSize_Word	inc/stm32f10x_dma.h	149;"	d
DMA_PeripheralInc	inc/stm32f10x_dma.h	/^  uint32_t DMA_PeripheralInc;      \/*!< Specifies whether the Peripheral address register is incremented or not.$/;"	m	struct:__anon35	access:public
DMA_PeripheralInc_Disable	inc/stm32f10x_dma.h	124;"	d
DMA_PeripheralInc_Enable	inc/stm32f10x_dma.h	123;"	d
DMA_Priority	inc/stm32f10x_dma.h	/^  uint32_t DMA_Priority;           \/*!< Specifies the software priority for the DMAy Channelx.$/;"	m	struct:__anon35	access:public
DMA_Priority_High	inc/stm32f10x_dma.h	187;"	d
DMA_Priority_Low	inc/stm32f10x_dma.h	189;"	d
DMA_Priority_Medium	inc/stm32f10x_dma.h	188;"	d
DMA_Priority_VeryHigh	inc/stm32f10x_dma.h	186;"	d
DMA_StructInit	inc/stm32f10x_dma.h	/^void DMA_StructInit(DMA_InitTypeDef* DMA_InitStruct);$/;"	p	signature:(DMA_InitTypeDef* DMA_InitStruct)
DMA_StructInit	src/stm32f10x_dma.c	/^void DMA_StructInit(DMA_InitTypeDef* DMA_InitStruct)$/;"	f	signature:(DMA_InitTypeDef* DMA_InitStruct)
DOR_Offset	src/stm32f10x_dac.c	68;"	d	file:
DR_ADDRESS	src/stm32f10x_adc.c	139;"	d	file:
DUAL_SWTRIG_Reset	src/stm32f10x_dac.c	60;"	d	file:
DUAL_SWTRIG_Set	src/stm32f10x_dac.c	59;"	d	file:
Data	inc/stm32f10x_can.h	/^  uint8_t Data[8]; \/*!< Contains the data to be received. It ranges from 0 to 0xFF. *\/$/;"	m	struct:__anon6	access:public
Data	inc/stm32f10x_can.h	/^  uint8_t Data[8]; \/*!< Contains the data to be transmitted. It ranges from 0 to 0xFF. *\/$/;"	m	struct:__anon5	access:public
ENCMDCOMPL_BitNumber	src/stm32f10x_sdio.c	56;"	d	file:
ESR_BOFF	src/stm32f10x_can.c	90;"	d	file:
ESR_EPVF	src/stm32f10x_can.c	89;"	d	file:
ESR_EWGF	src/stm32f10x_can.c	88;"	d	file:
EVCR_EVOE_BB	src/stm32f10x_gpio.c	54;"	d	file:
EVCR_OFFSET	src/stm32f10x_gpio.c	52;"	d	file:
EVCR_PORTPINCONFIG_MASK	src/stm32f10x_gpio.c	64;"	d	file:
EVOE_BitNumber	src/stm32f10x_gpio.c	53;"	d	file:
EWI_BitNumber	src/stm32f10x_wwdg.c	51;"	d	file:
EWUP_BitNumber	src/stm32f10x_pwr.c	64;"	d	file:
EXTIMode_TypeDef	inc/stm32f10x_exti.h	/^}EXTIMode_TypeDef;$/;"	t	typeref:enum:__anon10
EXTITrigger_TypeDef	inc/stm32f10x_exti.h	/^}EXTITrigger_TypeDef;$/;"	t	typeref:enum:__anon11
EXTI_ClearFlag	inc/stm32f10x_exti.h	/^void EXTI_ClearFlag(uint32_t EXTI_Line);$/;"	p	signature:(uint32_t EXTI_Line)
EXTI_ClearFlag	src/stm32f10x_exti.c	/^void EXTI_ClearFlag(uint32_t EXTI_Line)$/;"	f	signature:(uint32_t EXTI_Line)
EXTI_ClearITPendingBit	inc/stm32f10x_exti.h	/^void EXTI_ClearITPendingBit(uint32_t EXTI_Line);$/;"	p	signature:(uint32_t EXTI_Line)
EXTI_ClearITPendingBit	src/stm32f10x_exti.c	/^void EXTI_ClearITPendingBit(uint32_t EXTI_Line)$/;"	f	signature:(uint32_t EXTI_Line)
EXTI_DeInit	inc/stm32f10x_exti.h	/^void EXTI_DeInit(void);$/;"	p	signature:(void)
EXTI_DeInit	src/stm32f10x_exti.c	/^void EXTI_DeInit(void)$/;"	f	signature:(void)
EXTI_GenerateSWInterrupt	inc/stm32f10x_exti.h	/^void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line);$/;"	p	signature:(uint32_t EXTI_Line)
EXTI_GenerateSWInterrupt	src/stm32f10x_exti.c	/^void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)$/;"	f	signature:(uint32_t EXTI_Line)
EXTI_GetFlagStatus	inc/stm32f10x_exti.h	/^FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line);$/;"	p	signature:(uint32_t EXTI_Line)
EXTI_GetFlagStatus	src/stm32f10x_exti.c	/^FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)$/;"	f	signature:(uint32_t EXTI_Line)
EXTI_GetITStatus	inc/stm32f10x_exti.h	/^ITStatus EXTI_GetITStatus(uint32_t EXTI_Line);$/;"	p	signature:(uint32_t EXTI_Line)
EXTI_GetITStatus	src/stm32f10x_exti.c	/^ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)$/;"	f	signature:(uint32_t EXTI_Line)
EXTI_Init	inc/stm32f10x_exti.h	/^void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct);$/;"	p	signature:(EXTI_InitTypeDef* EXTI_InitStruct)
EXTI_Init	src/stm32f10x_exti.c	/^void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)$/;"	f	signature:(EXTI_InitTypeDef* EXTI_InitStruct)
EXTI_InitTypeDef	inc/stm32f10x_exti.h	/^}EXTI_InitTypeDef;$/;"	t	typeref:struct:__anon12
EXTI_Line	inc/stm32f10x_exti.h	/^  uint32_t EXTI_Line;               \/*!< Specifies the EXTI lines to be enabled or disabled.$/;"	m	struct:__anon12	access:public
EXTI_Line0	inc/stm32f10x_exti.h	102;"	d
EXTI_Line1	inc/stm32f10x_exti.h	103;"	d
EXTI_Line10	inc/stm32f10x_exti.h	112;"	d
EXTI_Line11	inc/stm32f10x_exti.h	113;"	d
EXTI_Line12	inc/stm32f10x_exti.h	114;"	d
EXTI_Line13	inc/stm32f10x_exti.h	115;"	d
EXTI_Line14	inc/stm32f10x_exti.h	116;"	d
EXTI_Line15	inc/stm32f10x_exti.h	117;"	d
EXTI_Line16	inc/stm32f10x_exti.h	118;"	d
EXTI_Line17	inc/stm32f10x_exti.h	119;"	d
EXTI_Line18	inc/stm32f10x_exti.h	120;"	d
EXTI_Line19	inc/stm32f10x_exti.h	122;"	d
EXTI_Line2	inc/stm32f10x_exti.h	104;"	d
EXTI_Line3	inc/stm32f10x_exti.h	105;"	d
EXTI_Line4	inc/stm32f10x_exti.h	106;"	d
EXTI_Line5	inc/stm32f10x_exti.h	107;"	d
EXTI_Line6	inc/stm32f10x_exti.h	108;"	d
EXTI_Line7	inc/stm32f10x_exti.h	109;"	d
EXTI_Line8	inc/stm32f10x_exti.h	110;"	d
EXTI_Line9	inc/stm32f10x_exti.h	111;"	d
EXTI_LineCmd	inc/stm32f10x_exti.h	/^  FunctionalState EXTI_LineCmd;     \/*!< Specifies the new state of the selected EXTI lines.$/;"	m	struct:__anon12	access:public
EXTI_LineNone	src/stm32f10x_exti.c	45;"	d	file:
EXTI_Mode	inc/stm32f10x_exti.h	/^  EXTIMode_TypeDef EXTI_Mode;       \/*!< Specifies the mode for the EXTI lines.$/;"	m	struct:__anon12	access:public
EXTI_Mode_Event	inc/stm32f10x_exti.h	/^  EXTI_Mode_Event = 0x04$/;"	e	enum:__anon10
EXTI_Mode_Interrupt	inc/stm32f10x_exti.h	/^  EXTI_Mode_Interrupt = 0x00,$/;"	e	enum:__anon10
EXTI_StructInit	inc/stm32f10x_exti.h	/^void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct);$/;"	p	signature:(EXTI_InitTypeDef* EXTI_InitStruct)
EXTI_StructInit	src/stm32f10x_exti.c	/^void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)$/;"	f	signature:(EXTI_InitTypeDef* EXTI_InitStruct)
EXTI_Trigger	inc/stm32f10x_exti.h	/^  EXTITrigger_TypeDef EXTI_Trigger; \/*!< Specifies the trigger signal active edge for the EXTI lines.$/;"	m	struct:__anon12	access:public
EXTI_Trigger_Falling	inc/stm32f10x_exti.h	/^  EXTI_Trigger_Falling = 0x0C,  $/;"	e	enum:__anon11
EXTI_Trigger_Rising	inc/stm32f10x_exti.h	/^  EXTI_Trigger_Rising = 0x08,$/;"	e	enum:__anon11
EXTI_Trigger_Rising_Falling	inc/stm32f10x_exti.h	/^  EXTI_Trigger_Rising_Falling = 0x10$/;"	e	enum:__anon11
EraseTimeout	src/stm32f10x_flash.c	84;"	d	file:
ExtId	inc/stm32f10x_can.h	/^  uint32_t ExtId;  \/*!< Specifies the extended identifier.$/;"	m	struct:__anon5	access:public
ExtId	inc/stm32f10x_can.h	/^  uint32_t ExtId;  \/*!< Specifies the extended identifier.$/;"	m	struct:__anon6	access:public
FLAG_Mask	src/stm32f10x_cec.c	73;"	d	file:
FLAG_Mask	src/stm32f10x_dma.c	66;"	d	file:
FLAG_Mask	src/stm32f10x_i2c.c	119;"	d	file:
FLAG_Mask	src/stm32f10x_rcc.c	162;"	d	file:
FLASH_BANK1_END_ADDRESS	src/stm32f10x_flash.c	81;"	d	file:
FLASH_BOOT_Bank1	inc/stm32f10x_flash.h	262;"	d
FLASH_BOOT_Bank2	inc/stm32f10x_flash.h	264;"	d
FLASH_BUSY	inc/stm32f10x_flash.h	/^  FLASH_BUSY = 1,$/;"	e	enum:__anon24
FLASH_BootConfig	inc/stm32f10x_flash.h	/^FLASH_Status FLASH_BootConfig(uint16_t FLASH_BOOT);$/;"	p	signature:(uint16_t FLASH_BOOT)
FLASH_BootConfig	src/stm32f10x_flash.c	/^FLASH_Status FLASH_BootConfig(uint16_t FLASH_BOOT)$/;"	f	signature:(uint16_t FLASH_BOOT)
FLASH_COMPLETE	inc/stm32f10x_flash.h	/^  FLASH_COMPLETE,$/;"	e	enum:__anon24
FLASH_ClearFlag	inc/stm32f10x_flash.h	/^void FLASH_ClearFlag(uint32_t FLASH_FLAG);$/;"	p	signature:(uint32_t FLASH_FLAG)
FLASH_ClearFlag	src/stm32f10x_flash.c	/^void FLASH_ClearFlag(uint32_t FLASH_FLAG)$/;"	f	signature:(uint32_t FLASH_FLAG)
FLASH_ERROR_PG	inc/stm32f10x_flash.h	/^  FLASH_ERROR_PG,$/;"	e	enum:__anon24
FLASH_ERROR_WRP	inc/stm32f10x_flash.h	/^  FLASH_ERROR_WRP,$/;"	e	enum:__anon24
FLASH_EnableWriteProtection	inc/stm32f10x_flash.h	/^FLASH_Status FLASH_EnableWriteProtection(uint32_t FLASH_Pages);$/;"	p	signature:(uint32_t FLASH_Pages)
FLASH_EnableWriteProtection	src/stm32f10x_flash.c	/^FLASH_Status FLASH_EnableWriteProtection(uint32_t FLASH_Pages)$/;"	f	signature:(uint32_t FLASH_Pages)
FLASH_EraseAllBank1Pages	inc/stm32f10x_flash.h	/^FLASH_Status FLASH_EraseAllBank1Pages(void);$/;"	p	signature:(void)
FLASH_EraseAllBank1Pages	src/stm32f10x_flash.c	/^FLASH_Status FLASH_EraseAllBank1Pages(void)$/;"	f	signature:(void)
FLASH_EraseAllBank2Pages	inc/stm32f10x_flash.h	/^FLASH_Status FLASH_EraseAllBank2Pages(void);$/;"	p	signature:(void)
FLASH_EraseAllBank2Pages	src/stm32f10x_flash.c	/^FLASH_Status FLASH_EraseAllBank2Pages(void)$/;"	f	signature:(void)
FLASH_EraseAllPages	inc/stm32f10x_flash.h	/^FLASH_Status FLASH_EraseAllPages(void);$/;"	p	signature:(void)
FLASH_EraseAllPages	src/stm32f10x_flash.c	/^FLASH_Status FLASH_EraseAllPages(void)$/;"	f	signature:(void)
FLASH_EraseOptionBytes	inc/stm32f10x_flash.h	/^FLASH_Status FLASH_EraseOptionBytes(void);$/;"	p	signature:(void)
FLASH_EraseOptionBytes	src/stm32f10x_flash.c	/^FLASH_Status FLASH_EraseOptionBytes(void)$/;"	f	signature:(void)
FLASH_ErasePage	inc/stm32f10x_flash.h	/^FLASH_Status FLASH_ErasePage(uint32_t Page_Address);$/;"	p	signature:(uint32_t Page_Address)
FLASH_ErasePage	src/stm32f10x_flash.c	/^FLASH_Status FLASH_ErasePage(uint32_t Page_Address)$/;"	f	signature:(uint32_t Page_Address)
FLASH_FLAG_BANK1_BSY	inc/stm32f10x_flash.h	307;"	d
FLASH_FLAG_BANK1_BSY	inc/stm32f10x_flash.h	333;"	d
FLASH_FLAG_BANK1_EOP	inc/stm32f10x_flash.h	308;"	d
FLASH_FLAG_BANK1_EOP	inc/stm32f10x_flash.h	334;"	d
FLASH_FLAG_BANK1_PGERR	inc/stm32f10x_flash.h	309;"	d
FLASH_FLAG_BANK1_PGERR	inc/stm32f10x_flash.h	335;"	d
FLASH_FLAG_BANK1_WRPRTERR	inc/stm32f10x_flash.h	310;"	d
FLASH_FLAG_BANK1_WRPRTERR	inc/stm32f10x_flash.h	336;"	d
FLASH_FLAG_BANK2_BSY	inc/stm32f10x_flash.h	302;"	d
FLASH_FLAG_BANK2_EOP	inc/stm32f10x_flash.h	303;"	d
FLASH_FLAG_BANK2_PGERR	inc/stm32f10x_flash.h	304;"	d
FLASH_FLAG_BANK2_WRPRTERR	inc/stm32f10x_flash.h	305;"	d
FLASH_FLAG_BSY	inc/stm32f10x_flash.h	312;"	d
FLASH_FLAG_BSY	inc/stm32f10x_flash.h	327;"	d
FLASH_FLAG_EOP	inc/stm32f10x_flash.h	313;"	d
FLASH_FLAG_EOP	inc/stm32f10x_flash.h	328;"	d
FLASH_FLAG_OPTERR	inc/stm32f10x_flash.h	316;"	d
FLASH_FLAG_OPTERR	inc/stm32f10x_flash.h	331;"	d
FLASH_FLAG_PGERR	inc/stm32f10x_flash.h	314;"	d
FLASH_FLAG_PGERR	inc/stm32f10x_flash.h	329;"	d
FLASH_FLAG_WRPRTERR	inc/stm32f10x_flash.h	315;"	d
FLASH_FLAG_WRPRTERR	inc/stm32f10x_flash.h	330;"	d
FLASH_GetBank1Status	inc/stm32f10x_flash.h	/^FLASH_Status FLASH_GetBank1Status(void);$/;"	p	signature:(void)
FLASH_GetBank1Status	src/stm32f10x_flash.c	/^FLASH_Status FLASH_GetBank1Status(void)$/;"	f	signature:(void)
FLASH_GetBank2Status	inc/stm32f10x_flash.h	/^FLASH_Status FLASH_GetBank2Status(void);$/;"	p	signature:(void)
FLASH_GetBank2Status	src/stm32f10x_flash.c	/^FLASH_Status FLASH_GetBank2Status(void)$/;"	f	signature:(void)
FLASH_GetFlagStatus	inc/stm32f10x_flash.h	/^FlagStatus FLASH_GetFlagStatus(uint32_t FLASH_FLAG);$/;"	p	signature:(uint32_t FLASH_FLAG)
FLASH_GetFlagStatus	src/stm32f10x_flash.c	/^FlagStatus FLASH_GetFlagStatus(uint32_t FLASH_FLAG)$/;"	f	signature:(uint32_t FLASH_FLAG)
FLASH_GetPrefetchBufferStatus	inc/stm32f10x_flash.h	/^FlagStatus FLASH_GetPrefetchBufferStatus(void);$/;"	p	signature:(void)
FLASH_GetPrefetchBufferStatus	src/stm32f10x_flash.c	/^FlagStatus FLASH_GetPrefetchBufferStatus(void)$/;"	f	signature:(void)
FLASH_GetReadOutProtectionStatus	inc/stm32f10x_flash.h	/^FlagStatus FLASH_GetReadOutProtectionStatus(void);$/;"	p	signature:(void)
FLASH_GetReadOutProtectionStatus	src/stm32f10x_flash.c	/^FlagStatus FLASH_GetReadOutProtectionStatus(void)$/;"	f	signature:(void)
FLASH_GetStatus	inc/stm32f10x_flash.h	/^FLASH_Status FLASH_GetStatus(void);$/;"	p	signature:(void)
FLASH_GetStatus	src/stm32f10x_flash.c	/^FLASH_Status FLASH_GetStatus(void)$/;"	f	signature:(void)
FLASH_GetUserOptionByte	inc/stm32f10x_flash.h	/^uint32_t FLASH_GetUserOptionByte(void);$/;"	p	signature:(void)
FLASH_GetUserOptionByte	src/stm32f10x_flash.c	/^uint32_t FLASH_GetUserOptionByte(void)$/;"	f	signature:(void)
FLASH_GetWriteProtectionOptionByte	inc/stm32f10x_flash.h	/^uint32_t FLASH_GetWriteProtectionOptionByte(void);$/;"	p	signature:(void)
FLASH_GetWriteProtectionOptionByte	src/stm32f10x_flash.c	/^uint32_t FLASH_GetWriteProtectionOptionByte(void)$/;"	f	signature:(void)
FLASH_HalfCycleAccessCmd	inc/stm32f10x_flash.h	/^void FLASH_HalfCycleAccessCmd(uint32_t FLASH_HalfCycleAccess);$/;"	p	signature:(uint32_t FLASH_HalfCycleAccess)
FLASH_HalfCycleAccessCmd	src/stm32f10x_flash.c	/^void FLASH_HalfCycleAccessCmd(uint32_t FLASH_HalfCycleAccess)$/;"	f	signature:(uint32_t FLASH_HalfCycleAccess)
FLASH_HalfCycleAccess_Disable	inc/stm32f10x_flash.h	85;"	d
FLASH_HalfCycleAccess_Enable	inc/stm32f10x_flash.h	84;"	d
FLASH_ITConfig	inc/stm32f10x_flash.h	/^void FLASH_ITConfig(uint32_t FLASH_IT, FunctionalState NewState);$/;"	p	signature:(uint32_t FLASH_IT, FunctionalState NewState)
FLASH_ITConfig	src/stm32f10x_flash.c	/^void FLASH_ITConfig(uint32_t FLASH_IT, FunctionalState NewState)$/;"	f	signature:(uint32_t FLASH_IT, FunctionalState NewState)
FLASH_IT_BANK1_EOP	inc/stm32f10x_flash.h	280;"	d
FLASH_IT_BANK1_EOP	inc/stm32f10x_flash.h	289;"	d
FLASH_IT_BANK1_ERROR	inc/stm32f10x_flash.h	279;"	d
FLASH_IT_BANK1_ERROR	inc/stm32f10x_flash.h	288;"	d
FLASH_IT_BANK2_EOP	inc/stm32f10x_flash.h	277;"	d
FLASH_IT_BANK2_ERROR	inc/stm32f10x_flash.h	276;"	d
FLASH_IT_EOP	inc/stm32f10x_flash.h	283;"	d
FLASH_IT_EOP	inc/stm32f10x_flash.h	287;"	d
FLASH_IT_ERROR	inc/stm32f10x_flash.h	282;"	d
FLASH_IT_ERROR	inc/stm32f10x_flash.h	286;"	d
FLASH_KEY1	src/stm32f10x_flash.c	77;"	d	file:
FLASH_KEY2	src/stm32f10x_flash.c	78;"	d	file:
FLASH_Latency_0	inc/stm32f10x_flash.h	70;"	d
FLASH_Latency_1	inc/stm32f10x_flash.h	71;"	d
FLASH_Latency_2	inc/stm32f10x_flash.h	72;"	d
FLASH_Lock	inc/stm32f10x_flash.h	/^void FLASH_Lock(void);$/;"	p	signature:(void)
FLASH_Lock	src/stm32f10x_flash.c	/^void FLASH_Lock(void)$/;"	f	signature:(void)
FLASH_LockBank1	inc/stm32f10x_flash.h	/^void FLASH_LockBank1(void);$/;"	p	signature:(void)
FLASH_LockBank1	src/stm32f10x_flash.c	/^void FLASH_LockBank1(void)$/;"	f	signature:(void)
FLASH_LockBank2	inc/stm32f10x_flash.h	/^void FLASH_LockBank2(void);$/;"	p	signature:(void)
FLASH_LockBank2	src/stm32f10x_flash.c	/^void FLASH_LockBank2(void)$/;"	f	signature:(void)
FLASH_PrefetchBufferCmd	inc/stm32f10x_flash.h	/^void FLASH_PrefetchBufferCmd(uint32_t FLASH_PrefetchBuffer);$/;"	p	signature:(uint32_t FLASH_PrefetchBuffer)
FLASH_PrefetchBufferCmd	src/stm32f10x_flash.c	/^void FLASH_PrefetchBufferCmd(uint32_t FLASH_PrefetchBuffer)$/;"	f	signature:(uint32_t FLASH_PrefetchBuffer)
FLASH_PrefetchBuffer_Disable	inc/stm32f10x_flash.h	97;"	d
FLASH_PrefetchBuffer_Enable	inc/stm32f10x_flash.h	96;"	d
FLASH_ProgramHalfWord	inc/stm32f10x_flash.h	/^FLASH_Status FLASH_ProgramHalfWord(uint32_t Address, uint16_t Data);$/;"	p	signature:(uint32_t Address, uint16_t Data)
FLASH_ProgramHalfWord	src/stm32f10x_flash.c	/^FLASH_Status FLASH_ProgramHalfWord(uint32_t Address, uint16_t Data)$/;"	f	signature:(uint32_t Address, uint16_t Data)
FLASH_ProgramOptionByteData	inc/stm32f10x_flash.h	/^FLASH_Status FLASH_ProgramOptionByteData(uint32_t Address, uint8_t Data);$/;"	p	signature:(uint32_t Address, uint8_t Data)
FLASH_ProgramOptionByteData	src/stm32f10x_flash.c	/^FLASH_Status FLASH_ProgramOptionByteData(uint32_t Address, uint8_t Data)$/;"	f	signature:(uint32_t Address, uint8_t Data)
FLASH_ProgramWord	inc/stm32f10x_flash.h	/^FLASH_Status FLASH_ProgramWord(uint32_t Address, uint32_t Data);$/;"	p	signature:(uint32_t Address, uint32_t Data)
FLASH_ProgramWord	src/stm32f10x_flash.c	/^FLASH_Status FLASH_ProgramWord(uint32_t Address, uint32_t Data)$/;"	f	signature:(uint32_t Address, uint32_t Data)
FLASH_ReadOutProtection	inc/stm32f10x_flash.h	/^FLASH_Status FLASH_ReadOutProtection(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
FLASH_ReadOutProtection	src/stm32f10x_flash.c	/^FLASH_Status FLASH_ReadOutProtection(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
FLASH_SetLatency	inc/stm32f10x_flash.h	/^void FLASH_SetLatency(uint32_t FLASH_Latency);$/;"	p	signature:(uint32_t FLASH_Latency)
FLASH_SetLatency	src/stm32f10x_flash.c	/^void FLASH_SetLatency(uint32_t FLASH_Latency)$/;"	f	signature:(uint32_t FLASH_Latency)
FLASH_Status	inc/stm32f10x_flash.h	/^}FLASH_Status;$/;"	t	typeref:enum:__anon24
FLASH_TIMEOUT	inc/stm32f10x_flash.h	/^  FLASH_TIMEOUT$/;"	e	enum:__anon24
FLASH_Unlock	inc/stm32f10x_flash.h	/^void FLASH_Unlock(void);$/;"	p	signature:(void)
FLASH_Unlock	src/stm32f10x_flash.c	/^void FLASH_Unlock(void)$/;"	f	signature:(void)
FLASH_UnlockBank1	inc/stm32f10x_flash.h	/^void FLASH_UnlockBank1(void);$/;"	p	signature:(void)
FLASH_UnlockBank1	src/stm32f10x_flash.c	/^void FLASH_UnlockBank1(void)$/;"	f	signature:(void)
FLASH_UnlockBank2	inc/stm32f10x_flash.h	/^void FLASH_UnlockBank2(void);$/;"	p	signature:(void)
FLASH_UnlockBank2	src/stm32f10x_flash.c	/^void FLASH_UnlockBank2(void)$/;"	f	signature:(void)
FLASH_UserOptionByteConfig	inc/stm32f10x_flash.h	/^FLASH_Status FLASH_UserOptionByteConfig(uint16_t OB_IWDG, uint16_t OB_STOP, uint16_t OB_STDBY);$/;"	p	signature:(uint16_t OB_IWDG, uint16_t OB_STOP, uint16_t OB_STDBY)
FLASH_UserOptionByteConfig	src/stm32f10x_flash.c	/^FLASH_Status FLASH_UserOptionByteConfig(uint16_t OB_IWDG, uint16_t OB_STOP, uint16_t OB_STDBY)$/;"	f	signature:(uint16_t OB_IWDG, uint16_t OB_STOP, uint16_t OB_STDBY)
FLASH_WRProt_AllPages	inc/stm32f10x_flash.h	211;"	d
FLASH_WRProt_Pages0to1	inc/stm32f10x_flash.h	145;"	d
FLASH_WRProt_Pages0to3	inc/stm32f10x_flash.h	109;"	d
FLASH_WRProt_Pages100to103	inc/stm32f10x_flash.h	136;"	d
FLASH_WRProt_Pages104to107	inc/stm32f10x_flash.h	137;"	d
FLASH_WRProt_Pages108to111	inc/stm32f10x_flash.h	138;"	d
FLASH_WRProt_Pages10to11	inc/stm32f10x_flash.h	155;"	d
FLASH_WRProt_Pages112to115	inc/stm32f10x_flash.h	139;"	d
FLASH_WRProt_Pages116to119	inc/stm32f10x_flash.h	140;"	d
FLASH_WRProt_Pages120to123	inc/stm32f10x_flash.h	141;"	d
FLASH_WRProt_Pages124to127	inc/stm32f10x_flash.h	142;"	d
FLASH_WRProt_Pages12to13	inc/stm32f10x_flash.h	157;"	d
FLASH_WRProt_Pages12to15	inc/stm32f10x_flash.h	112;"	d
FLASH_WRProt_Pages14to15	inc/stm32f10x_flash.h	159;"	d
FLASH_WRProt_Pages16to17	inc/stm32f10x_flash.h	161;"	d
FLASH_WRProt_Pages16to19	inc/stm32f10x_flash.h	113;"	d
FLASH_WRProt_Pages18to19	inc/stm32f10x_flash.h	163;"	d
FLASH_WRProt_Pages20to21	inc/stm32f10x_flash.h	165;"	d
FLASH_WRProt_Pages20to23	inc/stm32f10x_flash.h	114;"	d
FLASH_WRProt_Pages22to23	inc/stm32f10x_flash.h	167;"	d
FLASH_WRProt_Pages24to25	inc/stm32f10x_flash.h	169;"	d
FLASH_WRProt_Pages24to27	inc/stm32f10x_flash.h	115;"	d
FLASH_WRProt_Pages26to27	inc/stm32f10x_flash.h	171;"	d
FLASH_WRProt_Pages28to29	inc/stm32f10x_flash.h	173;"	d
FLASH_WRProt_Pages28to31	inc/stm32f10x_flash.h	116;"	d
FLASH_WRProt_Pages2to3	inc/stm32f10x_flash.h	147;"	d
FLASH_WRProt_Pages30to31	inc/stm32f10x_flash.h	175;"	d
FLASH_WRProt_Pages32to33	inc/stm32f10x_flash.h	177;"	d
FLASH_WRProt_Pages32to35	inc/stm32f10x_flash.h	119;"	d
FLASH_WRProt_Pages34to35	inc/stm32f10x_flash.h	179;"	d
FLASH_WRProt_Pages36to37	inc/stm32f10x_flash.h	181;"	d
FLASH_WRProt_Pages36to39	inc/stm32f10x_flash.h	120;"	d
FLASH_WRProt_Pages38to39	inc/stm32f10x_flash.h	183;"	d
FLASH_WRProt_Pages40to41	inc/stm32f10x_flash.h	185;"	d
FLASH_WRProt_Pages40to43	inc/stm32f10x_flash.h	121;"	d
FLASH_WRProt_Pages42to43	inc/stm32f10x_flash.h	187;"	d
FLASH_WRProt_Pages44to45	inc/stm32f10x_flash.h	189;"	d
FLASH_WRProt_Pages44to47	inc/stm32f10x_flash.h	122;"	d
FLASH_WRProt_Pages46to47	inc/stm32f10x_flash.h	191;"	d
FLASH_WRProt_Pages48to49	inc/stm32f10x_flash.h	193;"	d
FLASH_WRProt_Pages48to51	inc/stm32f10x_flash.h	123;"	d
FLASH_WRProt_Pages4to5	inc/stm32f10x_flash.h	149;"	d
FLASH_WRProt_Pages4to7	inc/stm32f10x_flash.h	110;"	d
FLASH_WRProt_Pages50to51	inc/stm32f10x_flash.h	195;"	d
FLASH_WRProt_Pages52to53	inc/stm32f10x_flash.h	197;"	d
FLASH_WRProt_Pages52to55	inc/stm32f10x_flash.h	124;"	d
FLASH_WRProt_Pages54to55	inc/stm32f10x_flash.h	199;"	d
FLASH_WRProt_Pages56to57	inc/stm32f10x_flash.h	201;"	d
FLASH_WRProt_Pages56to59	inc/stm32f10x_flash.h	125;"	d
FLASH_WRProt_Pages58to59	inc/stm32f10x_flash.h	203;"	d
FLASH_WRProt_Pages60to61	inc/stm32f10x_flash.h	205;"	d
FLASH_WRProt_Pages60to63	inc/stm32f10x_flash.h	126;"	d
FLASH_WRProt_Pages62to127	inc/stm32f10x_flash.h	207;"	d
FLASH_WRProt_Pages62to255	inc/stm32f10x_flash.h	208;"	d
FLASH_WRProt_Pages62to511	inc/stm32f10x_flash.h	209;"	d
FLASH_WRProt_Pages64to67	inc/stm32f10x_flash.h	127;"	d
FLASH_WRProt_Pages68to71	inc/stm32f10x_flash.h	128;"	d
FLASH_WRProt_Pages6to7	inc/stm32f10x_flash.h	151;"	d
FLASH_WRProt_Pages72to75	inc/stm32f10x_flash.h	129;"	d
FLASH_WRProt_Pages76to79	inc/stm32f10x_flash.h	130;"	d
FLASH_WRProt_Pages80to83	inc/stm32f10x_flash.h	131;"	d
FLASH_WRProt_Pages84to87	inc/stm32f10x_flash.h	132;"	d
FLASH_WRProt_Pages88to91	inc/stm32f10x_flash.h	133;"	d
FLASH_WRProt_Pages8to11	inc/stm32f10x_flash.h	111;"	d
FLASH_WRProt_Pages8to9	inc/stm32f10x_flash.h	153;"	d
FLASH_WRProt_Pages92to95	inc/stm32f10x_flash.h	134;"	d
FLASH_WRProt_Pages96to99	inc/stm32f10x_flash.h	135;"	d
FLASH_WaitForLastBank1Operation	inc/stm32f10x_flash.h	/^FLASH_Status FLASH_WaitForLastBank1Operation(uint32_t Timeout);$/;"	p	signature:(uint32_t Timeout)
FLASH_WaitForLastBank1Operation	src/stm32f10x_flash.c	/^FLASH_Status FLASH_WaitForLastBank1Operation(uint32_t Timeout)$/;"	f	signature:(uint32_t Timeout)
FLASH_WaitForLastBank2Operation	inc/stm32f10x_flash.h	/^FLASH_Status FLASH_WaitForLastBank2Operation(uint32_t Timeout);$/;"	p	signature:(uint32_t Timeout)
FLASH_WaitForLastBank2Operation	src/stm32f10x_flash.c	/^FLASH_Status FLASH_WaitForLastBank2Operation(uint32_t Timeout)$/;"	f	signature:(uint32_t Timeout)
FLASH_WaitForLastOperation	inc/stm32f10x_flash.h	/^FLASH_Status FLASH_WaitForLastOperation(uint32_t Timeout);$/;"	p	signature:(uint32_t Timeout)
FLASH_WaitForLastOperation	src/stm32f10x_flash.c	/^FLASH_Status FLASH_WaitForLastOperation(uint32_t Timeout)$/;"	f	signature:(uint32_t Timeout)
FMI	inc/stm32f10x_can.h	/^  uint8_t FMI;     \/*!< Specifies the index of the filter the message stored in the mailbox passes through.$/;"	m	struct:__anon6	access:public
FMR_FINIT	src/stm32f10x_can.c	96;"	d	file:
FSMC_AccessMode	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_AccessMode;             \/*!< Specifies the asynchronous access mode. $/;"	m	struct:__anon13	access:public
FSMC_AccessMode_A	inc/stm32f10x_fsmc.h	496;"	d
FSMC_AccessMode_B	inc/stm32f10x_fsmc.h	497;"	d
FSMC_AccessMode_C	inc/stm32f10x_fsmc.h	498;"	d
FSMC_AccessMode_D	inc/stm32f10x_fsmc.h	499;"	d
FSMC_AddressHoldTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_AddressHoldTime;        \/*!< Defines the number of HCLK cycles to configure$/;"	m	struct:__anon13	access:public
FSMC_AddressSetupTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_AddressSetupTime;       \/*!< Defines the number of HCLK cycles to configure$/;"	m	struct:__anon13	access:public
FSMC_AttributeSpaceTimingStruct	inc/stm32f10x_fsmc.h	/^  FSMC_NAND_PCCARDTimingInitTypeDef*  FSMC_AttributeSpaceTimingStruct;  \/*!< FSMC Attribute Space Timing *\/ $/;"	m	struct:__anon17	access:public
FSMC_AttributeSpaceTimingStruct	inc/stm32f10x_fsmc.h	/^  FSMC_NAND_PCCARDTimingInitTypeDef*  FSMC_AttributeSpaceTimingStruct; \/*!< FSMC Attribute Space Timing *\/$/;"	m	struct:__anon16	access:public
FSMC_Bank	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_Bank;                \/*!< Specifies the NOR\/SRAM memory bank that will be used.$/;"	m	struct:__anon14	access:public
FSMC_Bank	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_Bank;              \/*!< Specifies the NAND memory bank that will be used.$/;"	m	struct:__anon16	access:public
FSMC_Bank1_NORSRAM1	inc/stm32f10x_fsmc.h	244;"	d
FSMC_Bank1_NORSRAM2	inc/stm32f10x_fsmc.h	245;"	d
FSMC_Bank1_NORSRAM3	inc/stm32f10x_fsmc.h	246;"	d
FSMC_Bank1_NORSRAM4	inc/stm32f10x_fsmc.h	247;"	d
FSMC_Bank2_NAND	inc/stm32f10x_fsmc.h	255;"	d
FSMC_Bank3_NAND	inc/stm32f10x_fsmc.h	256;"	d
FSMC_Bank4_PCCARD	inc/stm32f10x_fsmc.h	264;"	d
FSMC_BurstAccessMode	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_BurstAccessMode;     \/*!< Enables or disables the burst access mode for Flash memory,$/;"	m	struct:__anon14	access:public
FSMC_BurstAccessMode_Disable	inc/stm32f10x_fsmc.h	334;"	d
FSMC_BurstAccessMode_Enable	inc/stm32f10x_fsmc.h	335;"	d
FSMC_BusTurnAroundDuration	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_BusTurnAroundDuration;  \/*!< Defines the number of HCLK cycles to configure$/;"	m	struct:__anon13	access:public
FSMC_CLKDivision	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_CLKDivision;            \/*!< Defines the period of CLK clock output signal, expressed in number of HCLK cycles.$/;"	m	struct:__anon13	access:public
FSMC_ClearFlag	inc/stm32f10x_fsmc.h	/^void FSMC_ClearFlag(uint32_t FSMC_Bank, uint32_t FSMC_FLAG);$/;"	p	signature:(uint32_t FSMC_Bank, uint32_t FSMC_FLAG)
FSMC_ClearFlag	src/stm32f10x_fsmc.c	/^void FSMC_ClearFlag(uint32_t FSMC_Bank, uint32_t FSMC_FLAG)$/;"	f	signature:(uint32_t FSMC_Bank, uint32_t FSMC_FLAG)
FSMC_ClearITPendingBit	inc/stm32f10x_fsmc.h	/^void FSMC_ClearITPendingBit(uint32_t FSMC_Bank, uint32_t FSMC_IT);$/;"	p	signature:(uint32_t FSMC_Bank, uint32_t FSMC_IT)
FSMC_ClearITPendingBit	src/stm32f10x_fsmc.c	/^void FSMC_ClearITPendingBit(uint32_t FSMC_Bank, uint32_t FSMC_IT)$/;"	f	signature:(uint32_t FSMC_Bank, uint32_t FSMC_IT)
FSMC_CommonSpaceTimingStruct	inc/stm32f10x_fsmc.h	/^  FSMC_NAND_PCCARDTimingInitTypeDef*  FSMC_CommonSpaceTimingStruct;   \/*!< FSMC Common Space Timing *\/ $/;"	m	struct:__anon16	access:public
FSMC_CommonSpaceTimingStruct	inc/stm32f10x_fsmc.h	/^  FSMC_NAND_PCCARDTimingInitTypeDef*  FSMC_CommonSpaceTimingStruct; \/*!< FSMC Common Space Timing *\/$/;"	m	struct:__anon17	access:public
FSMC_DataAddressMux	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_DataAddressMux;      \/*!< Specifies whether the address and data values are$/;"	m	struct:__anon14	access:public
FSMC_DataAddressMux_Disable	inc/stm32f10x_fsmc.h	293;"	d
FSMC_DataAddressMux_Enable	inc/stm32f10x_fsmc.h	294;"	d
FSMC_DataLatency	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_DataLatency;            \/*!< Defines the number of memory clock cycles to issue$/;"	m	struct:__anon13	access:public
FSMC_DataSetupTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_DataSetupTime;          \/*!< Defines the number of HCLK cycles to configure$/;"	m	struct:__anon13	access:public
FSMC_ECC	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_ECC;              \/*!< Enables or disables the ECC computation.$/;"	m	struct:__anon16	access:public
FSMC_ECCPageSize	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_ECCPageSize;      \/*!< Defines the page size for the extended ECC.$/;"	m	struct:__anon16	access:public
FSMC_ECCPageSize_1024Bytes	inc/stm32f10x_fsmc.h	550;"	d
FSMC_ECCPageSize_2048Bytes	inc/stm32f10x_fsmc.h	551;"	d
FSMC_ECCPageSize_256Bytes	inc/stm32f10x_fsmc.h	548;"	d
FSMC_ECCPageSize_4096Bytes	inc/stm32f10x_fsmc.h	552;"	d
FSMC_ECCPageSize_512Bytes	inc/stm32f10x_fsmc.h	549;"	d
FSMC_ECCPageSize_8192Bytes	inc/stm32f10x_fsmc.h	553;"	d
FSMC_ECC_Disable	inc/stm32f10x_fsmc.h	535;"	d
FSMC_ECC_Enable	inc/stm32f10x_fsmc.h	536;"	d
FSMC_ExtendedMode	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_ExtendedMode;        \/*!< Enables or disables the extended mode.$/;"	m	struct:__anon14	access:public
FSMC_ExtendedMode_Disable	inc/stm32f10x_fsmc.h	410;"	d
FSMC_ExtendedMode_Enable	inc/stm32f10x_fsmc.h	411;"	d
FSMC_FLAG_FEMPT	inc/stm32f10x_fsmc.h	647;"	d
FSMC_FLAG_FallingEdge	inc/stm32f10x_fsmc.h	646;"	d
FSMC_FLAG_Level	inc/stm32f10x_fsmc.h	645;"	d
FSMC_FLAG_RisingEdge	inc/stm32f10x_fsmc.h	644;"	d
FSMC_GetECC	inc/stm32f10x_fsmc.h	/^uint32_t FSMC_GetECC(uint32_t FSMC_Bank);$/;"	p	signature:(uint32_t FSMC_Bank)
FSMC_GetECC	src/stm32f10x_fsmc.c	/^uint32_t FSMC_GetECC(uint32_t FSMC_Bank)$/;"	f	signature:(uint32_t FSMC_Bank)
FSMC_GetFlagStatus	inc/stm32f10x_fsmc.h	/^FlagStatus FSMC_GetFlagStatus(uint32_t FSMC_Bank, uint32_t FSMC_FLAG);$/;"	p	signature:(uint32_t FSMC_Bank, uint32_t FSMC_FLAG)
FSMC_GetFlagStatus	src/stm32f10x_fsmc.c	/^FlagStatus FSMC_GetFlagStatus(uint32_t FSMC_Bank, uint32_t FSMC_FLAG)$/;"	f	signature:(uint32_t FSMC_Bank, uint32_t FSMC_FLAG)
FSMC_GetITStatus	inc/stm32f10x_fsmc.h	/^ITStatus FSMC_GetITStatus(uint32_t FSMC_Bank, uint32_t FSMC_IT);$/;"	p	signature:(uint32_t FSMC_Bank, uint32_t FSMC_IT)
FSMC_GetITStatus	src/stm32f10x_fsmc.c	/^ITStatus FSMC_GetITStatus(uint32_t FSMC_Bank, uint32_t FSMC_IT)$/;"	f	signature:(uint32_t FSMC_Bank, uint32_t FSMC_IT)
FSMC_HiZSetupTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_HiZSetupTime;   \/*!< Defines the number of HCLK clock cycles during which the$/;"	m	struct:__anon15	access:public
FSMC_HoldSetupTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_HoldSetupTime;  \/*!< Defines the number of HCLK clock cycles to hold address$/;"	m	struct:__anon15	access:public
FSMC_IOSpaceTimingStruct	inc/stm32f10x_fsmc.h	/^  FSMC_NAND_PCCARDTimingInitTypeDef*  FSMC_IOSpaceTimingStruct; \/*!< FSMC IO Space Timing *\/  $/;"	m	struct:__anon17	access:public
FSMC_ITConfig	inc/stm32f10x_fsmc.h	/^void FSMC_ITConfig(uint32_t FSMC_Bank, uint32_t FSMC_IT, FunctionalState NewState);$/;"	p	signature:(uint32_t FSMC_Bank, uint32_t FSMC_IT, FunctionalState NewState)
FSMC_ITConfig	src/stm32f10x_fsmc.c	/^void FSMC_ITConfig(uint32_t FSMC_Bank, uint32_t FSMC_IT, FunctionalState NewState)$/;"	f	signature:(uint32_t FSMC_Bank, uint32_t FSMC_IT, FunctionalState NewState)
FSMC_IT_FallingEdge	inc/stm32f10x_fsmc.h	631;"	d
FSMC_IT_Level	inc/stm32f10x_fsmc.h	630;"	d
FSMC_IT_RisingEdge	inc/stm32f10x_fsmc.h	629;"	d
FSMC_MemoryDataWidth	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_MemoryDataWidth;     \/*!< Specifies the external memory device width.$/;"	m	struct:__anon14	access:public
FSMC_MemoryDataWidth	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_MemoryDataWidth;  \/*!< Specifies the external memory device width.$/;"	m	struct:__anon16	access:public
FSMC_MemoryDataWidth_16b	inc/stm32f10x_fsmc.h	322;"	d
FSMC_MemoryDataWidth_8b	inc/stm32f10x_fsmc.h	321;"	d
FSMC_MemoryType	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_MemoryType;          \/*!< Specifies the type of external memory attached to$/;"	m	struct:__anon14	access:public
FSMC_MemoryType_NOR	inc/stm32f10x_fsmc.h	308;"	d
FSMC_MemoryType_PSRAM	inc/stm32f10x_fsmc.h	307;"	d
FSMC_MemoryType_SRAM	inc/stm32f10x_fsmc.h	306;"	d
FSMC_NANDCmd	inc/stm32f10x_fsmc.h	/^void FSMC_NANDCmd(uint32_t FSMC_Bank, FunctionalState NewState);$/;"	p	signature:(uint32_t FSMC_Bank, FunctionalState NewState)
FSMC_NANDCmd	src/stm32f10x_fsmc.c	/^void FSMC_NANDCmd(uint32_t FSMC_Bank, FunctionalState NewState)$/;"	f	signature:(uint32_t FSMC_Bank, FunctionalState NewState)
FSMC_NANDDeInit	inc/stm32f10x_fsmc.h	/^void FSMC_NANDDeInit(uint32_t FSMC_Bank);$/;"	p	signature:(uint32_t FSMC_Bank)
FSMC_NANDDeInit	src/stm32f10x_fsmc.c	/^void FSMC_NANDDeInit(uint32_t FSMC_Bank)$/;"	f	signature:(uint32_t FSMC_Bank)
FSMC_NANDECCCmd	inc/stm32f10x_fsmc.h	/^void FSMC_NANDECCCmd(uint32_t FSMC_Bank, FunctionalState NewState);$/;"	p	signature:(uint32_t FSMC_Bank, FunctionalState NewState)
FSMC_NANDECCCmd	src/stm32f10x_fsmc.c	/^void FSMC_NANDECCCmd(uint32_t FSMC_Bank, FunctionalState NewState)$/;"	f	signature:(uint32_t FSMC_Bank, FunctionalState NewState)
FSMC_NANDInit	inc/stm32f10x_fsmc.h	/^void FSMC_NANDInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct);$/;"	p	signature:(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)
FSMC_NANDInit	src/stm32f10x_fsmc.c	/^void FSMC_NANDInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)$/;"	f	signature:(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)
FSMC_NANDInitTypeDef	inc/stm32f10x_fsmc.h	/^}FSMC_NANDInitTypeDef;$/;"	t	typeref:struct:__anon16
FSMC_NANDStructInit	inc/stm32f10x_fsmc.h	/^void FSMC_NANDStructInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct);$/;"	p	signature:(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)
FSMC_NANDStructInit	src/stm32f10x_fsmc.c	/^void FSMC_NANDStructInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)$/;"	f	signature:(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)
FSMC_NAND_PCCARDTimingInitTypeDef	inc/stm32f10x_fsmc.h	/^}FSMC_NAND_PCCARDTimingInitTypeDef;$/;"	t	typeref:struct:__anon15
FSMC_NORSRAMCmd	inc/stm32f10x_fsmc.h	/^void FSMC_NORSRAMCmd(uint32_t FSMC_Bank, FunctionalState NewState);$/;"	p	signature:(uint32_t FSMC_Bank, FunctionalState NewState)
FSMC_NORSRAMCmd	src/stm32f10x_fsmc.c	/^void FSMC_NORSRAMCmd(uint32_t FSMC_Bank, FunctionalState NewState)$/;"	f	signature:(uint32_t FSMC_Bank, FunctionalState NewState)
FSMC_NORSRAMDeInit	inc/stm32f10x_fsmc.h	/^void FSMC_NORSRAMDeInit(uint32_t FSMC_Bank);$/;"	p	signature:(uint32_t FSMC_Bank)
FSMC_NORSRAMDeInit	src/stm32f10x_fsmc.c	/^void FSMC_NORSRAMDeInit(uint32_t FSMC_Bank)$/;"	f	signature:(uint32_t FSMC_Bank)
FSMC_NORSRAMInit	inc/stm32f10x_fsmc.h	/^void FSMC_NORSRAMInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct);$/;"	p	signature:(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
FSMC_NORSRAMInit	src/stm32f10x_fsmc.c	/^void FSMC_NORSRAMInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)$/;"	f	signature:(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
FSMC_NORSRAMInitTypeDef	inc/stm32f10x_fsmc.h	/^}FSMC_NORSRAMInitTypeDef;$/;"	t	typeref:struct:__anon14
FSMC_NORSRAMStructInit	inc/stm32f10x_fsmc.h	/^void FSMC_NORSRAMStructInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct);$/;"	p	signature:(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
FSMC_NORSRAMStructInit	src/stm32f10x_fsmc.c	/^void FSMC_NORSRAMStructInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)$/;"	f	signature:(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
FSMC_NORSRAMTimingInitTypeDef	inc/stm32f10x_fsmc.h	/^}FSMC_NORSRAMTimingInitTypeDef;$/;"	t	typeref:struct:__anon13
FSMC_PCCARDCmd	inc/stm32f10x_fsmc.h	/^void FSMC_PCCARDCmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
FSMC_PCCARDCmd	src/stm32f10x_fsmc.c	/^void FSMC_PCCARDCmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
FSMC_PCCARDDeInit	inc/stm32f10x_fsmc.h	/^void FSMC_PCCARDDeInit(void);$/;"	p	signature:(void)
FSMC_PCCARDDeInit	src/stm32f10x_fsmc.c	/^void FSMC_PCCARDDeInit(void)$/;"	f	signature:(void)
FSMC_PCCARDInit	inc/stm32f10x_fsmc.h	/^void FSMC_PCCARDInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct);$/;"	p	signature:(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct)
FSMC_PCCARDInit	src/stm32f10x_fsmc.c	/^void FSMC_PCCARDInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct)$/;"	f	signature:(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct)
FSMC_PCCARDInitTypeDef	inc/stm32f10x_fsmc.h	/^}FSMC_PCCARDInitTypeDef;$/;"	t	typeref:struct:__anon17
FSMC_PCCARDStructInit	inc/stm32f10x_fsmc.h	/^void FSMC_PCCARDStructInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct);$/;"	p	signature:(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct)
FSMC_PCCARDStructInit	src/stm32f10x_fsmc.c	/^void FSMC_PCCARDStructInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct)$/;"	f	signature:(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct)
FSMC_ReadWriteTimingStruct	inc/stm32f10x_fsmc.h	/^  FSMC_NORSRAMTimingInitTypeDef* FSMC_ReadWriteTimingStruct; \/*!< Timing Parameters for write and read access if the  ExtendedMode is not used*\/  $/;"	m	struct:__anon14	access:public
FSMC_SetupTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_SetupTime;      \/*!< Defines the number of HCLK cycles to setup address before$/;"	m	struct:__anon15	access:public
FSMC_TARSetupTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_TARSetupTime;     \/*!< Defines the number of HCLK cycles to configure the$/;"	m	struct:__anon16	access:public
FSMC_TARSetupTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_TARSetupTime;   \/*!< Defines the number of HCLK cycles to configure the$/;"	m	struct:__anon17	access:public
FSMC_TCLRSetupTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_TCLRSetupTime;    \/*!< Defines the number of HCLK cycles to configure the$/;"	m	struct:__anon16	access:public
FSMC_TCLRSetupTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_TCLRSetupTime;  \/*!< Defines the number of HCLK cycles to configure the$/;"	m	struct:__anon17	access:public
FSMC_WaitSetupTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_WaitSetupTime;  \/*!< Defines the minimum number of HCLK cycles to assert the$/;"	m	struct:__anon15	access:public
FSMC_WaitSignal	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_WaitSignal;          \/*!< Enables or disables the wait-state insertion via wait$/;"	m	struct:__anon14	access:public
FSMC_WaitSignalActive	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_WaitSignalActive;    \/*!< Specifies if the wait signal is asserted by the memory one$/;"	m	struct:__anon14	access:public
FSMC_WaitSignalActive_BeforeWaitState	inc/stm32f10x_fsmc.h	372;"	d
FSMC_WaitSignalActive_DuringWaitState	inc/stm32f10x_fsmc.h	373;"	d
FSMC_WaitSignalPolarity	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_WaitSignalPolarity;  \/*!< Specifies the wait signal polarity, valid only when accessing$/;"	m	struct:__anon14	access:public
FSMC_WaitSignalPolarity_High	inc/stm32f10x_fsmc.h	347;"	d
FSMC_WaitSignalPolarity_Low	inc/stm32f10x_fsmc.h	346;"	d
FSMC_WaitSignal_Disable	inc/stm32f10x_fsmc.h	398;"	d
FSMC_WaitSignal_Enable	inc/stm32f10x_fsmc.h	399;"	d
FSMC_Waitfeature	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_Waitfeature;      \/*!< Enables or disables the Wait feature for the NAND Memory Bank.$/;"	m	struct:__anon16	access:public
FSMC_Waitfeature	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_Waitfeature;    \/*!< Enables or disables the Wait feature for the Memory Bank.$/;"	m	struct:__anon17	access:public
FSMC_Waitfeature_Disable	inc/stm32f10x_fsmc.h	521;"	d
FSMC_Waitfeature_Enable	inc/stm32f10x_fsmc.h	522;"	d
FSMC_WrapMode	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_WrapMode;            \/*!< Enables or disables the Wrapped burst access mode for Flash$/;"	m	struct:__anon14	access:public
FSMC_WrapMode_Disable	inc/stm32f10x_fsmc.h	359;"	d
FSMC_WrapMode_Enable	inc/stm32f10x_fsmc.h	360;"	d
FSMC_WriteBurst	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_WriteBurst;          \/*!< Enables or disables the write burst operation.$/;"	m	struct:__anon14	access:public
FSMC_WriteBurst_Disable	inc/stm32f10x_fsmc.h	424;"	d
FSMC_WriteBurst_Enable	inc/stm32f10x_fsmc.h	425;"	d
FSMC_WriteOperation	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_WriteOperation;      \/*!< Enables or disables the write operation in the selected bank by the FSMC. $/;"	m	struct:__anon14	access:public
FSMC_WriteOperation_Disable	inc/stm32f10x_fsmc.h	385;"	d
FSMC_WriteOperation_Enable	inc/stm32f10x_fsmc.h	386;"	d
FSMC_WriteTimingStruct	inc/stm32f10x_fsmc.h	/^  FSMC_NORSRAMTimingInitTypeDef* FSMC_WriteTimingStruct;     \/*!< Timing Parameters for write access if the  ExtendedMode is used*\/      $/;"	m	struct:__anon14	access:public
GPIOMode_TypeDef	inc/stm32f10x_gpio.h	/^}GPIOMode_TypeDef;$/;"	t	typeref:enum:__anon26
GPIOSpeed_TypeDef	inc/stm32f10x_gpio.h	/^}GPIOSpeed_TypeDef;$/;"	t	typeref:enum:__anon25
GPIO_AFIODeInit	inc/stm32f10x_gpio.h	/^void GPIO_AFIODeInit(void);$/;"	p	signature:(void)
GPIO_AFIODeInit	src/stm32f10x_gpio.c	/^void GPIO_AFIODeInit(void)$/;"	f	signature:(void)
GPIO_DeInit	inc/stm32f10x_gpio.h	/^void GPIO_DeInit(GPIO_TypeDef* GPIOx);$/;"	p	signature:(GPIO_TypeDef* GPIOx)
GPIO_DeInit	src/stm32f10x_gpio.c	/^void GPIO_DeInit(GPIO_TypeDef* GPIOx)$/;"	f	signature:(GPIO_TypeDef* GPIOx)
GPIO_ETH_MediaInterfaceConfig	inc/stm32f10x_gpio.h	/^void GPIO_ETH_MediaInterfaceConfig(uint32_t GPIO_ETH_MediaInterface);$/;"	p	signature:(uint32_t GPIO_ETH_MediaInterface)
GPIO_ETH_MediaInterfaceConfig	src/stm32f10x_gpio.c	/^void GPIO_ETH_MediaInterfaceConfig(uint32_t GPIO_ETH_MediaInterface) $/;"	f	signature:(uint32_t GPIO_ETH_MediaInterface)
GPIO_ETH_MediaInterface_MII	inc/stm32f10x_gpio.h	318;"	d
GPIO_ETH_MediaInterface_RMII	inc/stm32f10x_gpio.h	319;"	d
GPIO_EXTILineConfig	inc/stm32f10x_gpio.h	/^void GPIO_EXTILineConfig(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource);$/;"	p	signature:(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource)
GPIO_EXTILineConfig	src/stm32f10x_gpio.c	/^void GPIO_EXTILineConfig(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource)$/;"	f	signature:(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource)
GPIO_EventOutputCmd	inc/stm32f10x_gpio.h	/^void GPIO_EventOutputCmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
GPIO_EventOutputCmd	src/stm32f10x_gpio.c	/^void GPIO_EventOutputCmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
GPIO_EventOutputConfig	inc/stm32f10x_gpio.h	/^void GPIO_EventOutputConfig(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource);$/;"	p	signature:(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource)
GPIO_EventOutputConfig	src/stm32f10x_gpio.c	/^void GPIO_EventOutputConfig(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource)$/;"	f	signature:(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource)
GPIO_FullRemap_TIM1	inc/stm32f10x_gpio.h	178;"	d
GPIO_FullRemap_TIM2	inc/stm32f10x_gpio.h	181;"	d
GPIO_FullRemap_TIM3	inc/stm32f10x_gpio.h	183;"	d
GPIO_FullRemap_USART3	inc/stm32f10x_gpio.h	176;"	d
GPIO_Init	inc/stm32f10x_gpio.h	/^void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct);$/;"	p	signature:(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
GPIO_Init	src/stm32f10x_gpio.c	/^void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)$/;"	f	signature:(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
GPIO_InitTypeDef	inc/stm32f10x_gpio.h	/^}GPIO_InitTypeDef;$/;"	t	typeref:struct:__anon27
GPIO_Mode	inc/stm32f10x_gpio.h	/^  GPIOMode_TypeDef GPIO_Mode;    \/*!< Specifies the operating mode for the selected pins.$/;"	m	struct:__anon27	access:public
GPIO_Mode_AF_OD	inc/stm32f10x_gpio.h	/^  GPIO_Mode_AF_OD = 0x1C,$/;"	e	enum:__anon26
GPIO_Mode_AF_PP	inc/stm32f10x_gpio.h	/^  GPIO_Mode_AF_PP = 0x18$/;"	e	enum:__anon26
GPIO_Mode_AIN	inc/stm32f10x_gpio.h	/^{ GPIO_Mode_AIN = 0x0,$/;"	e	enum:__anon26
GPIO_Mode_IN_FLOATING	inc/stm32f10x_gpio.h	/^  GPIO_Mode_IN_FLOATING = 0x04,$/;"	e	enum:__anon26
GPIO_Mode_IPD	inc/stm32f10x_gpio.h	/^  GPIO_Mode_IPD = 0x28,$/;"	e	enum:__anon26
GPIO_Mode_IPU	inc/stm32f10x_gpio.h	/^  GPIO_Mode_IPU = 0x48,$/;"	e	enum:__anon26
GPIO_Mode_Out_OD	inc/stm32f10x_gpio.h	/^  GPIO_Mode_Out_OD = 0x14,$/;"	e	enum:__anon26
GPIO_Mode_Out_PP	inc/stm32f10x_gpio.h	/^  GPIO_Mode_Out_PP = 0x10,$/;"	e	enum:__anon26
GPIO_PartialRemap1_TIM2	inc/stm32f10x_gpio.h	179;"	d
GPIO_PartialRemap2_TIM2	inc/stm32f10x_gpio.h	180;"	d
GPIO_PartialRemap_TIM1	inc/stm32f10x_gpio.h	177;"	d
GPIO_PartialRemap_TIM3	inc/stm32f10x_gpio.h	182;"	d
GPIO_PartialRemap_USART3	inc/stm32f10x_gpio.h	175;"	d
GPIO_Pin	inc/stm32f10x_gpio.h	/^  uint16_t GPIO_Pin;             \/*!< Specifies the GPIO pins to be configured.$/;"	m	struct:__anon27	access:public
GPIO_PinLockConfig	inc/stm32f10x_gpio.h	/^void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin);$/;"	p	signature:(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
GPIO_PinLockConfig	src/stm32f10x_gpio.c	/^void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)$/;"	f	signature:(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
GPIO_PinRemapConfig	inc/stm32f10x_gpio.h	/^void GPIO_PinRemapConfig(uint32_t GPIO_Remap, FunctionalState NewState);$/;"	p	signature:(uint32_t GPIO_Remap, FunctionalState NewState)
GPIO_PinRemapConfig	src/stm32f10x_gpio.c	/^void GPIO_PinRemapConfig(uint32_t GPIO_Remap, FunctionalState NewState)$/;"	f	signature:(uint32_t GPIO_Remap, FunctionalState NewState)
GPIO_PinSource0	inc/stm32f10x_gpio.h	277;"	d
GPIO_PinSource1	inc/stm32f10x_gpio.h	278;"	d
GPIO_PinSource10	inc/stm32f10x_gpio.h	287;"	d
GPIO_PinSource11	inc/stm32f10x_gpio.h	288;"	d
GPIO_PinSource12	inc/stm32f10x_gpio.h	289;"	d
GPIO_PinSource13	inc/stm32f10x_gpio.h	290;"	d
GPIO_PinSource14	inc/stm32f10x_gpio.h	291;"	d
GPIO_PinSource15	inc/stm32f10x_gpio.h	292;"	d
GPIO_PinSource2	inc/stm32f10x_gpio.h	279;"	d
GPIO_PinSource3	inc/stm32f10x_gpio.h	280;"	d
GPIO_PinSource4	inc/stm32f10x_gpio.h	281;"	d
GPIO_PinSource5	inc/stm32f10x_gpio.h	282;"	d
GPIO_PinSource6	inc/stm32f10x_gpio.h	283;"	d
GPIO_PinSource7	inc/stm32f10x_gpio.h	284;"	d
GPIO_PinSource8	inc/stm32f10x_gpio.h	285;"	d
GPIO_PinSource9	inc/stm32f10x_gpio.h	286;"	d
GPIO_Pin_0	inc/stm32f10x_gpio.h	126;"	d
GPIO_Pin_1	inc/stm32f10x_gpio.h	127;"	d
GPIO_Pin_10	inc/stm32f10x_gpio.h	136;"	d
GPIO_Pin_11	inc/stm32f10x_gpio.h	137;"	d
GPIO_Pin_12	inc/stm32f10x_gpio.h	138;"	d
GPIO_Pin_13	inc/stm32f10x_gpio.h	139;"	d
GPIO_Pin_14	inc/stm32f10x_gpio.h	140;"	d
GPIO_Pin_15	inc/stm32f10x_gpio.h	141;"	d
GPIO_Pin_2	inc/stm32f10x_gpio.h	128;"	d
GPIO_Pin_3	inc/stm32f10x_gpio.h	129;"	d
GPIO_Pin_4	inc/stm32f10x_gpio.h	130;"	d
GPIO_Pin_5	inc/stm32f10x_gpio.h	131;"	d
GPIO_Pin_6	inc/stm32f10x_gpio.h	132;"	d
GPIO_Pin_7	inc/stm32f10x_gpio.h	133;"	d
GPIO_Pin_8	inc/stm32f10x_gpio.h	134;"	d
GPIO_Pin_9	inc/stm32f10x_gpio.h	135;"	d
GPIO_Pin_All	inc/stm32f10x_gpio.h	142;"	d
GPIO_PortSourceGPIOA	inc/stm32f10x_gpio.h	248;"	d
GPIO_PortSourceGPIOB	inc/stm32f10x_gpio.h	249;"	d
GPIO_PortSourceGPIOC	inc/stm32f10x_gpio.h	250;"	d
GPIO_PortSourceGPIOD	inc/stm32f10x_gpio.h	251;"	d
GPIO_PortSourceGPIOE	inc/stm32f10x_gpio.h	252;"	d
GPIO_PortSourceGPIOF	inc/stm32f10x_gpio.h	253;"	d
GPIO_PortSourceGPIOG	inc/stm32f10x_gpio.h	254;"	d
GPIO_ReadInputData	inc/stm32f10x_gpio.h	/^uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx);$/;"	p	signature:(GPIO_TypeDef* GPIOx)
GPIO_ReadInputData	src/stm32f10x_gpio.c	/^uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)$/;"	f	signature:(GPIO_TypeDef* GPIOx)
GPIO_ReadInputDataBit	inc/stm32f10x_gpio.h	/^uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin);$/;"	p	signature:(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
GPIO_ReadInputDataBit	src/stm32f10x_gpio.c	/^uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)$/;"	f	signature:(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
GPIO_ReadOutputData	inc/stm32f10x_gpio.h	/^uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx);$/;"	p	signature:(GPIO_TypeDef* GPIOx)
GPIO_ReadOutputData	src/stm32f10x_gpio.c	/^uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)$/;"	f	signature:(GPIO_TypeDef* GPIOx)
GPIO_ReadOutputDataBit	inc/stm32f10x_gpio.h	/^uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin);$/;"	p	signature:(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
GPIO_ReadOutputDataBit	src/stm32f10x_gpio.c	/^uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)$/;"	f	signature:(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
GPIO_Remap1_CAN1	inc/stm32f10x_gpio.h	185;"	d
GPIO_Remap2_CAN1	inc/stm32f10x_gpio.h	186;"	d
GPIO_Remap_ADC1_ETRGINJ	inc/stm32f10x_gpio.h	189;"	d
GPIO_Remap_ADC1_ETRGREG	inc/stm32f10x_gpio.h	190;"	d
GPIO_Remap_ADC2_ETRGINJ	inc/stm32f10x_gpio.h	191;"	d
GPIO_Remap_ADC2_ETRGREG	inc/stm32f10x_gpio.h	192;"	d
GPIO_Remap_CAN2	inc/stm32f10x_gpio.h	194;"	d
GPIO_Remap_CEC	inc/stm32f10x_gpio.h	207;"	d
GPIO_Remap_ETH	inc/stm32f10x_gpio.h	193;"	d
GPIO_Remap_FSMC_NADV	inc/stm32f10x_gpio.h	215;"	d
GPIO_Remap_I2C1	inc/stm32f10x_gpio.h	172;"	d
GPIO_Remap_PD01	inc/stm32f10x_gpio.h	187;"	d
GPIO_Remap_PTP_PPS	inc/stm32f10x_gpio.h	202;"	d
GPIO_Remap_SPI1	inc/stm32f10x_gpio.h	171;"	d
GPIO_Remap_SPI3	inc/stm32f10x_gpio.h	198;"	d
GPIO_Remap_SWJ_Disable	inc/stm32f10x_gpio.h	197;"	d
GPIO_Remap_SWJ_JTAGDisable	inc/stm32f10x_gpio.h	196;"	d
GPIO_Remap_SWJ_NoJTRST	inc/stm32f10x_gpio.h	195;"	d
GPIO_Remap_TIM10	inc/stm32f10x_gpio.h	211;"	d
GPIO_Remap_TIM11	inc/stm32f10x_gpio.h	212;"	d
GPIO_Remap_TIM13	inc/stm32f10x_gpio.h	213;"	d
GPIO_Remap_TIM14	inc/stm32f10x_gpio.h	214;"	d
GPIO_Remap_TIM15	inc/stm32f10x_gpio.h	204;"	d
GPIO_Remap_TIM16	inc/stm32f10x_gpio.h	205;"	d
GPIO_Remap_TIM17	inc/stm32f10x_gpio.h	206;"	d
GPIO_Remap_TIM1_DMA	inc/stm32f10x_gpio.h	208;"	d
GPIO_Remap_TIM2ITR1_PTP_SOF	inc/stm32f10x_gpio.h	199;"	d
GPIO_Remap_TIM4	inc/stm32f10x_gpio.h	184;"	d
GPIO_Remap_TIM5CH4_LSI	inc/stm32f10x_gpio.h	188;"	d
GPIO_Remap_TIM9	inc/stm32f10x_gpio.h	210;"	d
GPIO_Remap_USART1	inc/stm32f10x_gpio.h	173;"	d
GPIO_Remap_USART2	inc/stm32f10x_gpio.h	174;"	d
GPIO_ResetBits	inc/stm32f10x_gpio.h	/^void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin);$/;"	p	signature:(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
GPIO_ResetBits	src/stm32f10x_gpio.c	/^void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)$/;"	f	signature:(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
GPIO_SetBits	inc/stm32f10x_gpio.h	/^void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin);$/;"	p	signature:(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
GPIO_SetBits	src/stm32f10x_gpio.c	/^void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)$/;"	f	signature:(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
GPIO_Speed	inc/stm32f10x_gpio.h	/^  GPIOSpeed_TypeDef GPIO_Speed;  \/*!< Specifies the speed for the selected pins.$/;"	m	struct:__anon27	access:public
GPIO_Speed_10MHz	inc/stm32f10x_gpio.h	/^  GPIO_Speed_10MHz = 1,$/;"	e	enum:__anon25
GPIO_Speed_2MHz	inc/stm32f10x_gpio.h	/^  GPIO_Speed_2MHz, $/;"	e	enum:__anon25
GPIO_Speed_50MHz	inc/stm32f10x_gpio.h	/^  GPIO_Speed_50MHz$/;"	e	enum:__anon25
GPIO_StructInit	inc/stm32f10x_gpio.h	/^void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct);$/;"	p	signature:(GPIO_InitTypeDef* GPIO_InitStruct)
GPIO_StructInit	src/stm32f10x_gpio.c	/^void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)$/;"	f	signature:(GPIO_InitTypeDef* GPIO_InitStruct)
GPIO_Write	inc/stm32f10x_gpio.h	/^void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal);$/;"	p	signature:(GPIO_TypeDef* GPIOx, uint16_t PortVal)
GPIO_Write	src/stm32f10x_gpio.c	/^void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal)$/;"	f	signature:(GPIO_TypeDef* GPIOx, uint16_t PortVal)
GPIO_WriteBit	inc/stm32f10x_gpio.h	/^void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal);$/;"	p	signature:(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
GPIO_WriteBit	src/stm32f10x_gpio.c	/^void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)$/;"	f	signature:(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
GTPR_LSB_Mask	src/stm32f10x_usart.c	78;"	d	file:
GTPR_MSB_Mask	src/stm32f10x_usart.c	79;"	d	file:
HCLK_Frequency	inc/stm32f10x_rcc.h	/^  uint32_t HCLK_Frequency;    \/*!< returns HCLK clock frequency expressed in Hz *\/$/;"	m	struct:__anon31	access:public
HSEStartUp_TimeOut	src/stm32f10x_rcc.c	183;"	d	file:
HSION_BitNumber	src/stm32f10x_rcc.c	52;"	d	file:
HSI_Value	src/stm32f10x_rcc.c	166;"	d	file:
I2C_ARPCmd	inc/stm32f10x_i2c.h	/^void I2C_ARPCmd(I2C_TypeDef* I2Cx, FunctionalState NewState);$/;"	p	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_ARPCmd	src/stm32f10x_i2c.c	/^void I2C_ARPCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)$/;"	f	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_Ack	inc/stm32f10x_i2c.h	/^  uint16_t I2C_Ack;                 \/*!< Enables or disables the acknowledgement.$/;"	m	struct:__anon9	access:public
I2C_Ack_Disable	inc/stm32f10x_i2c.h	112;"	d
I2C_Ack_Enable	inc/stm32f10x_i2c.h	111;"	d
I2C_AcknowledgeConfig	inc/stm32f10x_i2c.h	/^void I2C_AcknowledgeConfig(I2C_TypeDef* I2Cx, FunctionalState NewState);$/;"	p	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_AcknowledgeConfig	src/stm32f10x_i2c.c	/^void I2C_AcknowledgeConfig(I2C_TypeDef* I2Cx, FunctionalState NewState)$/;"	f	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_AcknowledgedAddress	inc/stm32f10x_i2c.h	/^  uint16_t I2C_AcknowledgedAddress; \/*!< Specifies if 7-bit or 10-bit address is acknowledged.$/;"	m	struct:__anon9	access:public
I2C_AcknowledgedAddress_10bit	inc/stm32f10x_i2c.h	136;"	d
I2C_AcknowledgedAddress_7bit	inc/stm32f10x_i2c.h	135;"	d
I2C_CalculatePEC	inc/stm32f10x_i2c.h	/^void I2C_CalculatePEC(I2C_TypeDef* I2Cx, FunctionalState NewState);$/;"	p	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_CalculatePEC	src/stm32f10x_i2c.c	/^void I2C_CalculatePEC(I2C_TypeDef* I2Cx, FunctionalState NewState)$/;"	f	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_CheckEvent	inc/stm32f10x_i2c.h	/^ErrorStatus I2C_CheckEvent(I2C_TypeDef* I2Cx, uint32_t I2C_EVENT);$/;"	p	signature:(I2C_TypeDef* I2Cx, uint32_t I2C_EVENT)
I2C_CheckEvent	src/stm32f10x_i2c.c	/^ErrorStatus I2C_CheckEvent(I2C_TypeDef* I2Cx, uint32_t I2C_EVENT)$/;"	f	signature:(I2C_TypeDef* I2Cx, uint32_t I2C_EVENT)
I2C_ClearFlag	inc/stm32f10x_i2c.h	/^void I2C_ClearFlag(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG);$/;"	p	signature:(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
I2C_ClearFlag	src/stm32f10x_i2c.c	/^void I2C_ClearFlag(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)$/;"	f	signature:(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
I2C_ClearITPendingBit	inc/stm32f10x_i2c.h	/^void I2C_ClearITPendingBit(I2C_TypeDef* I2Cx, uint32_t I2C_IT);$/;"	p	signature:(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
I2C_ClearITPendingBit	src/stm32f10x_i2c.c	/^void I2C_ClearITPendingBit(I2C_TypeDef* I2Cx, uint32_t I2C_IT)$/;"	f	signature:(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
I2C_ClockSpeed	inc/stm32f10x_i2c.h	/^  uint32_t I2C_ClockSpeed;          \/*!< Specifies the clock frequency.$/;"	m	struct:__anon9	access:public
I2C_Cmd	inc/stm32f10x_i2c.h	/^void I2C_Cmd(I2C_TypeDef* I2Cx, FunctionalState NewState);$/;"	p	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_Cmd	src/stm32f10x_i2c.c	/^void I2C_Cmd(I2C_TypeDef* I2Cx, FunctionalState NewState)$/;"	f	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_DMACmd	inc/stm32f10x_i2c.h	/^void I2C_DMACmd(I2C_TypeDef* I2Cx, FunctionalState NewState);$/;"	p	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_DMACmd	src/stm32f10x_i2c.c	/^void I2C_DMACmd(I2C_TypeDef* I2Cx, FunctionalState NewState)$/;"	f	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_DMALastTransferCmd	inc/stm32f10x_i2c.h	/^void I2C_DMALastTransferCmd(I2C_TypeDef* I2Cx, FunctionalState NewState);$/;"	p	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_DMALastTransferCmd	src/stm32f10x_i2c.c	/^void I2C_DMALastTransferCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)$/;"	f	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_DeInit	inc/stm32f10x_i2c.h	/^void I2C_DeInit(I2C_TypeDef* I2Cx);$/;"	p	signature:(I2C_TypeDef* I2Cx)
I2C_DeInit	src/stm32f10x_i2c.c	/^void I2C_DeInit(I2C_TypeDef* I2Cx)$/;"	f	signature:(I2C_TypeDef* I2Cx)
I2C_Direction_Receiver	inc/stm32f10x_i2c.h	124;"	d
I2C_Direction_Transmitter	inc/stm32f10x_i2c.h	123;"	d
I2C_DualAddressCmd	inc/stm32f10x_i2c.h	/^void I2C_DualAddressCmd(I2C_TypeDef* I2Cx, FunctionalState NewState);$/;"	p	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_DualAddressCmd	src/stm32f10x_i2c.c	/^void I2C_DualAddressCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)$/;"	f	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_DutyCycle	inc/stm32f10x_i2c.h	/^  uint16_t I2C_DutyCycle;           \/*!< Specifies the I2C fast mode duty cycle.$/;"	m	struct:__anon9	access:public
I2C_DutyCycle_16_9	inc/stm32f10x_i2c.h	99;"	d
I2C_DutyCycle_2	inc/stm32f10x_i2c.h	100;"	d
I2C_EVENT_MASTER_BYTE_RECEIVED	inc/stm32f10x_i2c.h	370;"	d
I2C_EVENT_MASTER_BYTE_TRANSMITTED	inc/stm32f10x_i2c.h	376;"	d
I2C_EVENT_MASTER_BYTE_TRANSMITTING	inc/stm32f10x_i2c.h	374;"	d
I2C_EVENT_MASTER_MODE_ADDRESS10	inc/stm32f10x_i2c.h	337;"	d
I2C_EVENT_MASTER_MODE_SELECT	inc/stm32f10x_i2c.h	306;"	d
I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED	inc/stm32f10x_i2c.h	335;"	d
I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED	inc/stm32f10x_i2c.h	334;"	d
I2C_EVENT_SLAVE_ACK_FAILURE	inc/stm32f10x_i2c.h	459;"	d
I2C_EVENT_SLAVE_BYTE_RECEIVED	inc/stm32f10x_i2c.h	450;"	d
I2C_EVENT_SLAVE_BYTE_TRANSMITTED	inc/stm32f10x_i2c.h	456;"	d
I2C_EVENT_SLAVE_BYTE_TRANSMITTING	inc/stm32f10x_i2c.h	457;"	d
I2C_EVENT_SLAVE_GENERALCALLADDRESS_MATCHED	inc/stm32f10x_i2c.h	419;"	d
I2C_EVENT_SLAVE_RECEIVER_ADDRESS_MATCHED	inc/stm32f10x_i2c.h	411;"	d
I2C_EVENT_SLAVE_RECEIVER_SECONDADDRESS_MATCHED	inc/stm32f10x_i2c.h	415;"	d
I2C_EVENT_SLAVE_STOP_DETECTED	inc/stm32f10x_i2c.h	452;"	d
I2C_EVENT_SLAVE_TRANSMITTER_ADDRESS_MATCHED	inc/stm32f10x_i2c.h	412;"	d
I2C_EVENT_SLAVE_TRANSMITTER_SECONDADDRESS_MATCHED	inc/stm32f10x_i2c.h	416;"	d
I2C_FLAG_ADD10	inc/stm32f10x_i2c.h	267;"	d
I2C_FLAG_ADDR	inc/stm32f10x_i2c.h	269;"	d
I2C_FLAG_AF	inc/stm32f10x_i2c.h	261;"	d
I2C_FLAG_ARLO	inc/stm32f10x_i2c.h	262;"	d
I2C_FLAG_BERR	inc/stm32f10x_i2c.h	263;"	d
I2C_FLAG_BTF	inc/stm32f10x_i2c.h	268;"	d
I2C_FLAG_BUSY	inc/stm32f10x_i2c.h	250;"	d
I2C_FLAG_DUALF	inc/stm32f10x_i2c.h	245;"	d
I2C_FLAG_GENCALL	inc/stm32f10x_i2c.h	248;"	d
I2C_FLAG_MSL	inc/stm32f10x_i2c.h	251;"	d
I2C_FLAG_OVR	inc/stm32f10x_i2c.h	260;"	d
I2C_FLAG_PECERR	inc/stm32f10x_i2c.h	259;"	d
I2C_FLAG_RXNE	inc/stm32f10x_i2c.h	265;"	d
I2C_FLAG_SB	inc/stm32f10x_i2c.h	270;"	d
I2C_FLAG_SMBALERT	inc/stm32f10x_i2c.h	257;"	d
I2C_FLAG_SMBDEFAULT	inc/stm32f10x_i2c.h	247;"	d
I2C_FLAG_SMBHOST	inc/stm32f10x_i2c.h	246;"	d
I2C_FLAG_STOPF	inc/stm32f10x_i2c.h	266;"	d
I2C_FLAG_TIMEOUT	inc/stm32f10x_i2c.h	258;"	d
I2C_FLAG_TRA	inc/stm32f10x_i2c.h	249;"	d
I2C_FLAG_TXE	inc/stm32f10x_i2c.h	264;"	d
I2C_FastModeDutyCycleConfig	inc/stm32f10x_i2c.h	/^void I2C_FastModeDutyCycleConfig(I2C_TypeDef* I2Cx, uint16_t I2C_DutyCycle);$/;"	p	signature:(I2C_TypeDef* I2Cx, uint16_t I2C_DutyCycle)
I2C_FastModeDutyCycleConfig	src/stm32f10x_i2c.c	/^void I2C_FastModeDutyCycleConfig(I2C_TypeDef* I2Cx, uint16_t I2C_DutyCycle)$/;"	f	signature:(I2C_TypeDef* I2Cx, uint16_t I2C_DutyCycle)
I2C_GeneralCallCmd	inc/stm32f10x_i2c.h	/^void I2C_GeneralCallCmd(I2C_TypeDef* I2Cx, FunctionalState NewState);$/;"	p	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_GeneralCallCmd	src/stm32f10x_i2c.c	/^void I2C_GeneralCallCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)$/;"	f	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_GenerateSTART	inc/stm32f10x_i2c.h	/^void I2C_GenerateSTART(I2C_TypeDef* I2Cx, FunctionalState NewState);$/;"	p	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_GenerateSTART	src/stm32f10x_i2c.c	/^void I2C_GenerateSTART(I2C_TypeDef* I2Cx, FunctionalState NewState)$/;"	f	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_GenerateSTOP	inc/stm32f10x_i2c.h	/^void I2C_GenerateSTOP(I2C_TypeDef* I2Cx, FunctionalState NewState);$/;"	p	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_GenerateSTOP	src/stm32f10x_i2c.c	/^void I2C_GenerateSTOP(I2C_TypeDef* I2Cx, FunctionalState NewState)$/;"	f	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_GetFlagStatus	inc/stm32f10x_i2c.h	/^FlagStatus I2C_GetFlagStatus(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG);$/;"	p	signature:(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
I2C_GetFlagStatus	src/stm32f10x_i2c.c	/^FlagStatus I2C_GetFlagStatus(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)$/;"	f	signature:(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
I2C_GetITStatus	inc/stm32f10x_i2c.h	/^ITStatus I2C_GetITStatus(I2C_TypeDef* I2Cx, uint32_t I2C_IT);$/;"	p	signature:(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
I2C_GetITStatus	src/stm32f10x_i2c.c	/^ITStatus I2C_GetITStatus(I2C_TypeDef* I2Cx, uint32_t I2C_IT)$/;"	f	signature:(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
I2C_GetLastEvent	inc/stm32f10x_i2c.h	/^uint32_t I2C_GetLastEvent(I2C_TypeDef* I2Cx);$/;"	p	signature:(I2C_TypeDef* I2Cx)
I2C_GetLastEvent	src/stm32f10x_i2c.c	/^uint32_t I2C_GetLastEvent(I2C_TypeDef* I2Cx)$/;"	f	signature:(I2C_TypeDef* I2Cx)
I2C_GetPEC	inc/stm32f10x_i2c.h	/^uint8_t I2C_GetPEC(I2C_TypeDef* I2Cx);$/;"	p	signature:(I2C_TypeDef* I2Cx)
I2C_GetPEC	src/stm32f10x_i2c.c	/^uint8_t I2C_GetPEC(I2C_TypeDef* I2Cx)$/;"	f	signature:(I2C_TypeDef* I2Cx)
I2C_ITConfig	inc/stm32f10x_i2c.h	/^void I2C_ITConfig(I2C_TypeDef* I2Cx, uint16_t I2C_IT, FunctionalState NewState);$/;"	p	signature:(I2C_TypeDef* I2Cx, uint16_t I2C_IT, FunctionalState NewState)
I2C_ITConfig	src/stm32f10x_i2c.c	/^void I2C_ITConfig(I2C_TypeDef* I2Cx, uint16_t I2C_IT, FunctionalState NewState)$/;"	f	signature:(I2C_TypeDef* I2Cx, uint16_t I2C_IT, FunctionalState NewState)
I2C_IT_ADD10	inc/stm32f10x_i2c.h	219;"	d
I2C_IT_ADDR	inc/stm32f10x_i2c.h	221;"	d
I2C_IT_AF	inc/stm32f10x_i2c.h	213;"	d
I2C_IT_ARLO	inc/stm32f10x_i2c.h	214;"	d
I2C_IT_BERR	inc/stm32f10x_i2c.h	215;"	d
I2C_IT_BTF	inc/stm32f10x_i2c.h	220;"	d
I2C_IT_BUF	inc/stm32f10x_i2c.h	197;"	d
I2C_IT_ERR	inc/stm32f10x_i2c.h	199;"	d
I2C_IT_EVT	inc/stm32f10x_i2c.h	198;"	d
I2C_IT_OVR	inc/stm32f10x_i2c.h	212;"	d
I2C_IT_PECERR	inc/stm32f10x_i2c.h	211;"	d
I2C_IT_RXNE	inc/stm32f10x_i2c.h	217;"	d
I2C_IT_SB	inc/stm32f10x_i2c.h	222;"	d
I2C_IT_SMBALERT	inc/stm32f10x_i2c.h	209;"	d
I2C_IT_STOPF	inc/stm32f10x_i2c.h	218;"	d
I2C_IT_TIMEOUT	inc/stm32f10x_i2c.h	210;"	d
I2C_IT_TXE	inc/stm32f10x_i2c.h	216;"	d
I2C_Init	inc/stm32f10x_i2c.h	/^void I2C_Init(I2C_TypeDef* I2Cx, I2C_InitTypeDef* I2C_InitStruct);$/;"	p	signature:(I2C_TypeDef* I2Cx, I2C_InitTypeDef* I2C_InitStruct)
I2C_Init	src/stm32f10x_i2c.c	/^void I2C_Init(I2C_TypeDef* I2Cx, I2C_InitTypeDef* I2C_InitStruct)$/;"	f	signature:(I2C_TypeDef* I2Cx, I2C_InitTypeDef* I2C_InitStruct)
I2C_InitTypeDef	inc/stm32f10x_i2c.h	/^}I2C_InitTypeDef;$/;"	t	typeref:struct:__anon9
I2C_Mode	inc/stm32f10x_i2c.h	/^  uint16_t I2C_Mode;                \/*!< Specifies the I2C mode.$/;"	m	struct:__anon9	access:public
I2C_Mode_I2C	inc/stm32f10x_i2c.h	85;"	d
I2C_Mode_SMBusDevice	inc/stm32f10x_i2c.h	86;"	d
I2C_Mode_SMBusHost	inc/stm32f10x_i2c.h	87;"	d
I2C_OwnAddress1	inc/stm32f10x_i2c.h	/^  uint16_t I2C_OwnAddress1;         \/*!< Specifies the first device own address.$/;"	m	struct:__anon9	access:public
I2C_OwnAddress2Config	inc/stm32f10x_i2c.h	/^void I2C_OwnAddress2Config(I2C_TypeDef* I2Cx, uint8_t Address);$/;"	p	signature:(I2C_TypeDef* I2Cx, uint8_t Address)
I2C_OwnAddress2Config	src/stm32f10x_i2c.c	/^void I2C_OwnAddress2Config(I2C_TypeDef* I2Cx, uint8_t Address)$/;"	f	signature:(I2C_TypeDef* I2Cx, uint8_t Address)
I2C_PECPositionConfig	inc/stm32f10x_i2c.h	/^void I2C_PECPositionConfig(I2C_TypeDef* I2Cx, uint16_t I2C_PECPosition);$/;"	p	signature:(I2C_TypeDef* I2Cx, uint16_t I2C_PECPosition)
I2C_PECPositionConfig	src/stm32f10x_i2c.c	/^void I2C_PECPositionConfig(I2C_TypeDef* I2Cx, uint16_t I2C_PECPosition)$/;"	f	signature:(I2C_TypeDef* I2Cx, uint16_t I2C_PECPosition)
I2C_PECPosition_Current	inc/stm32f10x_i2c.h	186;"	d
I2C_PECPosition_Next	inc/stm32f10x_i2c.h	185;"	d
I2C_ReadRegister	inc/stm32f10x_i2c.h	/^uint16_t I2C_ReadRegister(I2C_TypeDef* I2Cx, uint8_t I2C_Register);$/;"	p	signature:(I2C_TypeDef* I2Cx, uint8_t I2C_Register)
I2C_ReadRegister	src/stm32f10x_i2c.c	/^uint16_t I2C_ReadRegister(I2C_TypeDef* I2Cx, uint8_t I2C_Register)$/;"	f	signature:(I2C_TypeDef* I2Cx, uint8_t I2C_Register)
I2C_ReceiveData	inc/stm32f10x_i2c.h	/^uint8_t I2C_ReceiveData(I2C_TypeDef* I2Cx);$/;"	p	signature:(I2C_TypeDef* I2Cx)
I2C_ReceiveData	src/stm32f10x_i2c.c	/^uint8_t I2C_ReceiveData(I2C_TypeDef* I2Cx)$/;"	f	signature:(I2C_TypeDef* I2Cx)
I2C_Register_CCR	inc/stm32f10x_i2c.h	154;"	d
I2C_Register_CR1	inc/stm32f10x_i2c.h	147;"	d
I2C_Register_CR2	inc/stm32f10x_i2c.h	148;"	d
I2C_Register_DR	inc/stm32f10x_i2c.h	151;"	d
I2C_Register_OAR1	inc/stm32f10x_i2c.h	149;"	d
I2C_Register_OAR2	inc/stm32f10x_i2c.h	150;"	d
I2C_Register_SR1	inc/stm32f10x_i2c.h	152;"	d
I2C_Register_SR2	inc/stm32f10x_i2c.h	153;"	d
I2C_Register_TRISE	inc/stm32f10x_i2c.h	155;"	d
I2C_SMBusAlertConfig	inc/stm32f10x_i2c.h	/^void I2C_SMBusAlertConfig(I2C_TypeDef* I2Cx, uint16_t I2C_SMBusAlert);$/;"	p	signature:(I2C_TypeDef* I2Cx, uint16_t I2C_SMBusAlert)
I2C_SMBusAlertConfig	src/stm32f10x_i2c.c	/^void I2C_SMBusAlertConfig(I2C_TypeDef* I2Cx, uint16_t I2C_SMBusAlert)$/;"	f	signature:(I2C_TypeDef* I2Cx, uint16_t I2C_SMBusAlert)
I2C_SMBusAlert_High	inc/stm32f10x_i2c.h	174;"	d
I2C_SMBusAlert_Low	inc/stm32f10x_i2c.h	173;"	d
I2C_Send7bitAddress	inc/stm32f10x_i2c.h	/^void I2C_Send7bitAddress(I2C_TypeDef* I2Cx, uint8_t Address, uint8_t I2C_Direction);$/;"	p	signature:(I2C_TypeDef* I2Cx, uint8_t Address, uint8_t I2C_Direction)
I2C_Send7bitAddress	src/stm32f10x_i2c.c	/^void I2C_Send7bitAddress(I2C_TypeDef* I2Cx, uint8_t Address, uint8_t I2C_Direction)$/;"	f	signature:(I2C_TypeDef* I2Cx, uint8_t Address, uint8_t I2C_Direction)
I2C_SendData	inc/stm32f10x_i2c.h	/^void I2C_SendData(I2C_TypeDef* I2Cx, uint8_t Data);$/;"	p	signature:(I2C_TypeDef* I2Cx, uint8_t Data)
I2C_SendData	src/stm32f10x_i2c.c	/^void I2C_SendData(I2C_TypeDef* I2Cx, uint8_t Data)$/;"	f	signature:(I2C_TypeDef* I2Cx, uint8_t Data)
I2C_SoftwareResetCmd	inc/stm32f10x_i2c.h	/^void I2C_SoftwareResetCmd(I2C_TypeDef* I2Cx, FunctionalState NewState);$/;"	p	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_SoftwareResetCmd	src/stm32f10x_i2c.c	/^void I2C_SoftwareResetCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)$/;"	f	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_StretchClockCmd	inc/stm32f10x_i2c.h	/^void I2C_StretchClockCmd(I2C_TypeDef* I2Cx, FunctionalState NewState);$/;"	p	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_StretchClockCmd	src/stm32f10x_i2c.c	/^void I2C_StretchClockCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)$/;"	f	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_StructInit	inc/stm32f10x_i2c.h	/^void I2C_StructInit(I2C_InitTypeDef* I2C_InitStruct);$/;"	p	signature:(I2C_InitTypeDef* I2C_InitStruct)
I2C_StructInit	src/stm32f10x_i2c.c	/^void I2C_StructInit(I2C_InitTypeDef* I2C_InitStruct)$/;"	f	signature:(I2C_InitTypeDef* I2C_InitStruct)
I2C_TransmitPEC	inc/stm32f10x_i2c.h	/^void I2C_TransmitPEC(I2C_TypeDef* I2Cx, FunctionalState NewState);$/;"	p	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2C_TransmitPEC	src/stm32f10x_i2c.c	/^void I2C_TransmitPEC(I2C_TypeDef* I2Cx, FunctionalState NewState)$/;"	f	signature:(I2C_TypeDef* I2Cx, FunctionalState NewState)
I2S2SRC_BitNumber	src/stm32f10x_rcc.c	109;"	d	file:
I2S2_CLOCK_SRC	src/stm32f10x_spi.c	75;"	d	file:
I2S3SRC_BitNumber	src/stm32f10x_rcc.c	113;"	d	file:
I2S3_CLOCK_SRC	src/stm32f10x_spi.c	76;"	d	file:
I2SCFGR_CLEAR_Mask	src/stm32f10x_spi.c	68;"	d	file:
I2SCFGR_I2SE_Reset	src/stm32f10x_spi.c	53;"	d	file:
I2SCFGR_I2SE_Set	src/stm32f10x_spi.c	52;"	d	file:
I2S_AudioFreq	inc/stm32f10x_spi.h	/^  uint32_t I2S_AudioFreq;    \/*!< Specifies the frequency selected for the I2S communication.$/;"	m	struct:__anon23	access:public
I2S_AudioFreq_11k	inc/stm32f10x_spi.h	307;"	d
I2S_AudioFreq_16k	inc/stm32f10x_spi.h	306;"	d
I2S_AudioFreq_22k	inc/stm32f10x_spi.h	305;"	d
I2S_AudioFreq_32k	inc/stm32f10x_spi.h	304;"	d
I2S_AudioFreq_44k	inc/stm32f10x_spi.h	303;"	d
I2S_AudioFreq_48k	inc/stm32f10x_spi.h	302;"	d
I2S_AudioFreq_8k	inc/stm32f10x_spi.h	308;"	d
I2S_AudioFreq_96k	inc/stm32f10x_spi.h	301;"	d
I2S_AudioFreq_Default	inc/stm32f10x_spi.h	309;"	d
I2S_CPOL	inc/stm32f10x_spi.h	/^  uint16_t I2S_CPOL;         \/*!< Specifies the idle state of the I2S clock.$/;"	m	struct:__anon23	access:public
I2S_CPOL_High	inc/stm32f10x_spi.h	328;"	d
I2S_CPOL_Low	inc/stm32f10x_spi.h	327;"	d
I2S_Cmd	inc/stm32f10x_spi.h	/^void I2S_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState);$/;"	p	signature:(SPI_TypeDef* SPIx, FunctionalState NewState)
I2S_Cmd	src/stm32f10x_spi.c	/^void I2S_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)$/;"	f	signature:(SPI_TypeDef* SPIx, FunctionalState NewState)
I2S_DIV_MASK	src/stm32f10x_spi.c	78;"	d	file:
I2S_DataFormat	inc/stm32f10x_spi.h	/^  uint16_t I2S_DataFormat;   \/*!< Specifies the data format for the I2S communication.$/;"	m	struct:__anon23	access:public
I2S_DataFormat_16b	inc/stm32f10x_spi.h	273;"	d
I2S_DataFormat_16bextended	inc/stm32f10x_spi.h	274;"	d
I2S_DataFormat_24b	inc/stm32f10x_spi.h	275;"	d
I2S_DataFormat_32b	inc/stm32f10x_spi.h	276;"	d
I2S_FLAG_CHSIDE	inc/stm32f10x_spi.h	409;"	d
I2S_FLAG_UDR	inc/stm32f10x_spi.h	410;"	d
I2S_IT_UDR	inc/stm32f10x_spi.h	394;"	d
I2S_Init	inc/stm32f10x_spi.h	/^void I2S_Init(SPI_TypeDef* SPIx, I2S_InitTypeDef* I2S_InitStruct);$/;"	p	signature:(SPI_TypeDef* SPIx, I2S_InitTypeDef* I2S_InitStruct)
I2S_Init	src/stm32f10x_spi.c	/^void I2S_Init(SPI_TypeDef* SPIx, I2S_InitTypeDef* I2S_InitStruct)$/;"	f	signature:(SPI_TypeDef* SPIx, I2S_InitTypeDef* I2S_InitStruct)
I2S_InitTypeDef	inc/stm32f10x_spi.h	/^}I2S_InitTypeDef;$/;"	t	typeref:struct:__anon23
I2S_MCLKOutput	inc/stm32f10x_spi.h	/^  uint16_t I2S_MCLKOutput;   \/*!< Specifies whether the I2S MCLK output is enabled or not.$/;"	m	struct:__anon23	access:public
I2S_MCLKOutput_Disable	inc/stm32f10x_spi.h	290;"	d
I2S_MCLKOutput_Enable	inc/stm32f10x_spi.h	289;"	d
I2S_MUL_MASK	src/stm32f10x_spi.c	77;"	d	file:
I2S_Mode	inc/stm32f10x_spi.h	/^  uint16_t I2S_Mode;         \/*!< Specifies the I2S operating mode.$/;"	m	struct:__anon23	access:public
I2S_Mode_MasterRx	inc/stm32f10x_spi.h	242;"	d
I2S_Mode_MasterTx	inc/stm32f10x_spi.h	241;"	d
I2S_Mode_Select	src/stm32f10x_spi.c	72;"	d	file:
I2S_Mode_SlaveRx	inc/stm32f10x_spi.h	240;"	d
I2S_Mode_SlaveTx	inc/stm32f10x_spi.h	239;"	d
I2S_Standard	inc/stm32f10x_spi.h	/^  uint16_t I2S_Standard;     \/*!< Specifies the standard used for the I2S communication.$/;"	m	struct:__anon23	access:public
I2S_Standard_LSB	inc/stm32f10x_spi.h	257;"	d
I2S_Standard_MSB	inc/stm32f10x_spi.h	256;"	d
I2S_Standard_PCMLong	inc/stm32f10x_spi.h	259;"	d
I2S_Standard_PCMShort	inc/stm32f10x_spi.h	258;"	d
I2S_Standard_Phillips	inc/stm32f10x_spi.h	255;"	d
I2S_StructInit	inc/stm32f10x_spi.h	/^void I2S_StructInit(I2S_InitTypeDef* I2S_InitStruct);$/;"	p	signature:(I2S_InitTypeDef* I2S_InitStruct)
I2S_StructInit	src/stm32f10x_spi.c	/^void I2S_StructInit(I2S_InitTypeDef* I2S_InitStruct)$/;"	f	signature:(I2S_InitTypeDef* I2S_InitStruct)
IDCODE_DEVID_Mask	src/stm32f10x_dbgmcu.c	45;"	d	file:
IDE	inc/stm32f10x_can.h	/^  uint8_t IDE;     \/*!< Specifies the type of identifier for the message that will be received.$/;"	m	struct:__anon6	access:public
IDE	inc/stm32f10x_can.h	/^  uint8_t IDE;     \/*!< Specifies the type of identifier for the message that will be transmitted.$/;"	m	struct:__anon5	access:public
IE_BitNumber	src/stm32f10x_cec.c	58;"	d	file:
INAK_TimeOut	src/stm32f10x_can.c	99;"	d	file:
IS_ADC_ALL_PERIPH	inc/stm32f10x_adc.h	82;"	d
IS_ADC_ANALOG_WATCHDOG	inc/stm32f10x_adc.h	297;"	d
IS_ADC_CHANNEL	inc/stm32f10x_adc.h	195;"	d
IS_ADC_CLEAR_FLAG	inc/stm32f10x_adc.h	333;"	d
IS_ADC_DATA_ALIGN	inc/stm32f10x_adc.h	163;"	d
IS_ADC_DMA_PERIPH	inc/stm32f10x_adc.h	86;"	d
IS_ADC_EXT_INJEC_TRIG	inc/stm32f10x_adc.h	252;"	d
IS_ADC_EXT_TRIG	inc/stm32f10x_adc.h	139;"	d
IS_ADC_GET_FLAG	inc/stm32f10x_adc.h	334;"	d
IS_ADC_GET_IT	inc/stm32f10x_adc.h	318;"	d
IS_ADC_INJECTED_CHANNEL	inc/stm32f10x_adc.h	277;"	d
IS_ADC_INJECTED_LENGTH	inc/stm32f10x_adc.h	365;"	d
IS_ADC_INJECTED_RANK	inc/stm32f10x_adc.h	375;"	d
IS_ADC_IT	inc/stm32f10x_adc.h	316;"	d
IS_ADC_MODE	inc/stm32f10x_adc.h	104;"	d
IS_ADC_OFFSET	inc/stm32f10x_adc.h	355;"	d
IS_ADC_REGULAR_DISC_NUMBER	inc/stm32f10x_adc.h	405;"	d
IS_ADC_REGULAR_LENGTH	inc/stm32f10x_adc.h	386;"	d
IS_ADC_REGULAR_RANK	inc/stm32f10x_adc.h	395;"	d
IS_ADC_SAMPLE_TIME	inc/stm32f10x_adc.h	220;"	d
IS_ADC_THRESHOLD	inc/stm32f10x_adc.h	345;"	d
IS_BKP_CALIBRATION_VALUE	inc/stm32f10x_bkp.h	143;"	d
IS_BKP_DR	inc/stm32f10x_bkp.h	128;"	d
IS_BKP_RTC_OUTPUT_SOURCE	inc/stm32f10x_bkp.h	73;"	d
IS_BKP_TAMPER_PIN_LEVEL	inc/stm32f10x_bkp.h	59;"	d
IS_CAN_ALL_PERIPH	inc/stm32f10x_can.h	45;"	d
IS_CAN_BANKNUMBER	inc/stm32f10x_can.h	337;"	d
IS_CAN_BS1	inc/stm32f10x_can.h	248;"	d
IS_CAN_BS2	inc/stm32f10x_can.h	266;"	d
IS_CAN_DLC	inc/stm32f10x_can.h	349;"	d
IS_CAN_EXTID	inc/stm32f10x_can.h	348;"	d
IS_CAN_FIFO	inc/stm32f10x_can.h	399;"	d
IS_CAN_FILTER_FIFO	inc/stm32f10x_can.h	327;"	d
IS_CAN_FILTER_MODE	inc/stm32f10x_can.h	301;"	d
IS_CAN_FILTER_NUMBER	inc/stm32f10x_can.h	286;"	d
IS_CAN_FILTER_NUMBER	inc/stm32f10x_can.h	288;"	d
IS_CAN_FILTER_SCALE	inc/stm32f10x_can.h	314;"	d
IS_CAN_FLAG	inc/stm32f10x_can.h	435;"	d
IS_CAN_IDTYPE	inc/stm32f10x_can.h	361;"	d
IS_CAN_ITConfig	inc/stm32f10x_can.h	464;"	d
IS_CAN_ITStatus	inc/stm32f10x_can.h	472;"	d
IS_CAN_MODE	inc/stm32f10x_can.h	206;"	d
IS_CAN_PRESCALER	inc/stm32f10x_can.h	276;"	d
IS_CAN_RTR	inc/stm32f10x_can.h	373;"	d
IS_CAN_SJW	inc/stm32f10x_can.h	221;"	d
IS_CAN_STDID	inc/stm32f10x_can.h	347;"	d
IS_CAN_TRANSMITMAILBOX	inc/stm32f10x_can.h	346;"	d
IS_CEC_ADDRESS	inc/stm32f10x_cec.h	107;"	d
IS_CEC_BIT_PERIOD_ERROR_MODE	inc/stm32f10x_cec.h	83;"	d
IS_CEC_BIT_TIMING_ERROR_MODE	inc/stm32f10x_cec.h	71;"	d
IS_CEC_CLEAR_FLAG	inc/stm32f10x_cec.h	147;"	d
IS_CEC_GET_FLAG	inc/stm32f10x_cec.h	149;"	d
IS_CEC_GET_IT	inc/stm32f10x_cec.h	97;"	d
IS_CEC_PRESCALER	inc/stm32f10x_cec.h	115;"	d
IS_DAC_ALIGN	inc/stm32f10x_dac.h	210;"	d
IS_DAC_CHANNEL	inc/stm32f10x_dac.h	197;"	d
IS_DAC_DATA	inc/stm32f10x_dac.h	233;"	d
IS_DAC_FLAG	inc/stm32f10x_dac.h	254;"	d
IS_DAC_GENERATE_WAVE	inc/stm32f10x_dac.h	115;"	d
IS_DAC_IT	inc/stm32f10x_dac.h	243;"	d
IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE	inc/stm32f10x_dac.h	151;"	d
IS_DAC_OUTPUT_BUFFER_STATE	inc/stm32f10x_dac.h	185;"	d
IS_DAC_TRIGGER	inc/stm32f10x_dac.h	94;"	d
IS_DAC_WAVE	inc/stm32f10x_dac.h	223;"	d
IS_DBGMCU_PERIPH	inc/stm32f10x_dbgmcu.h	80;"	d
IS_DMA_ALL_PERIPH	inc/stm32f10x_dma.h	94;"	d
IS_DMA_BUFFER_SIZE	inc/stm32f10x_dma.h	387;"	d
IS_DMA_CLEAR_FLAG	inc/stm32f10x_dma.h	353;"	d
IS_DMA_CLEAR_IT	inc/stm32f10x_dma.h	269;"	d
IS_DMA_CONFIG_IT	inc/stm32f10x_dma.h	217;"	d
IS_DMA_DIR	inc/stm32f10x_dma.h	113;"	d
IS_DMA_GET_FLAG	inc/stm32f10x_dma.h	355;"	d
IS_DMA_GET_IT	inc/stm32f10x_dma.h	271;"	d
IS_DMA_M2M_STATE	inc/stm32f10x_dma.h	204;"	d
IS_DMA_MEMORY_DATA_SIZE	inc/stm32f10x_dma.h	164;"	d
IS_DMA_MEMORY_INC_STATE	inc/stm32f10x_dma.h	137;"	d
IS_DMA_MODE	inc/stm32f10x_dma.h	177;"	d
IS_DMA_PERIPHERAL_DATA_SIZE	inc/stm32f10x_dma.h	150;"	d
IS_DMA_PERIPHERAL_INC_STATE	inc/stm32f10x_dma.h	125;"	d
IS_DMA_PRIORITY	inc/stm32f10x_dma.h	190;"	d
IS_EXTI_LINE	inc/stm32f10x_exti.h	124;"	d
IS_EXTI_MODE	inc/stm32f10x_exti.h	55;"	d
IS_EXTI_TRIGGER	inc/stm32f10x_exti.h	68;"	d
IS_FLASH_ADDRESS	inc/stm32f10x_flash.h	215;"	d
IS_FLASH_BOOT	inc/stm32f10x_flash.h	267;"	d
IS_FLASH_CLEAR_FLAG	inc/stm32f10x_flash.h	318;"	d
IS_FLASH_CLEAR_FLAG	inc/stm32f10x_flash.h	338;"	d
IS_FLASH_GET_FLAG	inc/stm32f10x_flash.h	319;"	d
IS_FLASH_GET_FLAG	inc/stm32f10x_flash.h	339;"	d
IS_FLASH_HALFCYCLEACCESS_STATE	inc/stm32f10x_flash.h	86;"	d
IS_FLASH_IT	inc/stm32f10x_flash.h	284;"	d
IS_FLASH_IT	inc/stm32f10x_flash.h	291;"	d
IS_FLASH_LATENCY	inc/stm32f10x_flash.h	73;"	d
IS_FLASH_PREFETCHBUFFER_STATE	inc/stm32f10x_flash.h	98;"	d
IS_FLASH_WRPROT_PAGE	inc/stm32f10x_flash.h	213;"	d
IS_FSMC_ACCESS_MODE	inc/stm32f10x_fsmc.h	500;"	d
IS_FSMC_ADDRESS_HOLD_TIME	inc/stm32f10x_fsmc.h	446;"	d
IS_FSMC_ADDRESS_SETUP_TIME	inc/stm32f10x_fsmc.h	436;"	d
IS_FSMC_BURSTMODE	inc/stm32f10x_fsmc.h	336;"	d
IS_FSMC_CLEAR_FLAG	inc/stm32f10x_fsmc.h	653;"	d
IS_FSMC_CLK_DIV	inc/stm32f10x_fsmc.h	476;"	d
IS_FSMC_DATASETUP_TIME	inc/stm32f10x_fsmc.h	456;"	d
IS_FSMC_DATA_LATENCY	inc/stm32f10x_fsmc.h	486;"	d
IS_FSMC_ECCPAGE_SIZE	inc/stm32f10x_fsmc.h	554;"	d
IS_FSMC_ECC_STATE	inc/stm32f10x_fsmc.h	537;"	d
IS_FSMC_EXTENDED_MODE	inc/stm32f10x_fsmc.h	413;"	d
IS_FSMC_GETFLAG_BANK	inc/stm32f10x_fsmc.h	277;"	d
IS_FSMC_GET_FLAG	inc/stm32f10x_fsmc.h	648;"	d
IS_FSMC_GET_IT	inc/stm32f10x_fsmc.h	633;"	d
IS_FSMC_HIZ_TIME	inc/stm32f10x_fsmc.h	619;"	d
IS_FSMC_HOLD_TIME	inc/stm32f10x_fsmc.h	609;"	d
IS_FSMC_IT	inc/stm32f10x_fsmc.h	632;"	d
IS_FSMC_IT_BANK	inc/stm32f10x_fsmc.h	281;"	d
IS_FSMC_MEMORY	inc/stm32f10x_fsmc.h	309;"	d
IS_FSMC_MEMORY_WIDTH	inc/stm32f10x_fsmc.h	323;"	d
IS_FSMC_MUX	inc/stm32f10x_fsmc.h	295;"	d
IS_FSMC_NAND_BANK	inc/stm32f10x_fsmc.h	274;"	d
IS_FSMC_NORSRAM_BANK	inc/stm32f10x_fsmc.h	269;"	d
IS_FSMC_SETUP_TIME	inc/stm32f10x_fsmc.h	589;"	d
IS_FSMC_TAR_TIME	inc/stm32f10x_fsmc.h	579;"	d
IS_FSMC_TCLR_TIME	inc/stm32f10x_fsmc.h	569;"	d
IS_FSMC_TURNAROUND_TIME	inc/stm32f10x_fsmc.h	466;"	d
IS_FSMC_WAITE_SIGNAL	inc/stm32f10x_fsmc.h	400;"	d
IS_FSMC_WAIT_FEATURE	inc/stm32f10x_fsmc.h	523;"	d
IS_FSMC_WAIT_POLARITY	inc/stm32f10x_fsmc.h	348;"	d
IS_FSMC_WAIT_SIGNAL_ACTIVE	inc/stm32f10x_fsmc.h	374;"	d
IS_FSMC_WAIT_TIME	inc/stm32f10x_fsmc.h	599;"	d
IS_FSMC_WRAP_MODE	inc/stm32f10x_fsmc.h	361;"	d
IS_FSMC_WRITE_BURST	inc/stm32f10x_fsmc.h	426;"	d
IS_FSMC_WRITE_OPERATION	inc/stm32f10x_fsmc.h	387;"	d
IS_GET_EXTI_LINE	inc/stm32f10x_exti.h	125;"	d
IS_GET_GPIO_PIN	inc/stm32f10x_gpio.h	146;"	d
IS_GPIO_ALL_PERIPH	inc/stm32f10x_gpio.h	45;"	d
IS_GPIO_BIT_ACTION	inc/stm32f10x_gpio.h	112;"	d
IS_GPIO_ETH_MEDIA_INTERFACE	inc/stm32f10x_gpio.h	321;"	d
IS_GPIO_EVENTOUT_PORT_SOURCE	inc/stm32f10x_gpio.h	255;"	d
IS_GPIO_EXTI_PORT_SOURCE	inc/stm32f10x_gpio.h	261;"	d
IS_GPIO_MODE	inc/stm32f10x_gpio.h	81;"	d
IS_GPIO_PIN	inc/stm32f10x_gpio.h	144;"	d
IS_GPIO_PIN_SOURCE	inc/stm32f10x_gpio.h	294;"	d
IS_GPIO_REMAP	inc/stm32f10x_gpio.h	218;"	d
IS_GPIO_SPEED	inc/stm32f10x_gpio.h	63;"	d
IS_I2C_ACKNOWLEDGE_ADDRESS	inc/stm32f10x_i2c.h	137;"	d
IS_I2C_ACK_STATE	inc/stm32f10x_i2c.h	113;"	d
IS_I2C_ALL_PERIPH	inc/stm32f10x_i2c.h	79;"	d
IS_I2C_CLEAR_FLAG	inc/stm32f10x_i2c.h	272;"	d
IS_I2C_CLEAR_IT	inc/stm32f10x_i2c.h	224;"	d
IS_I2C_CLOCK_SPEED	inc/stm32f10x_i2c.h	500;"	d
IS_I2C_CONFIG_IT	inc/stm32f10x_i2c.h	200;"	d
IS_I2C_DIRECTION	inc/stm32f10x_i2c.h	125;"	d
IS_I2C_DUTY_CYCLE	inc/stm32f10x_i2c.h	101;"	d
IS_I2C_EVENT	inc/stm32f10x_i2c.h	463;"	d
IS_I2C_GET_FLAG	inc/stm32f10x_i2c.h	274;"	d
IS_I2C_GET_IT	inc/stm32f10x_i2c.h	226;"	d
IS_I2C_MODE	inc/stm32f10x_i2c.h	88;"	d
IS_I2C_OWN_ADDRESS1	inc/stm32f10x_i2c.h	491;"	d
IS_I2C_PEC_POSITION	inc/stm32f10x_i2c.h	187;"	d
IS_I2C_REGISTER	inc/stm32f10x_i2c.h	156;"	d
IS_I2C_SMBUS_ALERT	inc/stm32f10x_i2c.h	175;"	d
IS_I2S_AUDIO_FREQ	inc/stm32f10x_spi.h	310;"	d
IS_I2S_CPOL	inc/stm32f10x_spi.h	329;"	d
IS_I2S_DATA_FORMAT	inc/stm32f10x_spi.h	277;"	d
IS_I2S_MCLK_OUTPUT	inc/stm32f10x_spi.h	291;"	d
IS_I2S_MODE	inc/stm32f10x_spi.h	243;"	d
IS_I2S_STANDARD	inc/stm32f10x_spi.h	260;"	d
IS_IWDG_FLAG	inc/stm32f10x_iwdg.h	93;"	d
IS_IWDG_PRESCALER	inc/stm32f10x_iwdg.h	76;"	d
IS_IWDG_RELOAD	inc/stm32f10x_iwdg.h	94;"	d
IS_IWDG_WRITE_ACCESS	inc/stm32f10x_iwdg.h	59;"	d
IS_NVIC_LP	inc/misc.h	129;"	d
IS_NVIC_OFFSET	inc/misc.h	161;"	d
IS_NVIC_PREEMPTION_PRIORITY	inc/misc.h	157;"	d
IS_NVIC_PRIORITY_GROUP	inc/misc.h	151;"	d
IS_NVIC_SUB_PRIORITY	inc/misc.h	159;"	d
IS_NVIC_VECTTAB	inc/misc.h	116;"	d
IS_OB_DATA_ADDRESS	inc/stm32f10x_flash.h	217;"	d
IS_OB_IWDG_SOURCE	inc/stm32f10x_flash.h	229;"	d
IS_OB_STDBY_SOURCE	inc/stm32f10x_flash.h	253;"	d
IS_OB_STOP_SOURCE	inc/stm32f10x_flash.h	241;"	d
IS_PWR_CLEAR_FLAG	inc/stm32f10x_pwr.h	107;"	d
IS_PWR_GET_FLAG	inc/stm32f10x_pwr.h	104;"	d
IS_PWR_PVD_LEVEL	inc/stm32f10x_pwr.h	65;"	d
IS_PWR_REGULATOR	inc/stm32f10x_pwr.h	79;"	d
IS_PWR_STOP_ENTRY	inc/stm32f10x_pwr.h	91;"	d
IS_RCC_ADCCLK	inc/stm32f10x_rcc.h	432;"	d
IS_RCC_AHB_PERIPH	inc/stm32f10x_rcc.h	478;"	d
IS_RCC_AHB_PERIPH	inc/stm32f10x_rcc.h	485;"	d
IS_RCC_AHB_PERIPH_RESET	inc/stm32f10x_rcc.h	486;"	d
IS_RCC_APB1_PERIPH	inc/stm32f10x_rcc.h	553;"	d
IS_RCC_APB2_PERIPH	inc/stm32f10x_rcc.h	518;"	d
IS_RCC_CALIBRATION_VALUE	inc/stm32f10x_rcc.h	625;"	d
IS_RCC_CLEAR_IT	inc/stm32f10x_rcc.h	352;"	d
IS_RCC_CLEAR_IT	inc/stm32f10x_rcc.h	361;"	d
IS_RCC_FLAG	inc/stm32f10x_rcc.h	607;"	d
IS_RCC_FLAG	inc/stm32f10x_rcc.h	616;"	d
IS_RCC_GET_IT	inc/stm32f10x_rcc.h	349;"	d
IS_RCC_GET_IT	inc/stm32f10x_rcc.h	357;"	d
IS_RCC_HCLK	inc/stm32f10x_rcc.h	311;"	d
IS_RCC_HSE	inc/stm32f10x_rcc.h	69;"	d
IS_RCC_I2S2CLK_SOURCE	inc/stm32f10x_rcc.h	404;"	d
IS_RCC_I2S3CLK_SOURCE	inc/stm32f10x_rcc.h	416;"	d
IS_RCC_IT	inc/stm32f10x_rcc.h	348;"	d
IS_RCC_IT	inc/stm32f10x_rcc.h	356;"	d
IS_RCC_LSE	inc/stm32f10x_rcc.h	445;"	d
IS_RCC_MCO	inc/stm32f10x_rcc.h	570;"	d
IS_RCC_MCO	inc/stm32f10x_rcc.h	579;"	d
IS_RCC_OTGFSCLK_SOURCE	inc/stm32f10x_rcc.h	389;"	d
IS_RCC_PCLK	inc/stm32f10x_rcc.h	329;"	d
IS_RCC_PLL2_MUL	inc/stm32f10x_rcc.h	248;"	d
IS_RCC_PLL3_MUL	inc/stm32f10x_rcc.h	272;"	d
IS_RCC_PLL_MUL	inc/stm32f10x_rcc.h	117;"	d
IS_RCC_PLL_MUL	inc/stm32f10x_rcc.h	135;"	d
IS_RCC_PLL_SOURCE	inc/stm32f10x_rcc.h	85;"	d
IS_RCC_PLL_SOURCE	inc/stm32f10x_rcc.h	90;"	d
IS_RCC_PREDIV1	inc/stm32f10x_rcc.h	165;"	d
IS_RCC_PREDIV1_SOURCE	inc/stm32f10x_rcc.h	187;"	d
IS_RCC_PREDIV1_SOURCE	inc/stm32f10x_rcc.h	193;"	d
IS_RCC_PREDIV2	inc/stm32f10x_rcc.h	221;"	d
IS_RCC_RTCCLK_SOURCE	inc/stm32f10x_rcc.h	458;"	d
IS_RCC_SYSCLK_SOURCE	inc/stm32f10x_rcc.h	291;"	d
IS_RCC_USBCLK_SOURCE	inc/stm32f10x_rcc.h	377;"	d
IS_RTC_CLEAR_FLAG	inc/stm32f10x_rtc.h	76;"	d
IS_RTC_GET_FLAG	inc/stm32f10x_rtc.h	77;"	d
IS_RTC_GET_IT	inc/stm32f10x_rtc.h	61;"	d
IS_RTC_IT	inc/stm32f10x_rtc.h	60;"	d
IS_RTC_PRESCALER	inc/stm32f10x_rtc.h	80;"	d
IS_SDIO_BLOCK_SIZE	inc/stm32f10x_sdio.h	314;"	d
IS_SDIO_BUS_WIDE	inc/stm32f10x_sdio.h	161;"	d
IS_SDIO_CLEAR_FLAG	inc/stm32f10x_sdio.h	421;"	d
IS_SDIO_CLEAR_IT	inc/stm32f10x_sdio.h	448;"	d
IS_SDIO_CLOCK_BYPASS	inc/stm32f10x_sdio.h	136;"	d
IS_SDIO_CLOCK_EDGE	inc/stm32f10x_sdio.h	124;"	d
IS_SDIO_CLOCK_POWER_SAVE	inc/stm32f10x_sdio.h	148;"	d
IS_SDIO_CMD_INDEX	inc/stm32f10x_sdio.h	229;"	d
IS_SDIO_CPSM	inc/stm32f10x_sdio.h	267;"	d
IS_SDIO_DATA_LENGTH	inc/stm32f10x_sdio.h	290;"	d
IS_SDIO_DPSM	inc/stm32f10x_sdio.h	363;"	d
IS_SDIO_FLAG	inc/stm32f10x_sdio.h	396;"	d
IS_SDIO_GET_IT	inc/stm32f10x_sdio.h	423;"	d
IS_SDIO_HARDWARE_FLOW_CONTROL	inc/stm32f10x_sdio.h	174;"	d
IS_SDIO_IT	inc/stm32f10x_sdio.h	220;"	d
IS_SDIO_POWER_STATE	inc/stm32f10x_sdio.h	186;"	d
IS_SDIO_READWAIT_MODE	inc/stm32f10x_sdio.h	460;"	d
IS_SDIO_RESP	inc/stm32f10x_sdio.h	280;"	d
IS_SDIO_RESPONSE	inc/stm32f10x_sdio.h	241;"	d
IS_SDIO_TRANSFER_DIR	inc/stm32f10x_sdio.h	339;"	d
IS_SDIO_TRANSFER_MODE	inc/stm32f10x_sdio.h	351;"	d
IS_SDIO_WAIT	inc/stm32f10x_sdio.h	255;"	d
IS_SPI_23_PERIPH	inc/stm32f10x_spi.h	120;"	d
IS_SPI_ALL_PERIPH	inc/stm32f10x_spi.h	116;"	d
IS_SPI_BAUDRATE_PRESCALER	inc/stm32f10x_spi.h	211;"	d
IS_SPI_CPHA	inc/stm32f10x_spi.h	181;"	d
IS_SPI_CPOL	inc/stm32f10x_spi.h	169;"	d
IS_SPI_CRC	inc/stm32f10x_spi.h	364;"	d
IS_SPI_CRC_POLYNOMIAL	inc/stm32f10x_spi.h	428;"	d
IS_SPI_DATASIZE	inc/stm32f10x_spi.h	157;"	d
IS_SPI_DIRECTION	inc/stm32f10x_spi.h	375;"	d
IS_SPI_DIRECTION_MODE	inc/stm32f10x_spi.h	131;"	d
IS_SPI_FIRST_BIT	inc/stm32f10x_spi.h	229;"	d
IS_SPI_I2S_CLEAR_FLAG	inc/stm32f10x_spi.h	415;"	d
IS_SPI_I2S_CLEAR_IT	inc/stm32f10x_spi.h	395;"	d
IS_SPI_I2S_CONFIG_IT	inc/stm32f10x_spi.h	388;"	d
IS_SPI_I2S_DMAREQ	inc/stm32f10x_spi.h	341;"	d
IS_SPI_I2S_GET_FLAG	inc/stm32f10x_spi.h	416;"	d
IS_SPI_I2S_GET_IT	inc/stm32f10x_spi.h	396;"	d
IS_SPI_MODE	inc/stm32f10x_spi.h	145;"	d
IS_SPI_NSS	inc/stm32f10x_spi.h	193;"	d
IS_SPI_NSS_INTERNAL	inc/stm32f10x_spi.h	352;"	d
IS_SYSTICK_CLK_SOURCE	inc/misc.h	173;"	d
IS_TIM_ALL_PERIPH	inc/stm32f10x_tim.h	168;"	d
IS_TIM_AUTOMATIC_OUTPUT_STATE	inc/stm32f10x_tim.h	478;"	d
IS_TIM_BREAK_POLARITY	inc/stm32f10x_tim.h	466;"	d
IS_TIM_BREAK_STATE	inc/stm32f10x_tim.h	454;"	d
IS_TIM_CCX	inc/stm32f10x_tim.h	430;"	d
IS_TIM_CCXN	inc/stm32f10x_tim.h	442;"	d
IS_TIM_CHANNEL	inc/stm32f10x_tim.h	331;"	d
IS_TIM_CKD_DIV	inc/stm32f10x_tim.h	351;"	d
IS_TIM_CLEAR_FLAG	inc/stm32f10x_tim.h	984;"	d
IS_TIM_COMPLEMENTARY_CHANNEL	inc/stm32f10x_tim.h	337;"	d
IS_TIM_COUNTER_MODE	inc/stm32f10x_tim.h	367;"	d
IS_TIM_DMA_BASE	inc/stm32f10x_tim.h	641;"	d
IS_TIM_DMA_LENGTH	inc/stm32f10x_tim.h	686;"	d
IS_TIM_DMA_SOURCE	inc/stm32f10x_tim.h	719;"	d
IS_TIM_ENCODER_MODE	inc/stm32f10x_tim.h	825;"	d
IS_TIM_EVENT_SOURCE	inc/stm32f10x_tim.h	845;"	d
IS_TIM_EXT_FILTER	inc/stm32f10x_tim.h	1002;"	d
IS_TIM_EXT_POLARITY	inc/stm32f10x_tim.h	788;"	d
IS_TIM_EXT_PRESCALER	inc/stm32f10x_tim.h	733;"	d
IS_TIM_FORCED_ACTION	inc/stm32f10x_tim.h	812;"	d
IS_TIM_GET_FLAG	inc/stm32f10x_tim.h	970;"	d
IS_TIM_GET_IT	inc/stm32f10x_tim.h	606;"	d
IS_TIM_IC_FILTER	inc/stm32f10x_tim.h	993;"	d
IS_TIM_IC_POLARITY	inc/stm32f10x_tim.h	554;"	d
IS_TIM_IC_PRESCALER	inc/stm32f10x_tim.h	584;"	d
IS_TIM_IC_SELECTION	inc/stm32f10x_tim.h	569;"	d
IS_TIM_INTERNAL_TRIGGER_SELECTION	inc/stm32f10x_tim.h	761;"	d
IS_TIM_IT	inc/stm32f10x_tim.h	604;"	d
IS_TIM_LIST1_PERIPH	inc/stm32f10x_tim.h	187;"	d
IS_TIM_LIST2_PERIPH	inc/stm32f10x_tim.h	191;"	d
IS_TIM_LIST3_PERIPH	inc/stm32f10x_tim.h	198;"	d
IS_TIM_LIST4_PERIPH	inc/stm32f10x_tim.h	206;"	d
IS_TIM_LIST5_PERIPH	inc/stm32f10x_tim.h	217;"	d
IS_TIM_LIST6_PERIPH	inc/stm32f10x_tim.h	226;"	d
IS_TIM_LIST7_PERIPH	inc/stm32f10x_tim.h	237;"	d
IS_TIM_LIST8_PERIPH	inc/stm32f10x_tim.h	250;"	d
IS_TIM_LIST9_PERIPH	inc/stm32f10x_tim.h	267;"	d
IS_TIM_LOCK_LEVEL	inc/stm32f10x_tim.h	492;"	d
IS_TIM_MSM_STATE	inc/stm32f10x_tim.h	948;"	d
IS_TIM_OCCLEAR_STATE	inc/stm32f10x_tim.h	896;"	d
IS_TIM_OCFAST_STATE	inc/stm32f10x_tim.h	883;"	d
IS_TIM_OCIDLE_STATE	inc/stm32f10x_tim.h	530;"	d
IS_TIM_OCM	inc/stm32f10x_tim.h	299;"	d
IS_TIM_OCNIDLE_STATE	inc/stm32f10x_tim.h	542;"	d
IS_TIM_OCN_POLARITY	inc/stm32f10x_tim.h	394;"	d
IS_TIM_OCPRELOAD_STATE	inc/stm32f10x_tim.h	871;"	d
IS_TIM_OC_MODE	inc/stm32f10x_tim.h	293;"	d
IS_TIM_OC_POLARITY	inc/stm32f10x_tim.h	382;"	d
IS_TIM_OPM_MODE	inc/stm32f10x_tim.h	317;"	d
IS_TIM_OSSI_STATE	inc/stm32f10x_tim.h	506;"	d
IS_TIM_OSSR_STATE	inc/stm32f10x_tim.h	518;"	d
IS_TIM_OUTPUTN_STATE	inc/stm32f10x_tim.h	418;"	d
IS_TIM_OUTPUT_STATE	inc/stm32f10x_tim.h	406;"	d
IS_TIM_PRESCALER_RELOAD	inc/stm32f10x_tim.h	800;"	d
IS_TIM_PWMI_CHANNEL	inc/stm32f10x_tim.h	335;"	d
IS_TIM_SLAVE_MODE	inc/stm32f10x_tim.h	934;"	d
IS_TIM_TIXCLK_SOURCE	inc/stm32f10x_tim.h	776;"	d
IS_TIM_TRGO_SOURCE	inc/stm32f10x_tim.h	914;"	d
IS_TIM_TRIGGER_SELECTION	inc/stm32f10x_tim.h	753;"	d
IS_TIM_UPDATE_SOURCE	inc/stm32f10x_tim.h	859;"	d
IS_USART_1234_PERIPH	inc/stm32f10x_usart.h	116;"	d
IS_USART_123_PERIPH	inc/stm32f10x_usart.h	112;"	d
IS_USART_ADDRESS	inc/stm32f10x_usart.h	341;"	d
IS_USART_ALL_PERIPH	inc/stm32f10x_usart.h	106;"	d
IS_USART_BAUDRATE	inc/stm32f10x_usart.h	340;"	d
IS_USART_CLEAR_FLAG	inc/stm32f10x_usart.h	336;"	d
IS_USART_CLEAR_IT	inc/stm32f10x_usart.h	261;"	d
IS_USART_CLOCK	inc/stm32f10x_usart.h	195;"	d
IS_USART_CONFIG_IT	inc/stm32f10x_usart.h	252;"	d
IS_USART_CPHA	inc/stm32f10x_usart.h	219;"	d
IS_USART_CPOL	inc/stm32f10x_usart.h	207;"	d
IS_USART_DATA	inc/stm32f10x_usart.h	342;"	d
IS_USART_DMAREQ	inc/stm32f10x_usart.h	273;"	d
IS_USART_FLAG	inc/stm32f10x_usart.h	330;"	d
IS_USART_GET_IT	inc/stm32f10x_usart.h	256;"	d
IS_USART_HARDWARE_FLOW_CONTROL	inc/stm32f10x_usart.h	181;"	d
IS_USART_IRDA_MODE	inc/stm32f10x_usart.h	310;"	d
IS_USART_LASTBIT	inc/stm32f10x_usart.h	231;"	d
IS_USART_LIN_BREAK_DETECT_LENGTH	inc/stm32f10x_usart.h	297;"	d
IS_USART_MODE	inc/stm32f10x_usart.h	169;"	d
IS_USART_PARITY	inc/stm32f10x_usart.h	156;"	d
IS_USART_PERIPH_FLAG	inc/stm32f10x_usart.h	337;"	d
IS_USART_STOPBITS	inc/stm32f10x_usart.h	141;"	d
IS_USART_WAKEUP	inc/stm32f10x_usart.h	285;"	d
IS_USART_WORD_LENGTH	inc/stm32f10x_usart.h	127;"	d
IS_WWDG_COUNTER	inc/stm32f10x_wwdg.h	66;"	d
IS_WWDG_PRESCALER	inc/stm32f10x_wwdg.h	61;"	d
IS_WWDG_WINDOW_VALUE	inc/stm32f10x_wwdg.h	65;"	d
ITEN_Mask	src/stm32f10x_i2c.c	122;"	d	file:
IT_Mask	src/stm32f10x_usart.c	80;"	d	file:
IWDG_Enable	inc/stm32f10x_iwdg.h	/^void IWDG_Enable(void);$/;"	p	signature:(void)
IWDG_Enable	src/stm32f10x_iwdg.c	/^void IWDG_Enable(void)$/;"	f	signature:(void)
IWDG_FLAG_PVU	inc/stm32f10x_iwdg.h	91;"	d
IWDG_FLAG_RVU	inc/stm32f10x_iwdg.h	92;"	d
IWDG_GetFlagStatus	inc/stm32f10x_iwdg.h	/^FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG);$/;"	p	signature:(uint16_t IWDG_FLAG)
IWDG_GetFlagStatus	src/stm32f10x_iwdg.c	/^FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG)$/;"	f	signature:(uint16_t IWDG_FLAG)
IWDG_Prescaler_128	inc/stm32f10x_iwdg.h	74;"	d
IWDG_Prescaler_16	inc/stm32f10x_iwdg.h	71;"	d
IWDG_Prescaler_256	inc/stm32f10x_iwdg.h	75;"	d
IWDG_Prescaler_32	inc/stm32f10x_iwdg.h	72;"	d
IWDG_Prescaler_4	inc/stm32f10x_iwdg.h	69;"	d
IWDG_Prescaler_64	inc/stm32f10x_iwdg.h	73;"	d
IWDG_Prescaler_8	inc/stm32f10x_iwdg.h	70;"	d
IWDG_ReloadCounter	inc/stm32f10x_iwdg.h	/^void IWDG_ReloadCounter(void);$/;"	p	signature:(void)
IWDG_ReloadCounter	src/stm32f10x_iwdg.c	/^void IWDG_ReloadCounter(void)$/;"	f	signature:(void)
IWDG_SetPrescaler	inc/stm32f10x_iwdg.h	/^void IWDG_SetPrescaler(uint8_t IWDG_Prescaler);$/;"	p	signature:(uint8_t IWDG_Prescaler)
IWDG_SetPrescaler	src/stm32f10x_iwdg.c	/^void IWDG_SetPrescaler(uint8_t IWDG_Prescaler)$/;"	f	signature:(uint8_t IWDG_Prescaler)
IWDG_SetReload	inc/stm32f10x_iwdg.h	/^void IWDG_SetReload(uint16_t Reload);$/;"	p	signature:(uint16_t Reload)
IWDG_SetReload	src/stm32f10x_iwdg.c	/^void IWDG_SetReload(uint16_t Reload)$/;"	f	signature:(uint16_t Reload)
IWDG_WriteAccessCmd	inc/stm32f10x_iwdg.h	/^void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess);$/;"	p	signature:(uint16_t IWDG_WriteAccess)
IWDG_WriteAccessCmd	src/stm32f10x_iwdg.c	/^void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess)$/;"	f	signature:(uint16_t IWDG_WriteAccess)
IWDG_WriteAccess_Disable	inc/stm32f10x_iwdg.h	58;"	d
IWDG_WriteAccess_Enable	inc/stm32f10x_iwdg.h	57;"	d
JDR_Offset	src/stm32f10x_adc.c	136;"	d	file:
JSQR_JL_Reset	src/stm32f10x_adc.c	129;"	d	file:
JSQR_JL_Set	src/stm32f10x_adc.c	128;"	d	file:
JSQR_JSQ_Set	src/stm32f10x_adc.c	125;"	d	file:
KR_KEY_Enable	src/stm32f10x_iwdg.c	49;"	d	file:
KR_KEY_Reload	src/stm32f10x_iwdg.c	48;"	d	file:
LSB_MASK	src/stm32f10x_gpio.c	65;"	d	file:
LSION_BitNumber	src/stm32f10x_rcc.c	101;"	d	file:
MAPR_MII_RMII_SEL_BB	src/stm32f10x_gpio.c	61;"	d	file:
MAPR_OFFSET	src/stm32f10x_gpio.c	59;"	d	file:
MCR_ABOM	src/stm32f10x_can.c	53;"	d	file:
MCR_AWUM	src/stm32f10x_can.c	52;"	d	file:
MCR_DBF	src/stm32f10x_can.c	56;"	d	file:
MCR_INRQ	src/stm32f10x_can.c	47;"	d	file:
MCR_NART	src/stm32f10x_can.c	51;"	d	file:
MCR_RESET	src/stm32f10x_can.c	55;"	d	file:
MCR_RFLM	src/stm32f10x_can.c	50;"	d	file:
MCR_SLEEP	src/stm32f10x_can.c	48;"	d	file:
MCR_TTCM	src/stm32f10x_can.c	54;"	d	file:
MCR_TXFP	src/stm32f10x_can.c	49;"	d	file:
MII_RMII_SEL_BitNumber	src/stm32f10x_gpio.c	60;"	d	file:
MSR_INAK	src/stm32f10x_can.c	59;"	d	file:
MSR_SLAKI	src/stm32f10x_can.c	61;"	d	file:
MSR_WKUI	src/stm32f10x_can.c	60;"	d	file:
NIEN_BitNumber	src/stm32f10x_sdio.c	60;"	d	file:
NVIC_IRQChannel	inc/misc.h	/^  uint8_t NVIC_IRQChannel;                    \/*!< Specifies the IRQ channel to be enabled or disabled.$/;"	m	struct:__anon29	access:public
NVIC_IRQChannelCmd	inc/misc.h	/^  FunctionalState NVIC_IRQChannelCmd;         \/*!< Specifies whether the IRQ channel defined in NVIC_IRQChannel$/;"	m	struct:__anon29	access:public
NVIC_IRQChannelPreemptionPriority	inc/misc.h	/^  uint8_t NVIC_IRQChannelPreemptionPriority;  \/*!< Specifies the pre-emption priority for the IRQ channel$/;"	m	struct:__anon29	access:public
NVIC_IRQChannelSubPriority	inc/misc.h	/^  uint8_t NVIC_IRQChannelSubPriority;         \/*!< Specifies the subpriority level for the IRQ channel specified$/;"	m	struct:__anon29	access:public
NVIC_Init	inc/misc.h	/^void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct);$/;"	p	signature:(NVIC_InitTypeDef* NVIC_InitStruct)
NVIC_Init	src/misc.c	/^void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)$/;"	f	signature:(NVIC_InitTypeDef* NVIC_InitStruct)
NVIC_InitTypeDef	inc/misc.h	/^} NVIC_InitTypeDef;$/;"	t	typeref:struct:__anon29
NVIC_LP_SEVONPEND	inc/misc.h	126;"	d
NVIC_LP_SLEEPDEEP	inc/misc.h	127;"	d
NVIC_LP_SLEEPONEXIT	inc/misc.h	128;"	d
NVIC_PriorityGroupConfig	inc/misc.h	/^void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup);$/;"	p	signature:(uint32_t NVIC_PriorityGroup)
NVIC_PriorityGroupConfig	src/misc.c	/^void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)$/;"	f	signature:(uint32_t NVIC_PriorityGroup)
NVIC_PriorityGroup_0	inc/misc.h	140;"	d
NVIC_PriorityGroup_1	inc/misc.h	142;"	d
NVIC_PriorityGroup_2	inc/misc.h	144;"	d
NVIC_PriorityGroup_3	inc/misc.h	146;"	d
NVIC_PriorityGroup_4	inc/misc.h	148;"	d
NVIC_SetVectorTable	inc/misc.h	/^void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset);$/;"	p	signature:(uint32_t NVIC_VectTab, uint32_t Offset)
NVIC_SetVectorTable	src/misc.c	/^void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)$/;"	f	signature:(uint32_t NVIC_VectTab, uint32_t Offset)
NVIC_SystemLPConfig	inc/misc.h	/^void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState);$/;"	p	signature:(uint8_t LowPowerMode, FunctionalState NewState)
NVIC_SystemLPConfig	src/misc.c	/^void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState)$/;"	f	signature:(uint8_t LowPowerMode, FunctionalState NewState)
NVIC_VectTab_FLASH	inc/misc.h	115;"	d
NVIC_VectTab_RAM	inc/misc.h	114;"	d
OAR1_ADD0_Reset	src/stm32f10x_i2c.c	103;"	d	file:
OAR1_ADD0_Set	src/stm32f10x_i2c.c	102;"	d	file:
OAR2_ADD2_Reset	src/stm32f10x_i2c.c	110;"	d	file:
OAR2_ENDUAL_Reset	src/stm32f10x_i2c.c	107;"	d	file:
OAR2_ENDUAL_Set	src/stm32f10x_i2c.c	106;"	d	file:
OB_IWDG_HW	inc/stm32f10x_flash.h	228;"	d
OB_IWDG_SW	inc/stm32f10x_flash.h	227;"	d
OB_STDBY_NoRST	inc/stm32f10x_flash.h	251;"	d
OB_STDBY_RST	inc/stm32f10x_flash.h	252;"	d
OB_STOP_NoRST	inc/stm32f10x_flash.h	239;"	d
OB_STOP_RST	inc/stm32f10x_flash.h	240;"	d
OB_USER_BFB2	src/stm32f10x_flash.c	73;"	d	file:
OTGFSPRE_BitNumber	src/stm32f10x_rcc.c	82;"	d	file:
PCLK1_Frequency	inc/stm32f10x_rcc.h	/^  uint32_t PCLK1_Frequency;   \/*!< returns PCLK1 clock frequency expressed in Hz *\/$/;"	m	struct:__anon31	access:public
PCLK2_Frequency	inc/stm32f10x_rcc.h	/^  uint32_t PCLK2_Frequency;   \/*!< returns PCLK2 clock frequency expressed in Hz *\/$/;"	m	struct:__anon31	access:public
PCR_ECCEN_Reset	src/stm32f10x_fsmc.c	56;"	d	file:
PCR_ECCEN_Set	src/stm32f10x_fsmc.c	55;"	d	file:
PCR_MemoryType_NAND	src/stm32f10x_fsmc.c	57;"	d	file:
PCR_PBKEN_Reset	src/stm32f10x_fsmc.c	54;"	d	file:
PCR_PBKEN_Set	src/stm32f10x_fsmc.c	53;"	d	file:
PE_BitNumber	src/stm32f10x_cec.c	54;"	d	file:
PLL2ON_BitNumber	src/stm32f10x_rcc.c	61;"	d	file:
PLL3ON_BitNumber	src/stm32f10x_rcc.c	65;"	d	file:
PLLON_BitNumber	src/stm32f10x_rcc.c	56;"	d	file:
PRLH_MSB_Mask	src/stm32f10x_rtc.c	47;"	d	file:
PVDE_BitNumber	src/stm32f10x_pwr.c	57;"	d	file:
PWR_BackupAccessCmd	inc/stm32f10x_pwr.h	/^void PWR_BackupAccessCmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
PWR_BackupAccessCmd	src/stm32f10x_pwr.c	/^void PWR_BackupAccessCmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
PWR_ClearFlag	inc/stm32f10x_pwr.h	/^void PWR_ClearFlag(uint32_t PWR_FLAG);$/;"	p	signature:(uint32_t PWR_FLAG)
PWR_ClearFlag	src/stm32f10x_pwr.c	/^void PWR_ClearFlag(uint32_t PWR_FLAG)$/;"	f	signature:(uint32_t PWR_FLAG)
PWR_DeInit	inc/stm32f10x_pwr.h	/^void PWR_DeInit(void);$/;"	p	signature:(void)
PWR_DeInit	src/stm32f10x_pwr.c	/^void PWR_DeInit(void)$/;"	f	signature:(void)
PWR_EnterSTANDBYMode	inc/stm32f10x_pwr.h	/^void PWR_EnterSTANDBYMode(void);$/;"	p	signature:(void)
PWR_EnterSTANDBYMode	src/stm32f10x_pwr.c	/^void PWR_EnterSTANDBYMode(void)$/;"	f	signature:(void)
PWR_EnterSTOPMode	inc/stm32f10x_pwr.h	/^void PWR_EnterSTOPMode(uint32_t PWR_Regulator, uint8_t PWR_STOPEntry);$/;"	p	signature:(uint32_t PWR_Regulator, uint8_t PWR_STOPEntry)
PWR_EnterSTOPMode	src/stm32f10x_pwr.c	/^void PWR_EnterSTOPMode(uint32_t PWR_Regulator, uint8_t PWR_STOPEntry)$/;"	f	signature:(uint32_t PWR_Regulator, uint8_t PWR_STOPEntry)
PWR_FLAG_PVDO	inc/stm32f10x_pwr.h	103;"	d
PWR_FLAG_SB	inc/stm32f10x_pwr.h	102;"	d
PWR_FLAG_WU	inc/stm32f10x_pwr.h	101;"	d
PWR_GetFlagStatus	inc/stm32f10x_pwr.h	/^FlagStatus PWR_GetFlagStatus(uint32_t PWR_FLAG);$/;"	p	signature:(uint32_t PWR_FLAG)
PWR_GetFlagStatus	src/stm32f10x_pwr.c	/^FlagStatus PWR_GetFlagStatus(uint32_t PWR_FLAG)$/;"	f	signature:(uint32_t PWR_FLAG)
PWR_OFFSET	src/stm32f10x_pwr.c	47;"	d	file:
PWR_PVDCmd	inc/stm32f10x_pwr.h	/^void PWR_PVDCmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
PWR_PVDCmd	src/stm32f10x_pwr.c	/^void PWR_PVDCmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
PWR_PVDLevelConfig	inc/stm32f10x_pwr.h	/^void PWR_PVDLevelConfig(uint32_t PWR_PVDLevel);$/;"	p	signature:(uint32_t PWR_PVDLevel)
PWR_PVDLevelConfig	src/stm32f10x_pwr.c	/^void PWR_PVDLevelConfig(uint32_t PWR_PVDLevel)$/;"	f	signature:(uint32_t PWR_PVDLevel)
PWR_PVDLevel_2V2	inc/stm32f10x_pwr.h	57;"	d
PWR_PVDLevel_2V3	inc/stm32f10x_pwr.h	58;"	d
PWR_PVDLevel_2V4	inc/stm32f10x_pwr.h	59;"	d
PWR_PVDLevel_2V5	inc/stm32f10x_pwr.h	60;"	d
PWR_PVDLevel_2V6	inc/stm32f10x_pwr.h	61;"	d
PWR_PVDLevel_2V7	inc/stm32f10x_pwr.h	62;"	d
PWR_PVDLevel_2V8	inc/stm32f10x_pwr.h	63;"	d
PWR_PVDLevel_2V9	inc/stm32f10x_pwr.h	64;"	d
PWR_PWRCTRL_MASK	src/stm32f10x_sdio.c	100;"	d	file:
PWR_Regulator_LowPower	inc/stm32f10x_pwr.h	78;"	d
PWR_Regulator_ON	inc/stm32f10x_pwr.h	77;"	d
PWR_STOPEntry_WFE	inc/stm32f10x_pwr.h	90;"	d
PWR_STOPEntry_WFI	inc/stm32f10x_pwr.h	89;"	d
PWR_WakeUpPinCmd	inc/stm32f10x_pwr.h	/^void PWR_WakeUpPinCmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
PWR_WakeUpPinCmd	src/stm32f10x_pwr.c	/^void PWR_WakeUpPinCmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
ProgramTimeout	src/stm32f10x_flash.c	85;"	d	file:
RCC_ADCCLKConfig	inc/stm32f10x_rcc.h	/^void RCC_ADCCLKConfig(uint32_t RCC_PCLK2);$/;"	p	signature:(uint32_t RCC_PCLK2)
RCC_ADCCLKConfig	src/stm32f10x_rcc.c	/^void RCC_ADCCLKConfig(uint32_t RCC_PCLK2)$/;"	f	signature:(uint32_t RCC_PCLK2)
RCC_AHBPeriphClockCmd	inc/stm32f10x_rcc.h	/^void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState);$/;"	p	signature:(uint32_t RCC_AHBPeriph, FunctionalState NewState)
RCC_AHBPeriphClockCmd	src/stm32f10x_rcc.c	/^void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)$/;"	f	signature:(uint32_t RCC_AHBPeriph, FunctionalState NewState)
RCC_AHBPeriphResetCmd	inc/stm32f10x_rcc.h	/^void RCC_AHBPeriphResetCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState);$/;"	p	signature:(uint32_t RCC_AHBPeriph, FunctionalState NewState)
RCC_AHBPeriphResetCmd	src/stm32f10x_rcc.c	/^void RCC_AHBPeriphResetCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)$/;"	f	signature:(uint32_t RCC_AHBPeriph, FunctionalState NewState)
RCC_AHBPeriph_CRC	inc/stm32f10x_rcc.h	473;"	d
RCC_AHBPeriph_DMA1	inc/stm32f10x_rcc.h	469;"	d
RCC_AHBPeriph_DMA2	inc/stm32f10x_rcc.h	470;"	d
RCC_AHBPeriph_ETH_MAC	inc/stm32f10x_rcc.h	481;"	d
RCC_AHBPeriph_ETH_MAC_Rx	inc/stm32f10x_rcc.h	483;"	d
RCC_AHBPeriph_ETH_MAC_Tx	inc/stm32f10x_rcc.h	482;"	d
RCC_AHBPeriph_FLITF	inc/stm32f10x_rcc.h	472;"	d
RCC_AHBPeriph_FSMC	inc/stm32f10x_rcc.h	476;"	d
RCC_AHBPeriph_OTG_FS	inc/stm32f10x_rcc.h	480;"	d
RCC_AHBPeriph_SDIO	inc/stm32f10x_rcc.h	477;"	d
RCC_AHBPeriph_SRAM	inc/stm32f10x_rcc.h	471;"	d
RCC_APB1PeriphClockCmd	inc/stm32f10x_rcc.h	/^void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState);$/;"	p	signature:(uint32_t RCC_APB1Periph, FunctionalState NewState)
RCC_APB1PeriphClockCmd	src/stm32f10x_rcc.c	/^void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)$/;"	f	signature:(uint32_t RCC_APB1Periph, FunctionalState NewState)
RCC_APB1PeriphResetCmd	inc/stm32f10x_rcc.h	/^void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState);$/;"	p	signature:(uint32_t RCC_APB1Periph, FunctionalState NewState)
RCC_APB1PeriphResetCmd	src/stm32f10x_rcc.c	/^void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)$/;"	f	signature:(uint32_t RCC_APB1Periph, FunctionalState NewState)
RCC_APB1Periph_BKP	inc/stm32f10x_rcc.h	548;"	d
RCC_APB1Periph_CAN1	inc/stm32f10x_rcc.h	546;"	d
RCC_APB1Periph_CAN2	inc/stm32f10x_rcc.h	547;"	d
RCC_APB1Periph_CEC	inc/stm32f10x_rcc.h	551;"	d
RCC_APB1Periph_DAC	inc/stm32f10x_rcc.h	550;"	d
RCC_APB1Periph_I2C1	inc/stm32f10x_rcc.h	543;"	d
RCC_APB1Periph_I2C2	inc/stm32f10x_rcc.h	544;"	d
RCC_APB1Periph_PWR	inc/stm32f10x_rcc.h	549;"	d
RCC_APB1Periph_SPI2	inc/stm32f10x_rcc.h	537;"	d
RCC_APB1Periph_SPI3	inc/stm32f10x_rcc.h	538;"	d
RCC_APB1Periph_TIM12	inc/stm32f10x_rcc.h	533;"	d
RCC_APB1Periph_TIM13	inc/stm32f10x_rcc.h	534;"	d
RCC_APB1Periph_TIM14	inc/stm32f10x_rcc.h	535;"	d
RCC_APB1Periph_TIM2	inc/stm32f10x_rcc.h	527;"	d
RCC_APB1Periph_TIM3	inc/stm32f10x_rcc.h	528;"	d
RCC_APB1Periph_TIM4	inc/stm32f10x_rcc.h	529;"	d
RCC_APB1Periph_TIM5	inc/stm32f10x_rcc.h	530;"	d
RCC_APB1Periph_TIM6	inc/stm32f10x_rcc.h	531;"	d
RCC_APB1Periph_TIM7	inc/stm32f10x_rcc.h	532;"	d
RCC_APB1Periph_UART4	inc/stm32f10x_rcc.h	541;"	d
RCC_APB1Periph_UART5	inc/stm32f10x_rcc.h	542;"	d
RCC_APB1Periph_USART2	inc/stm32f10x_rcc.h	539;"	d
RCC_APB1Periph_USART3	inc/stm32f10x_rcc.h	540;"	d
RCC_APB1Periph_USB	inc/stm32f10x_rcc.h	545;"	d
RCC_APB1Periph_WWDG	inc/stm32f10x_rcc.h	536;"	d
RCC_APB2PeriphClockCmd	inc/stm32f10x_rcc.h	/^void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState);$/;"	p	signature:(uint32_t RCC_APB2Periph, FunctionalState NewState)
RCC_APB2PeriphClockCmd	src/stm32f10x_rcc.c	/^void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)$/;"	f	signature:(uint32_t RCC_APB2Periph, FunctionalState NewState)
RCC_APB2PeriphResetCmd	inc/stm32f10x_rcc.h	/^void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState);$/;"	p	signature:(uint32_t RCC_APB2Periph, FunctionalState NewState)
RCC_APB2PeriphResetCmd	src/stm32f10x_rcc.c	/^void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)$/;"	f	signature:(uint32_t RCC_APB2Periph, FunctionalState NewState)
RCC_APB2Periph_ADC1	inc/stm32f10x_rcc.h	504;"	d
RCC_APB2Periph_ADC2	inc/stm32f10x_rcc.h	505;"	d
RCC_APB2Periph_ADC3	inc/stm32f10x_rcc.h	510;"	d
RCC_APB2Periph_AFIO	inc/stm32f10x_rcc.h	496;"	d
RCC_APB2Periph_GPIOA	inc/stm32f10x_rcc.h	497;"	d
RCC_APB2Periph_GPIOB	inc/stm32f10x_rcc.h	498;"	d
RCC_APB2Periph_GPIOC	inc/stm32f10x_rcc.h	499;"	d
RCC_APB2Periph_GPIOD	inc/stm32f10x_rcc.h	500;"	d
RCC_APB2Periph_GPIOE	inc/stm32f10x_rcc.h	501;"	d
RCC_APB2Periph_GPIOF	inc/stm32f10x_rcc.h	502;"	d
RCC_APB2Periph_GPIOG	inc/stm32f10x_rcc.h	503;"	d
RCC_APB2Periph_SPI1	inc/stm32f10x_rcc.h	507;"	d
RCC_APB2Periph_TIM1	inc/stm32f10x_rcc.h	506;"	d
RCC_APB2Periph_TIM10	inc/stm32f10x_rcc.h	515;"	d
RCC_APB2Periph_TIM11	inc/stm32f10x_rcc.h	516;"	d
RCC_APB2Periph_TIM15	inc/stm32f10x_rcc.h	511;"	d
RCC_APB2Periph_TIM16	inc/stm32f10x_rcc.h	512;"	d
RCC_APB2Periph_TIM17	inc/stm32f10x_rcc.h	513;"	d
RCC_APB2Periph_TIM8	inc/stm32f10x_rcc.h	508;"	d
RCC_APB2Periph_TIM9	inc/stm32f10x_rcc.h	514;"	d
RCC_APB2Periph_USART1	inc/stm32f10x_rcc.h	509;"	d
RCC_AdjustHSICalibrationValue	inc/stm32f10x_rcc.h	/^void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue);$/;"	p	signature:(uint8_t HSICalibrationValue)
RCC_AdjustHSICalibrationValue	src/stm32f10x_rcc.c	/^void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)$/;"	f	signature:(uint8_t HSICalibrationValue)
RCC_BackupResetCmd	inc/stm32f10x_rcc.h	/^void RCC_BackupResetCmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
RCC_BackupResetCmd	src/stm32f10x_rcc.c	/^void RCC_BackupResetCmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
RCC_ClearFlag	inc/stm32f10x_rcc.h	/^void RCC_ClearFlag(void);$/;"	p	signature:(void)
RCC_ClearFlag	src/stm32f10x_rcc.c	/^void RCC_ClearFlag(void)$/;"	f	signature:(void)
RCC_ClearITPendingBit	inc/stm32f10x_rcc.h	/^void RCC_ClearITPendingBit(uint8_t RCC_IT);$/;"	p	signature:(uint8_t RCC_IT)
RCC_ClearITPendingBit	src/stm32f10x_rcc.c	/^void RCC_ClearITPendingBit(uint8_t RCC_IT)$/;"	f	signature:(uint8_t RCC_IT)
RCC_ClockSecuritySystemCmd	inc/stm32f10x_rcc.h	/^void RCC_ClockSecuritySystemCmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
RCC_ClockSecuritySystemCmd	src/stm32f10x_rcc.c	/^void RCC_ClockSecuritySystemCmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
RCC_ClocksTypeDef	inc/stm32f10x_rcc.h	/^}RCC_ClocksTypeDef;$/;"	t	typeref:struct:__anon31
RCC_DeInit	inc/stm32f10x_rcc.h	/^void RCC_DeInit(void);$/;"	p	signature:(void)
RCC_DeInit	src/stm32f10x_rcc.c	/^void RCC_DeInit(void)$/;"	f	signature:(void)
RCC_FLAG_HSERDY	inc/stm32f10x_rcc.h	595;"	d
RCC_FLAG_HSIRDY	inc/stm32f10x_rcc.h	594;"	d
RCC_FLAG_IWDGRST	inc/stm32f10x_rcc.h	602;"	d
RCC_FLAG_LPWRRST	inc/stm32f10x_rcc.h	604;"	d
RCC_FLAG_LSERDY	inc/stm32f10x_rcc.h	597;"	d
RCC_FLAG_LSIRDY	inc/stm32f10x_rcc.h	598;"	d
RCC_FLAG_PINRST	inc/stm32f10x_rcc.h	599;"	d
RCC_FLAG_PLL2RDY	inc/stm32f10x_rcc.h	614;"	d
RCC_FLAG_PLL3RDY	inc/stm32f10x_rcc.h	615;"	d
RCC_FLAG_PLLRDY	inc/stm32f10x_rcc.h	596;"	d
RCC_FLAG_PORRST	inc/stm32f10x_rcc.h	600;"	d
RCC_FLAG_SFTRST	inc/stm32f10x_rcc.h	601;"	d
RCC_FLAG_WWDGRST	inc/stm32f10x_rcc.h	603;"	d
RCC_GetClocksFreq	inc/stm32f10x_rcc.h	/^void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks);$/;"	p	signature:(RCC_ClocksTypeDef* RCC_Clocks)
RCC_GetClocksFreq	src/stm32f10x_rcc.c	/^void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)$/;"	f	signature:(RCC_ClocksTypeDef* RCC_Clocks)
RCC_GetFlagStatus	inc/stm32f10x_rcc.h	/^FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG);$/;"	p	signature:(uint8_t RCC_FLAG)
RCC_GetFlagStatus	src/stm32f10x_rcc.c	/^FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)$/;"	f	signature:(uint8_t RCC_FLAG)
RCC_GetITStatus	inc/stm32f10x_rcc.h	/^ITStatus RCC_GetITStatus(uint8_t RCC_IT);$/;"	p	signature:(uint8_t RCC_IT)
RCC_GetITStatus	src/stm32f10x_rcc.c	/^ITStatus RCC_GetITStatus(uint8_t RCC_IT)$/;"	f	signature:(uint8_t RCC_IT)
RCC_GetSYSCLKSource	inc/stm32f10x_rcc.h	/^uint8_t RCC_GetSYSCLKSource(void);$/;"	p	signature:(void)
RCC_GetSYSCLKSource	src/stm32f10x_rcc.c	/^uint8_t RCC_GetSYSCLKSource(void)$/;"	f	signature:(void)
RCC_HCLKConfig	inc/stm32f10x_rcc.h	/^void RCC_HCLKConfig(uint32_t RCC_SYSCLK);$/;"	p	signature:(uint32_t RCC_SYSCLK)
RCC_HCLKConfig	src/stm32f10x_rcc.c	/^void RCC_HCLKConfig(uint32_t RCC_SYSCLK)$/;"	f	signature:(uint32_t RCC_SYSCLK)
RCC_HCLK_Div1	inc/stm32f10x_rcc.h	324;"	d
RCC_HCLK_Div16	inc/stm32f10x_rcc.h	328;"	d
RCC_HCLK_Div2	inc/stm32f10x_rcc.h	325;"	d
RCC_HCLK_Div4	inc/stm32f10x_rcc.h	326;"	d
RCC_HCLK_Div8	inc/stm32f10x_rcc.h	327;"	d
RCC_HSEConfig	inc/stm32f10x_rcc.h	/^void RCC_HSEConfig(uint32_t RCC_HSE);$/;"	p	signature:(uint32_t RCC_HSE)
RCC_HSEConfig	src/stm32f10x_rcc.c	/^void RCC_HSEConfig(uint32_t RCC_HSE)$/;"	f	signature:(uint32_t RCC_HSE)
RCC_HSE_Bypass	inc/stm32f10x_rcc.h	68;"	d
RCC_HSE_OFF	inc/stm32f10x_rcc.h	66;"	d
RCC_HSE_ON	inc/stm32f10x_rcc.h	67;"	d
RCC_HSICmd	inc/stm32f10x_rcc.h	/^void RCC_HSICmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
RCC_HSICmd	src/stm32f10x_rcc.c	/^void RCC_HSICmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
RCC_I2S2CLKConfig	inc/stm32f10x_rcc.h	/^ void RCC_I2S2CLKConfig(uint32_t RCC_I2S2CLKSource);                                  $/;"	p	signature:(uint32_t RCC_I2S2CLKSource)
RCC_I2S2CLKConfig	src/stm32f10x_rcc.c	/^void RCC_I2S2CLKConfig(uint32_t RCC_I2S2CLKSource)$/;"	f	signature:(uint32_t RCC_I2S2CLKSource)
RCC_I2S2CLKSource_PLL3_VCO	inc/stm32f10x_rcc.h	402;"	d
RCC_I2S2CLKSource_SYSCLK	inc/stm32f10x_rcc.h	401;"	d
RCC_I2S3CLKConfig	inc/stm32f10x_rcc.h	/^ void RCC_I2S3CLKConfig(uint32_t RCC_I2S3CLKSource);$/;"	p	signature:(uint32_t RCC_I2S3CLKSource)
RCC_I2S3CLKConfig	src/stm32f10x_rcc.c	/^void RCC_I2S3CLKConfig(uint32_t RCC_I2S3CLKSource)$/;"	f	signature:(uint32_t RCC_I2S3CLKSource)
RCC_I2S3CLKSource_PLL3_VCO	inc/stm32f10x_rcc.h	414;"	d
RCC_I2S3CLKSource_SYSCLK	inc/stm32f10x_rcc.h	413;"	d
RCC_ITConfig	inc/stm32f10x_rcc.h	/^void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState);$/;"	p	signature:(uint8_t RCC_IT, FunctionalState NewState)
RCC_ITConfig	src/stm32f10x_rcc.c	/^void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)$/;"	f	signature:(uint8_t RCC_IT, FunctionalState NewState)
RCC_IT_CSS	inc/stm32f10x_rcc.h	345;"	d
RCC_IT_HSERDY	inc/stm32f10x_rcc.h	343;"	d
RCC_IT_HSIRDY	inc/stm32f10x_rcc.h	342;"	d
RCC_IT_LSERDY	inc/stm32f10x_rcc.h	341;"	d
RCC_IT_LSIRDY	inc/stm32f10x_rcc.h	340;"	d
RCC_IT_PLL2RDY	inc/stm32f10x_rcc.h	354;"	d
RCC_IT_PLL3RDY	inc/stm32f10x_rcc.h	355;"	d
RCC_IT_PLLRDY	inc/stm32f10x_rcc.h	344;"	d
RCC_LSEConfig	inc/stm32f10x_rcc.h	/^void RCC_LSEConfig(uint8_t RCC_LSE);$/;"	p	signature:(uint8_t RCC_LSE)
RCC_LSEConfig	src/stm32f10x_rcc.c	/^void RCC_LSEConfig(uint8_t RCC_LSE)$/;"	f	signature:(uint8_t RCC_LSE)
RCC_LSE_Bypass	inc/stm32f10x_rcc.h	444;"	d
RCC_LSE_OFF	inc/stm32f10x_rcc.h	442;"	d
RCC_LSE_ON	inc/stm32f10x_rcc.h	443;"	d
RCC_LSICmd	inc/stm32f10x_rcc.h	/^void RCC_LSICmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
RCC_LSICmd	src/stm32f10x_rcc.c	/^void RCC_LSICmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
RCC_MCOConfig	inc/stm32f10x_rcc.h	/^void RCC_MCOConfig(uint8_t RCC_MCO);$/;"	p	signature:(uint8_t RCC_MCO)
RCC_MCOConfig	src/stm32f10x_rcc.c	/^void RCC_MCOConfig(uint8_t RCC_MCO)$/;"	f	signature:(uint8_t RCC_MCO)
RCC_MCO_HSE	inc/stm32f10x_rcc.h	566;"	d
RCC_MCO_HSI	inc/stm32f10x_rcc.h	565;"	d
RCC_MCO_NoClock	inc/stm32f10x_rcc.h	563;"	d
RCC_MCO_PLL2CLK	inc/stm32f10x_rcc.h	574;"	d
RCC_MCO_PLL3CLK	inc/stm32f10x_rcc.h	577;"	d
RCC_MCO_PLL3CLK_Div2	inc/stm32f10x_rcc.h	575;"	d
RCC_MCO_PLLCLK_Div2	inc/stm32f10x_rcc.h	567;"	d
RCC_MCO_SYSCLK	inc/stm32f10x_rcc.h	564;"	d
RCC_MCO_XT1	inc/stm32f10x_rcc.h	576;"	d
RCC_OFFSET	src/stm32f10x_rcc.c	46;"	d	file:
RCC_OTGFSCLKConfig	inc/stm32f10x_rcc.h	/^ void RCC_OTGFSCLKConfig(uint32_t RCC_OTGFSCLKSource);$/;"	p	signature:(uint32_t RCC_OTGFSCLKSource)
RCC_OTGFSCLKConfig	src/stm32f10x_rcc.c	/^void RCC_OTGFSCLKConfig(uint32_t RCC_OTGFSCLKSource)$/;"	f	signature:(uint32_t RCC_OTGFSCLKSource)
RCC_OTGFSCLKSource_PLLVCO_Div2	inc/stm32f10x_rcc.h	387;"	d
RCC_OTGFSCLKSource_PLLVCO_Div3	inc/stm32f10x_rcc.h	386;"	d
RCC_PCLK1Config	inc/stm32f10x_rcc.h	/^void RCC_PCLK1Config(uint32_t RCC_HCLK);$/;"	p	signature:(uint32_t RCC_HCLK)
RCC_PCLK1Config	src/stm32f10x_rcc.c	/^void RCC_PCLK1Config(uint32_t RCC_HCLK)$/;"	f	signature:(uint32_t RCC_HCLK)
RCC_PCLK2Config	inc/stm32f10x_rcc.h	/^void RCC_PCLK2Config(uint32_t RCC_HCLK);$/;"	p	signature:(uint32_t RCC_HCLK)
RCC_PCLK2Config	src/stm32f10x_rcc.c	/^void RCC_PCLK2Config(uint32_t RCC_HCLK)$/;"	f	signature:(uint32_t RCC_HCLK)
RCC_PCLK2_Div2	inc/stm32f10x_rcc.h	428;"	d
RCC_PCLK2_Div4	inc/stm32f10x_rcc.h	429;"	d
RCC_PCLK2_Div6	inc/stm32f10x_rcc.h	430;"	d
RCC_PCLK2_Div8	inc/stm32f10x_rcc.h	431;"	d
RCC_PLL2Cmd	inc/stm32f10x_rcc.h	/^ void RCC_PLL2Cmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
RCC_PLL2Cmd	src/stm32f10x_rcc.c	/^void RCC_PLL2Cmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
RCC_PLL2Config	inc/stm32f10x_rcc.h	/^ void RCC_PLL2Config(uint32_t RCC_PLL2Mul);$/;"	p	signature:(uint32_t RCC_PLL2Mul)
RCC_PLL2Config	src/stm32f10x_rcc.c	/^void RCC_PLL2Config(uint32_t RCC_PLL2Mul)$/;"	f	signature:(uint32_t RCC_PLL2Mul)
RCC_PLL2Mul_10	inc/stm32f10x_rcc.h	240;"	d
RCC_PLL2Mul_11	inc/stm32f10x_rcc.h	241;"	d
RCC_PLL2Mul_12	inc/stm32f10x_rcc.h	242;"	d
RCC_PLL2Mul_13	inc/stm32f10x_rcc.h	243;"	d
RCC_PLL2Mul_14	inc/stm32f10x_rcc.h	244;"	d
RCC_PLL2Mul_16	inc/stm32f10x_rcc.h	245;"	d
RCC_PLL2Mul_20	inc/stm32f10x_rcc.h	246;"	d
RCC_PLL2Mul_8	inc/stm32f10x_rcc.h	238;"	d
RCC_PLL2Mul_9	inc/stm32f10x_rcc.h	239;"	d
RCC_PLL3Cmd	inc/stm32f10x_rcc.h	/^ void RCC_PLL3Cmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
RCC_PLL3Cmd	src/stm32f10x_rcc.c	/^void RCC_PLL3Cmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
RCC_PLL3Config	inc/stm32f10x_rcc.h	/^ void RCC_PLL3Config(uint32_t RCC_PLL3Mul);$/;"	p	signature:(uint32_t RCC_PLL3Mul)
RCC_PLL3Config	src/stm32f10x_rcc.c	/^void RCC_PLL3Config(uint32_t RCC_PLL3Mul)$/;"	f	signature:(uint32_t RCC_PLL3Mul)
RCC_PLL3Mul_10	inc/stm32f10x_rcc.h	264;"	d
RCC_PLL3Mul_11	inc/stm32f10x_rcc.h	265;"	d
RCC_PLL3Mul_12	inc/stm32f10x_rcc.h	266;"	d
RCC_PLL3Mul_13	inc/stm32f10x_rcc.h	267;"	d
RCC_PLL3Mul_14	inc/stm32f10x_rcc.h	268;"	d
RCC_PLL3Mul_16	inc/stm32f10x_rcc.h	269;"	d
RCC_PLL3Mul_20	inc/stm32f10x_rcc.h	270;"	d
RCC_PLL3Mul_8	inc/stm32f10x_rcc.h	262;"	d
RCC_PLL3Mul_9	inc/stm32f10x_rcc.h	263;"	d
RCC_PLLCmd	inc/stm32f10x_rcc.h	/^void RCC_PLLCmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
RCC_PLLCmd	src/stm32f10x_rcc.c	/^void RCC_PLLCmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
RCC_PLLConfig	inc/stm32f10x_rcc.h	/^void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul);$/;"	p	signature:(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)
RCC_PLLConfig	src/stm32f10x_rcc.c	/^void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)$/;"	f	signature:(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)
RCC_PLLMul_10	inc/stm32f10x_rcc.h	110;"	d
RCC_PLLMul_11	inc/stm32f10x_rcc.h	111;"	d
RCC_PLLMul_12	inc/stm32f10x_rcc.h	112;"	d
RCC_PLLMul_13	inc/stm32f10x_rcc.h	113;"	d
RCC_PLLMul_14	inc/stm32f10x_rcc.h	114;"	d
RCC_PLLMul_15	inc/stm32f10x_rcc.h	115;"	d
RCC_PLLMul_16	inc/stm32f10x_rcc.h	116;"	d
RCC_PLLMul_2	inc/stm32f10x_rcc.h	102;"	d
RCC_PLLMul_3	inc/stm32f10x_rcc.h	103;"	d
RCC_PLLMul_4	inc/stm32f10x_rcc.h	104;"	d
RCC_PLLMul_4	inc/stm32f10x_rcc.h	127;"	d
RCC_PLLMul_5	inc/stm32f10x_rcc.h	105;"	d
RCC_PLLMul_5	inc/stm32f10x_rcc.h	128;"	d
RCC_PLLMul_6	inc/stm32f10x_rcc.h	106;"	d
RCC_PLLMul_6	inc/stm32f10x_rcc.h	129;"	d
RCC_PLLMul_6_5	inc/stm32f10x_rcc.h	133;"	d
RCC_PLLMul_7	inc/stm32f10x_rcc.h	107;"	d
RCC_PLLMul_7	inc/stm32f10x_rcc.h	130;"	d
RCC_PLLMul_8	inc/stm32f10x_rcc.h	108;"	d
RCC_PLLMul_8	inc/stm32f10x_rcc.h	131;"	d
RCC_PLLMul_9	inc/stm32f10x_rcc.h	109;"	d
RCC_PLLMul_9	inc/stm32f10x_rcc.h	132;"	d
RCC_PLLSource_HSE_Div1	inc/stm32f10x_rcc.h	83;"	d
RCC_PLLSource_HSE_Div2	inc/stm32f10x_rcc.h	84;"	d
RCC_PLLSource_HSI_Div2	inc/stm32f10x_rcc.h	80;"	d
RCC_PLLSource_PREDIV1	inc/stm32f10x_rcc.h	89;"	d
RCC_PREDIV1Config	inc/stm32f10x_rcc.h	/^ void RCC_PREDIV1Config(uint32_t RCC_PREDIV1_Source, uint32_t RCC_PREDIV1_Div);$/;"	p	signature:(uint32_t RCC_PREDIV1_Source, uint32_t RCC_PREDIV1_Div)
RCC_PREDIV1Config	src/stm32f10x_rcc.c	/^void RCC_PREDIV1Config(uint32_t RCC_PREDIV1_Source, uint32_t RCC_PREDIV1_Div)$/;"	f	signature:(uint32_t RCC_PREDIV1_Source, uint32_t RCC_PREDIV1_Div)
RCC_PREDIV1_Div1	inc/stm32f10x_rcc.h	148;"	d
RCC_PREDIV1_Div10	inc/stm32f10x_rcc.h	157;"	d
RCC_PREDIV1_Div11	inc/stm32f10x_rcc.h	158;"	d
RCC_PREDIV1_Div12	inc/stm32f10x_rcc.h	159;"	d
RCC_PREDIV1_Div13	inc/stm32f10x_rcc.h	160;"	d
RCC_PREDIV1_Div14	inc/stm32f10x_rcc.h	161;"	d
RCC_PREDIV1_Div15	inc/stm32f10x_rcc.h	162;"	d
RCC_PREDIV1_Div16	inc/stm32f10x_rcc.h	163;"	d
RCC_PREDIV1_Div2	inc/stm32f10x_rcc.h	149;"	d
RCC_PREDIV1_Div3	inc/stm32f10x_rcc.h	150;"	d
RCC_PREDIV1_Div4	inc/stm32f10x_rcc.h	151;"	d
RCC_PREDIV1_Div5	inc/stm32f10x_rcc.h	152;"	d
RCC_PREDIV1_Div6	inc/stm32f10x_rcc.h	153;"	d
RCC_PREDIV1_Div7	inc/stm32f10x_rcc.h	154;"	d
RCC_PREDIV1_Div8	inc/stm32f10x_rcc.h	155;"	d
RCC_PREDIV1_Div9	inc/stm32f10x_rcc.h	156;"	d
RCC_PREDIV1_Source_HSE	inc/stm32f10x_rcc.h	184;"	d
RCC_PREDIV1_Source_HSE	inc/stm32f10x_rcc.h	191;"	d
RCC_PREDIV1_Source_PLL2	inc/stm32f10x_rcc.h	185;"	d
RCC_PREDIV2Config	inc/stm32f10x_rcc.h	/^ void RCC_PREDIV2Config(uint32_t RCC_PREDIV2_Div);$/;"	p	signature:(uint32_t RCC_PREDIV2_Div)
RCC_PREDIV2Config	src/stm32f10x_rcc.c	/^void RCC_PREDIV2Config(uint32_t RCC_PREDIV2_Div)$/;"	f	signature:(uint32_t RCC_PREDIV2_Div)
RCC_PREDIV2_Div1	inc/stm32f10x_rcc.h	204;"	d
RCC_PREDIV2_Div10	inc/stm32f10x_rcc.h	213;"	d
RCC_PREDIV2_Div11	inc/stm32f10x_rcc.h	214;"	d
RCC_PREDIV2_Div12	inc/stm32f10x_rcc.h	215;"	d
RCC_PREDIV2_Div13	inc/stm32f10x_rcc.h	216;"	d
RCC_PREDIV2_Div14	inc/stm32f10x_rcc.h	217;"	d
RCC_PREDIV2_Div15	inc/stm32f10x_rcc.h	218;"	d
RCC_PREDIV2_Div16	inc/stm32f10x_rcc.h	219;"	d
RCC_PREDIV2_Div2	inc/stm32f10x_rcc.h	205;"	d
RCC_PREDIV2_Div3	inc/stm32f10x_rcc.h	206;"	d
RCC_PREDIV2_Div4	inc/stm32f10x_rcc.h	207;"	d
RCC_PREDIV2_Div5	inc/stm32f10x_rcc.h	208;"	d
RCC_PREDIV2_Div6	inc/stm32f10x_rcc.h	209;"	d
RCC_PREDIV2_Div7	inc/stm32f10x_rcc.h	210;"	d
RCC_PREDIV2_Div8	inc/stm32f10x_rcc.h	211;"	d
RCC_PREDIV2_Div9	inc/stm32f10x_rcc.h	212;"	d
RCC_RTCCLKCmd	inc/stm32f10x_rcc.h	/^void RCC_RTCCLKCmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
RCC_RTCCLKCmd	src/stm32f10x_rcc.c	/^void RCC_RTCCLKCmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
RCC_RTCCLKConfig	inc/stm32f10x_rcc.h	/^void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource);$/;"	p	signature:(uint32_t RCC_RTCCLKSource)
RCC_RTCCLKConfig	src/stm32f10x_rcc.c	/^void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)$/;"	f	signature:(uint32_t RCC_RTCCLKSource)
RCC_RTCCLKSource_HSE_Div128	inc/stm32f10x_rcc.h	457;"	d
RCC_RTCCLKSource_LSE	inc/stm32f10x_rcc.h	455;"	d
RCC_RTCCLKSource_LSI	inc/stm32f10x_rcc.h	456;"	d
RCC_SYSCLKConfig	inc/stm32f10x_rcc.h	/^void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource);$/;"	p	signature:(uint32_t RCC_SYSCLKSource)
RCC_SYSCLKConfig	src/stm32f10x_rcc.c	/^void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)$/;"	f	signature:(uint32_t RCC_SYSCLKSource)
RCC_SYSCLKSource_HSE	inc/stm32f10x_rcc.h	289;"	d
RCC_SYSCLKSource_HSI	inc/stm32f10x_rcc.h	288;"	d
RCC_SYSCLKSource_PLLCLK	inc/stm32f10x_rcc.h	290;"	d
RCC_SYSCLK_Div1	inc/stm32f10x_rcc.h	302;"	d
RCC_SYSCLK_Div128	inc/stm32f10x_rcc.h	308;"	d
RCC_SYSCLK_Div16	inc/stm32f10x_rcc.h	306;"	d
RCC_SYSCLK_Div2	inc/stm32f10x_rcc.h	303;"	d
RCC_SYSCLK_Div256	inc/stm32f10x_rcc.h	309;"	d
RCC_SYSCLK_Div4	inc/stm32f10x_rcc.h	304;"	d
RCC_SYSCLK_Div512	inc/stm32f10x_rcc.h	310;"	d
RCC_SYSCLK_Div64	inc/stm32f10x_rcc.h	307;"	d
RCC_SYSCLK_Div8	inc/stm32f10x_rcc.h	305;"	d
RCC_USBCLKConfig	inc/stm32f10x_rcc.h	/^ void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource);$/;"	p	signature:(uint32_t RCC_USBCLKSource)
RCC_USBCLKConfig	src/stm32f10x_rcc.c	/^void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource)$/;"	f	signature:(uint32_t RCC_USBCLKSource)
RCC_USBCLKSource_PLLCLK_1Div5	inc/stm32f10x_rcc.h	374;"	d
RCC_USBCLKSource_PLLCLK_Div1	inc/stm32f10x_rcc.h	375;"	d
RCC_WaitForHSEStartUp	inc/stm32f10x_rcc.h	/^ErrorStatus RCC_WaitForHSEStartUp(void);$/;"	p	signature:(void)
RCC_WaitForHSEStartUp	src/stm32f10x_rcc.c	/^ErrorStatus RCC_WaitForHSEStartUp(void)$/;"	f	signature:(void)
RDPRT_Mask	src/stm32f10x_flash.c	68;"	d	file:
RDP_Key	src/stm32f10x_flash.c	76;"	d	file:
RF0R_FOVR0	src/stm32f10x_can.c	79;"	d	file:
RF0R_FULL0	src/stm32f10x_can.c	78;"	d	file:
RF0R_RFOM0	src/stm32f10x_can.c	80;"	d	file:
RF1R_FOVR1	src/stm32f10x_can.c	84;"	d	file:
RF1R_FULL1	src/stm32f10x_can.c	83;"	d	file:
RF1R_RFOM1	src/stm32f10x_can.c	85;"	d	file:
RTCCR_CAL_Mask	src/stm32f10x_bkp.c	78;"	d	file:
RTCCR_Mask	src/stm32f10x_bkp.c	79;"	d	file:
RTCEN_BitNumber	src/stm32f10x_rcc.c	90;"	d	file:
RTC_ClearFlag	inc/stm32f10x_rtc.h	/^void RTC_ClearFlag(uint16_t RTC_FLAG);$/;"	p	signature:(uint16_t RTC_FLAG)
RTC_ClearFlag	src/stm32f10x_rtc.c	/^void RTC_ClearFlag(uint16_t RTC_FLAG)$/;"	f	signature:(uint16_t RTC_FLAG)
RTC_ClearITPendingBit	inc/stm32f10x_rtc.h	/^void RTC_ClearITPendingBit(uint16_t RTC_IT);$/;"	p	signature:(uint16_t RTC_IT)
RTC_ClearITPendingBit	src/stm32f10x_rtc.c	/^void RTC_ClearITPendingBit(uint16_t RTC_IT)$/;"	f	signature:(uint16_t RTC_IT)
RTC_EnterConfigMode	inc/stm32f10x_rtc.h	/^void RTC_EnterConfigMode(void);$/;"	p	signature:(void)
RTC_EnterConfigMode	src/stm32f10x_rtc.c	/^void RTC_EnterConfigMode(void)$/;"	f	signature:(void)
RTC_ExitConfigMode	inc/stm32f10x_rtc.h	/^void RTC_ExitConfigMode(void);$/;"	p	signature:(void)
RTC_ExitConfigMode	src/stm32f10x_rtc.c	/^void RTC_ExitConfigMode(void)$/;"	f	signature:(void)
RTC_FLAG_ALR	inc/stm32f10x_rtc.h	74;"	d
RTC_FLAG_OW	inc/stm32f10x_rtc.h	73;"	d
RTC_FLAG_RSF	inc/stm32f10x_rtc.h	72;"	d
RTC_FLAG_RTOFF	inc/stm32f10x_rtc.h	71;"	d
RTC_FLAG_SEC	inc/stm32f10x_rtc.h	75;"	d
RTC_GetCounter	inc/stm32f10x_rtc.h	/^uint32_t  RTC_GetCounter(void);$/;"	p	signature:(void)
RTC_GetCounter	src/stm32f10x_rtc.c	/^uint32_t RTC_GetCounter(void)$/;"	f	signature:(void)
RTC_GetDivider	inc/stm32f10x_rtc.h	/^uint32_t  RTC_GetDivider(void);$/;"	p	signature:(void)
RTC_GetDivider	src/stm32f10x_rtc.c	/^uint32_t RTC_GetDivider(void)$/;"	f	signature:(void)
RTC_GetFlagStatus	inc/stm32f10x_rtc.h	/^FlagStatus RTC_GetFlagStatus(uint16_t RTC_FLAG);$/;"	p	signature:(uint16_t RTC_FLAG)
RTC_GetFlagStatus	src/stm32f10x_rtc.c	/^FlagStatus RTC_GetFlagStatus(uint16_t RTC_FLAG)$/;"	f	signature:(uint16_t RTC_FLAG)
RTC_GetITStatus	inc/stm32f10x_rtc.h	/^ITStatus RTC_GetITStatus(uint16_t RTC_IT);$/;"	p	signature:(uint16_t RTC_IT)
RTC_GetITStatus	src/stm32f10x_rtc.c	/^ITStatus RTC_GetITStatus(uint16_t RTC_IT)$/;"	f	signature:(uint16_t RTC_IT)
RTC_ITConfig	inc/stm32f10x_rtc.h	/^void RTC_ITConfig(uint16_t RTC_IT, FunctionalState NewState);$/;"	p	signature:(uint16_t RTC_IT, FunctionalState NewState)
RTC_ITConfig	src/stm32f10x_rtc.c	/^void RTC_ITConfig(uint16_t RTC_IT, FunctionalState NewState)$/;"	f	signature:(uint16_t RTC_IT, FunctionalState NewState)
RTC_IT_ALR	inc/stm32f10x_rtc.h	58;"	d
RTC_IT_OW	inc/stm32f10x_rtc.h	57;"	d
RTC_IT_SEC	inc/stm32f10x_rtc.h	59;"	d
RTC_LSB_Mask	src/stm32f10x_rtc.c	46;"	d	file:
RTC_SetAlarm	inc/stm32f10x_rtc.h	/^void RTC_SetAlarm(uint32_t AlarmValue);$/;"	p	signature:(uint32_t AlarmValue)
RTC_SetAlarm	src/stm32f10x_rtc.c	/^void RTC_SetAlarm(uint32_t AlarmValue)$/;"	f	signature:(uint32_t AlarmValue)
RTC_SetCounter	inc/stm32f10x_rtc.h	/^void RTC_SetCounter(uint32_t CounterValue);$/;"	p	signature:(uint32_t CounterValue)
RTC_SetCounter	src/stm32f10x_rtc.c	/^void RTC_SetCounter(uint32_t CounterValue)$/;"	f	signature:(uint32_t CounterValue)
RTC_SetPrescaler	inc/stm32f10x_rtc.h	/^void RTC_SetPrescaler(uint32_t PrescalerValue);$/;"	p	signature:(uint32_t PrescalerValue)
RTC_SetPrescaler	src/stm32f10x_rtc.c	/^void RTC_SetPrescaler(uint32_t PrescalerValue)$/;"	f	signature:(uint32_t PrescalerValue)
RTC_WaitForLastTask	inc/stm32f10x_rtc.h	/^void RTC_WaitForLastTask(void);$/;"	p	signature:(void)
RTC_WaitForLastTask	src/stm32f10x_rtc.c	/^void RTC_WaitForLastTask(void)$/;"	f	signature:(void)
RTC_WaitForSynchro	inc/stm32f10x_rtc.h	/^void RTC_WaitForSynchro(void);$/;"	p	signature:(void)
RTC_WaitForSynchro	src/stm32f10x_rtc.c	/^void RTC_WaitForSynchro(void)$/;"	f	signature:(void)
RTR	inc/stm32f10x_can.h	/^  uint8_t RTR;     \/*!< Specifies the type of frame for the message that will be transmitted.$/;"	m	struct:__anon5	access:public
RTR	inc/stm32f10x_can.h	/^  uint8_t RTR;     \/*!< Specifies the type of frame for the received message.$/;"	m	struct:__anon6	access:public
RWMOD_BitNumber	src/stm32f10x_sdio.c	83;"	d	file:
RWSTART_BitNumber	src/stm32f10x_sdio.c	75;"	d	file:
RWSTOP_BitNumber	src/stm32f10x_sdio.c	79;"	d	file:
SCB_SysCtrl	src/stm32f10x_pwr.c	78;"	d	file:
SDIOEN_BitNumber	src/stm32f10x_sdio.c	87;"	d	file:
SDIOSUSPEND_BitNumber	src/stm32f10x_sdio.c	52;"	d	file:
SDIO_Argument	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_Argument;  \/*!< Specifies the SDIO command argument which is sent$/;"	m	struct:__anon33	access:public
SDIO_BusWide	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_BusWide;              \/*!< Specifies the SDIO bus width.$/;"	m	struct:__anon32	access:public
SDIO_BusWide_1b	inc/stm32f10x_sdio.h	158;"	d
SDIO_BusWide_4b	inc/stm32f10x_sdio.h	159;"	d
SDIO_BusWide_8b	inc/stm32f10x_sdio.h	160;"	d
SDIO_CEATAITCmd	inc/stm32f10x_sdio.h	/^void SDIO_CEATAITCmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
SDIO_CEATAITCmd	src/stm32f10x_sdio.c	/^void SDIO_CEATAITCmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
SDIO_CPSM	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_CPSM;      \/*!< Specifies whether SDIO Command path state machine (CPSM)$/;"	m	struct:__anon33	access:public
SDIO_CPSM_Disable	inc/stm32f10x_sdio.h	265;"	d
SDIO_CPSM_Enable	inc/stm32f10x_sdio.h	266;"	d
SDIO_ClearFlag	inc/stm32f10x_sdio.h	/^void SDIO_ClearFlag(uint32_t SDIO_FLAG);$/;"	p	signature:(uint32_t SDIO_FLAG)
SDIO_ClearFlag	src/stm32f10x_sdio.c	/^void SDIO_ClearFlag(uint32_t SDIO_FLAG)$/;"	f	signature:(uint32_t SDIO_FLAG)
SDIO_ClearITPendingBit	inc/stm32f10x_sdio.h	/^void SDIO_ClearITPendingBit(uint32_t SDIO_IT);$/;"	p	signature:(uint32_t SDIO_IT)
SDIO_ClearITPendingBit	src/stm32f10x_sdio.c	/^void SDIO_ClearITPendingBit(uint32_t SDIO_IT)$/;"	f	signature:(uint32_t SDIO_IT)
SDIO_ClockBypass	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_ClockBypass;          \/*!< Specifies whether the SDIO Clock divider bypass is$/;"	m	struct:__anon32	access:public
SDIO_ClockBypass_Disable	inc/stm32f10x_sdio.h	134;"	d
SDIO_ClockBypass_Enable	inc/stm32f10x_sdio.h	135;"	d
SDIO_ClockCmd	inc/stm32f10x_sdio.h	/^void SDIO_ClockCmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
SDIO_ClockCmd	src/stm32f10x_sdio.c	/^void SDIO_ClockCmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
SDIO_ClockDiv	inc/stm32f10x_sdio.h	/^  uint8_t SDIO_ClockDiv;              \/*!< Specifies the clock frequency of the SDIO controller.$/;"	m	struct:__anon32	access:public
SDIO_ClockEdge	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_ClockEdge;            \/*!< Specifies the clock transition on which the bit capture is made.$/;"	m	struct:__anon32	access:public
SDIO_ClockEdge_Falling	inc/stm32f10x_sdio.h	123;"	d
SDIO_ClockEdge_Rising	inc/stm32f10x_sdio.h	122;"	d
SDIO_ClockPowerSave	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_ClockPowerSave;       \/*!< Specifies whether SDIO Clock output is enabled or$/;"	m	struct:__anon32	access:public
SDIO_ClockPowerSave_Disable	inc/stm32f10x_sdio.h	146;"	d
SDIO_ClockPowerSave_Enable	inc/stm32f10x_sdio.h	147;"	d
SDIO_CmdIndex	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_CmdIndex;  \/*!< Specifies the SDIO command index. It must be lower than 0x40. *\/$/;"	m	struct:__anon33	access:public
SDIO_CmdInitTypeDef	inc/stm32f10x_sdio.h	/^} SDIO_CmdInitTypeDef;$/;"	t	typeref:struct:__anon33
SDIO_CmdStructInit	inc/stm32f10x_sdio.h	/^void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct);$/;"	p	signature:(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)
SDIO_CmdStructInit	src/stm32f10x_sdio.c	/^void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)$/;"	f	signature:(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)
SDIO_CommandCompletionCmd	inc/stm32f10x_sdio.h	/^void SDIO_CommandCompletionCmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
SDIO_CommandCompletionCmd	src/stm32f10x_sdio.c	/^void SDIO_CommandCompletionCmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
SDIO_DMACmd	inc/stm32f10x_sdio.h	/^void SDIO_DMACmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
SDIO_DMACmd	src/stm32f10x_sdio.c	/^void SDIO_DMACmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
SDIO_DPSM	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_DPSM;           \/*!< Specifies whether SDIO Data path state machine (DPSM)$/;"	m	struct:__anon34	access:public
SDIO_DPSM_Disable	inc/stm32f10x_sdio.h	361;"	d
SDIO_DPSM_Enable	inc/stm32f10x_sdio.h	362;"	d
SDIO_DataBlockSize	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_DataBlockSize;  \/*!< Specifies the data block size for block transfer.$/;"	m	struct:__anon34	access:public
SDIO_DataBlockSize_1024b	inc/stm32f10x_sdio.h	309;"	d
SDIO_DataBlockSize_128b	inc/stm32f10x_sdio.h	306;"	d
SDIO_DataBlockSize_16384b	inc/stm32f10x_sdio.h	313;"	d
SDIO_DataBlockSize_16b	inc/stm32f10x_sdio.h	303;"	d
SDIO_DataBlockSize_1b	inc/stm32f10x_sdio.h	299;"	d
SDIO_DataBlockSize_2048b	inc/stm32f10x_sdio.h	310;"	d
SDIO_DataBlockSize_256b	inc/stm32f10x_sdio.h	307;"	d
SDIO_DataBlockSize_2b	inc/stm32f10x_sdio.h	300;"	d
SDIO_DataBlockSize_32b	inc/stm32f10x_sdio.h	304;"	d
SDIO_DataBlockSize_4096b	inc/stm32f10x_sdio.h	311;"	d
SDIO_DataBlockSize_4b	inc/stm32f10x_sdio.h	301;"	d
SDIO_DataBlockSize_512b	inc/stm32f10x_sdio.h	308;"	d
SDIO_DataBlockSize_64b	inc/stm32f10x_sdio.h	305;"	d
SDIO_DataBlockSize_8192b	inc/stm32f10x_sdio.h	312;"	d
SDIO_DataBlockSize_8b	inc/stm32f10x_sdio.h	302;"	d
SDIO_DataConfig	inc/stm32f10x_sdio.h	/^void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct);$/;"	p	signature:(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
SDIO_DataConfig	src/stm32f10x_sdio.c	/^void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct)$/;"	f	signature:(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
SDIO_DataInitTypeDef	inc/stm32f10x_sdio.h	/^} SDIO_DataInitTypeDef;$/;"	t	typeref:struct:__anon34
SDIO_DataLength	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_DataLength;     \/*!< Specifies the number of data bytes to be transferred. *\/$/;"	m	struct:__anon34	access:public
SDIO_DataStructInit	inc/stm32f10x_sdio.h	/^void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct);$/;"	p	signature:(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
SDIO_DataStructInit	src/stm32f10x_sdio.c	/^void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct)$/;"	f	signature:(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
SDIO_DataTimeOut	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_DataTimeOut;    \/*!< Specifies the data timeout period in card bus clock periods. *\/$/;"	m	struct:__anon34	access:public
SDIO_DeInit	inc/stm32f10x_sdio.h	/^void SDIO_DeInit(void);$/;"	p	signature:(void)
SDIO_DeInit	src/stm32f10x_sdio.c	/^void SDIO_DeInit(void)$/;"	f	signature:(void)
SDIO_FLAG_CCRCFAIL	inc/stm32f10x_sdio.h	372;"	d
SDIO_FLAG_CEATAEND	inc/stm32f10x_sdio.h	395;"	d
SDIO_FLAG_CMDACT	inc/stm32f10x_sdio.h	383;"	d
SDIO_FLAG_CMDREND	inc/stm32f10x_sdio.h	378;"	d
SDIO_FLAG_CMDSENT	inc/stm32f10x_sdio.h	379;"	d
SDIO_FLAG_CTIMEOUT	inc/stm32f10x_sdio.h	374;"	d
SDIO_FLAG_DATAEND	inc/stm32f10x_sdio.h	380;"	d
SDIO_FLAG_DBCKEND	inc/stm32f10x_sdio.h	382;"	d
SDIO_FLAG_DCRCFAIL	inc/stm32f10x_sdio.h	373;"	d
SDIO_FLAG_DTIMEOUT	inc/stm32f10x_sdio.h	375;"	d
SDIO_FLAG_RXACT	inc/stm32f10x_sdio.h	385;"	d
SDIO_FLAG_RXDAVL	inc/stm32f10x_sdio.h	393;"	d
SDIO_FLAG_RXFIFOE	inc/stm32f10x_sdio.h	391;"	d
SDIO_FLAG_RXFIFOF	inc/stm32f10x_sdio.h	389;"	d
SDIO_FLAG_RXFIFOHF	inc/stm32f10x_sdio.h	387;"	d
SDIO_FLAG_RXOVERR	inc/stm32f10x_sdio.h	377;"	d
SDIO_FLAG_SDIOIT	inc/stm32f10x_sdio.h	394;"	d
SDIO_FLAG_STBITERR	inc/stm32f10x_sdio.h	381;"	d
SDIO_FLAG_TXACT	inc/stm32f10x_sdio.h	384;"	d
SDIO_FLAG_TXDAVL	inc/stm32f10x_sdio.h	392;"	d
SDIO_FLAG_TXFIFOE	inc/stm32f10x_sdio.h	390;"	d
SDIO_FLAG_TXFIFOF	inc/stm32f10x_sdio.h	388;"	d
SDIO_FLAG_TXFIFOHE	inc/stm32f10x_sdio.h	386;"	d
SDIO_FLAG_TXUNDERR	inc/stm32f10x_sdio.h	376;"	d
SDIO_GetCommandResponse	inc/stm32f10x_sdio.h	/^uint8_t SDIO_GetCommandResponse(void);$/;"	p	signature:(void)
SDIO_GetCommandResponse	src/stm32f10x_sdio.c	/^uint8_t SDIO_GetCommandResponse(void)$/;"	f	signature:(void)
SDIO_GetDataCounter	inc/stm32f10x_sdio.h	/^uint32_t SDIO_GetDataCounter(void);$/;"	p	signature:(void)
SDIO_GetDataCounter	src/stm32f10x_sdio.c	/^uint32_t SDIO_GetDataCounter(void)$/;"	f	signature:(void)
SDIO_GetFIFOCount	inc/stm32f10x_sdio.h	/^uint32_t SDIO_GetFIFOCount(void);$/;"	p	signature:(void)
SDIO_GetFIFOCount	src/stm32f10x_sdio.c	/^uint32_t SDIO_GetFIFOCount(void)$/;"	f	signature:(void)
SDIO_GetFlagStatus	inc/stm32f10x_sdio.h	/^FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG);$/;"	p	signature:(uint32_t SDIO_FLAG)
SDIO_GetFlagStatus	src/stm32f10x_sdio.c	/^FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG)$/;"	f	signature:(uint32_t SDIO_FLAG)
SDIO_GetITStatus	inc/stm32f10x_sdio.h	/^ITStatus SDIO_GetITStatus(uint32_t SDIO_IT);$/;"	p	signature:(uint32_t SDIO_IT)
SDIO_GetITStatus	src/stm32f10x_sdio.c	/^ITStatus SDIO_GetITStatus(uint32_t SDIO_IT)$/;"	f	signature:(uint32_t SDIO_IT)
SDIO_GetPowerState	inc/stm32f10x_sdio.h	/^uint32_t SDIO_GetPowerState(void);$/;"	p	signature:(void)
SDIO_GetPowerState	src/stm32f10x_sdio.c	/^uint32_t SDIO_GetPowerState(void)$/;"	f	signature:(void)
SDIO_GetResponse	inc/stm32f10x_sdio.h	/^uint32_t SDIO_GetResponse(uint32_t SDIO_RESP);$/;"	p	signature:(uint32_t SDIO_RESP)
SDIO_GetResponse	src/stm32f10x_sdio.c	/^uint32_t SDIO_GetResponse(uint32_t SDIO_RESP)$/;"	f	signature:(uint32_t SDIO_RESP)
SDIO_HardwareFlowControl	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_HardwareFlowControl;  \/*!< Specifies whether the SDIO hardware flow control is enabled or disabled.$/;"	m	struct:__anon32	access:public
SDIO_HardwareFlowControl_Disable	inc/stm32f10x_sdio.h	172;"	d
SDIO_HardwareFlowControl_Enable	inc/stm32f10x_sdio.h	173;"	d
SDIO_ITConfig	inc/stm32f10x_sdio.h	/^void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState);$/;"	p	signature:(uint32_t SDIO_IT, FunctionalState NewState)
SDIO_ITConfig	src/stm32f10x_sdio.c	/^void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState)$/;"	f	signature:(uint32_t SDIO_IT, FunctionalState NewState)
SDIO_IT_CCRCFAIL	inc/stm32f10x_sdio.h	196;"	d
SDIO_IT_CEATAEND	inc/stm32f10x_sdio.h	219;"	d
SDIO_IT_CMDACT	inc/stm32f10x_sdio.h	207;"	d
SDIO_IT_CMDREND	inc/stm32f10x_sdio.h	202;"	d
SDIO_IT_CMDSENT	inc/stm32f10x_sdio.h	203;"	d
SDIO_IT_CTIMEOUT	inc/stm32f10x_sdio.h	198;"	d
SDIO_IT_DATAEND	inc/stm32f10x_sdio.h	204;"	d
SDIO_IT_DBCKEND	inc/stm32f10x_sdio.h	206;"	d
SDIO_IT_DCRCFAIL	inc/stm32f10x_sdio.h	197;"	d
SDIO_IT_DTIMEOUT	inc/stm32f10x_sdio.h	199;"	d
SDIO_IT_RXACT	inc/stm32f10x_sdio.h	209;"	d
SDIO_IT_RXDAVL	inc/stm32f10x_sdio.h	217;"	d
SDIO_IT_RXFIFOE	inc/stm32f10x_sdio.h	215;"	d
SDIO_IT_RXFIFOF	inc/stm32f10x_sdio.h	213;"	d
SDIO_IT_RXFIFOHF	inc/stm32f10x_sdio.h	211;"	d
SDIO_IT_RXOVERR	inc/stm32f10x_sdio.h	201;"	d
SDIO_IT_SDIOIT	inc/stm32f10x_sdio.h	218;"	d
SDIO_IT_STBITERR	inc/stm32f10x_sdio.h	205;"	d
SDIO_IT_TXACT	inc/stm32f10x_sdio.h	208;"	d
SDIO_IT_TXDAVL	inc/stm32f10x_sdio.h	216;"	d
SDIO_IT_TXFIFOE	inc/stm32f10x_sdio.h	214;"	d
SDIO_IT_TXFIFOF	inc/stm32f10x_sdio.h	212;"	d
SDIO_IT_TXFIFOHE	inc/stm32f10x_sdio.h	210;"	d
SDIO_IT_TXUNDERR	inc/stm32f10x_sdio.h	200;"	d
SDIO_Init	inc/stm32f10x_sdio.h	/^void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct);$/;"	p	signature:(SDIO_InitTypeDef* SDIO_InitStruct)
SDIO_Init	src/stm32f10x_sdio.c	/^void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct)$/;"	f	signature:(SDIO_InitTypeDef* SDIO_InitStruct)
SDIO_InitTypeDef	inc/stm32f10x_sdio.h	/^} SDIO_InitTypeDef;$/;"	t	typeref:struct:__anon32
SDIO_OFFSET	src/stm32f10x_sdio.c	39;"	d	file:
SDIO_PowerState_OFF	inc/stm32f10x_sdio.h	184;"	d
SDIO_PowerState_ON	inc/stm32f10x_sdio.h	185;"	d
SDIO_RESP1	inc/stm32f10x_sdio.h	276;"	d
SDIO_RESP2	inc/stm32f10x_sdio.h	277;"	d
SDIO_RESP3	inc/stm32f10x_sdio.h	278;"	d
SDIO_RESP4	inc/stm32f10x_sdio.h	279;"	d
SDIO_RESP_ADDR	src/stm32f10x_sdio.c	113;"	d	file:
SDIO_ReadData	inc/stm32f10x_sdio.h	/^uint32_t SDIO_ReadData(void);$/;"	p	signature:(void)
SDIO_ReadData	src/stm32f10x_sdio.c	/^uint32_t SDIO_ReadData(void)$/;"	f	signature:(void)
SDIO_ReadWaitMode_CLK	inc/stm32f10x_sdio.h	458;"	d
SDIO_ReadWaitMode_DATA2	inc/stm32f10x_sdio.h	459;"	d
SDIO_Response	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_Response;  \/*!< Specifies the SDIO response type.$/;"	m	struct:__anon33	access:public
SDIO_Response_Long	inc/stm32f10x_sdio.h	240;"	d
SDIO_Response_No	inc/stm32f10x_sdio.h	238;"	d
SDIO_Response_Short	inc/stm32f10x_sdio.h	239;"	d
SDIO_SendCEATACmd	inc/stm32f10x_sdio.h	/^void SDIO_SendCEATACmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
SDIO_SendCEATACmd	src/stm32f10x_sdio.c	/^void SDIO_SendCEATACmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
SDIO_SendCommand	inc/stm32f10x_sdio.h	/^void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct);$/;"	p	signature:(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)
SDIO_SendCommand	src/stm32f10x_sdio.c	/^void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)$/;"	f	signature:(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)
SDIO_SendSDIOSuspendCmd	inc/stm32f10x_sdio.h	/^void SDIO_SendSDIOSuspendCmd(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
SDIO_SendSDIOSuspendCmd	src/stm32f10x_sdio.c	/^void SDIO_SendSDIOSuspendCmd(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
SDIO_SetPowerState	inc/stm32f10x_sdio.h	/^void SDIO_SetPowerState(uint32_t SDIO_PowerState);$/;"	p	signature:(uint32_t SDIO_PowerState)
SDIO_SetPowerState	src/stm32f10x_sdio.c	/^void SDIO_SetPowerState(uint32_t SDIO_PowerState)$/;"	f	signature:(uint32_t SDIO_PowerState)
SDIO_SetSDIOOperation	inc/stm32f10x_sdio.h	/^void SDIO_SetSDIOOperation(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
SDIO_SetSDIOOperation	src/stm32f10x_sdio.c	/^void SDIO_SetSDIOOperation(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
SDIO_SetSDIOReadWaitMode	inc/stm32f10x_sdio.h	/^void SDIO_SetSDIOReadWaitMode(uint32_t SDIO_ReadWaitMode);$/;"	p	signature:(uint32_t SDIO_ReadWaitMode)
SDIO_SetSDIOReadWaitMode	src/stm32f10x_sdio.c	/^void SDIO_SetSDIOReadWaitMode(uint32_t SDIO_ReadWaitMode)$/;"	f	signature:(uint32_t SDIO_ReadWaitMode)
SDIO_StartSDIOReadWait	inc/stm32f10x_sdio.h	/^void SDIO_StartSDIOReadWait(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
SDIO_StartSDIOReadWait	src/stm32f10x_sdio.c	/^void SDIO_StartSDIOReadWait(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
SDIO_StopSDIOReadWait	inc/stm32f10x_sdio.h	/^void SDIO_StopSDIOReadWait(FunctionalState NewState);$/;"	p	signature:(FunctionalState NewState)
SDIO_StopSDIOReadWait	src/stm32f10x_sdio.c	/^void SDIO_StopSDIOReadWait(FunctionalState NewState)$/;"	f	signature:(FunctionalState NewState)
SDIO_StructInit	inc/stm32f10x_sdio.h	/^void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct);$/;"	p	signature:(SDIO_InitTypeDef* SDIO_InitStruct)
SDIO_StructInit	src/stm32f10x_sdio.c	/^void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct)$/;"	f	signature:(SDIO_InitTypeDef* SDIO_InitStruct)
SDIO_TransferDir	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_TransferDir;    \/*!< Specifies the data transfer direction, whether the transfer$/;"	m	struct:__anon34	access:public
SDIO_TransferDir_ToCard	inc/stm32f10x_sdio.h	337;"	d
SDIO_TransferDir_ToSDIO	inc/stm32f10x_sdio.h	338;"	d
SDIO_TransferMode	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_TransferMode;   \/*!< Specifies whether data transfer is in stream or block mode.$/;"	m	struct:__anon34	access:public
SDIO_TransferMode_Block	inc/stm32f10x_sdio.h	349;"	d
SDIO_TransferMode_Stream	inc/stm32f10x_sdio.h	350;"	d
SDIO_Wait	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_Wait;      \/*!< Specifies whether SDIO wait-for-interrupt request is enabled or disabled.$/;"	m	struct:__anon33	access:public
SDIO_Wait_IT	inc/stm32f10x_sdio.h	253;"	d
SDIO_Wait_No	inc/stm32f10x_sdio.h	252;"	d
SDIO_Wait_Pend	inc/stm32f10x_sdio.h	254;"	d
SDIO_WriteData	inc/stm32f10x_sdio.h	/^void SDIO_WriteData(uint32_t Data);$/;"	p	signature:(uint32_t Data)
SDIO_WriteData	src/stm32f10x_sdio.c	/^void SDIO_WriteData(uint32_t Data)$/;"	f	signature:(uint32_t Data)
SLAK_TimeOut	src/stm32f10x_can.c	102;"	d	file:
SMCR_ETR_Mask	src/stm32f10x_tim.c	47;"	d	file:
SMPR1_SMP_Set	src/stm32f10x_adc.c	132;"	d	file:
SMPR2_SMP_Set	src/stm32f10x_adc.c	133;"	d	file:
SPI_BaudRatePrescaler	inc/stm32f10x_spi.h	/^  uint16_t SPI_BaudRatePrescaler;   \/*!< Specifies the Baud Rate prescaler value which will be$/;"	m	struct:__anon22	access:public
SPI_BaudRatePrescaler_128	inc/stm32f10x_spi.h	209;"	d
SPI_BaudRatePrescaler_16	inc/stm32f10x_spi.h	206;"	d
SPI_BaudRatePrescaler_2	inc/stm32f10x_spi.h	203;"	d
SPI_BaudRatePrescaler_256	inc/stm32f10x_spi.h	210;"	d
SPI_BaudRatePrescaler_32	inc/stm32f10x_spi.h	207;"	d
SPI_BaudRatePrescaler_4	inc/stm32f10x_spi.h	204;"	d
SPI_BaudRatePrescaler_64	inc/stm32f10x_spi.h	208;"	d
SPI_BaudRatePrescaler_8	inc/stm32f10x_spi.h	205;"	d
SPI_BiDirectionalLineConfig	inc/stm32f10x_spi.h	/^void SPI_BiDirectionalLineConfig(SPI_TypeDef* SPIx, uint16_t SPI_Direction);$/;"	p	signature:(SPI_TypeDef* SPIx, uint16_t SPI_Direction)
SPI_BiDirectionalLineConfig	src/stm32f10x_spi.c	/^void SPI_BiDirectionalLineConfig(SPI_TypeDef* SPIx, uint16_t SPI_Direction)$/;"	f	signature:(SPI_TypeDef* SPIx, uint16_t SPI_Direction)
SPI_CPHA	inc/stm32f10x_spi.h	/^  uint16_t SPI_CPHA;                \/*!< Specifies the clock active edge for the bit capture.$/;"	m	struct:__anon22	access:public
SPI_CPHA_1Edge	inc/stm32f10x_spi.h	179;"	d
SPI_CPHA_2Edge	inc/stm32f10x_spi.h	180;"	d
SPI_CPOL	inc/stm32f10x_spi.h	/^  uint16_t SPI_CPOL;                \/*!< Specifies the serial clock steady state.$/;"	m	struct:__anon22	access:public
SPI_CPOL_High	inc/stm32f10x_spi.h	168;"	d
SPI_CPOL_Low	inc/stm32f10x_spi.h	167;"	d
SPI_CRCPolynomial	inc/stm32f10x_spi.h	/^  uint16_t SPI_CRCPolynomial;       \/*!< Specifies the polynomial used for the CRC calculation. *\/$/;"	m	struct:__anon22	access:public
SPI_CRC_Rx	inc/stm32f10x_spi.h	363;"	d
SPI_CRC_Tx	inc/stm32f10x_spi.h	362;"	d
SPI_CalculateCRC	inc/stm32f10x_spi.h	/^void SPI_CalculateCRC(SPI_TypeDef* SPIx, FunctionalState NewState);$/;"	p	signature:(SPI_TypeDef* SPIx, FunctionalState NewState)
SPI_CalculateCRC	src/stm32f10x_spi.c	/^void SPI_CalculateCRC(SPI_TypeDef* SPIx, FunctionalState NewState)$/;"	f	signature:(SPI_TypeDef* SPIx, FunctionalState NewState)
SPI_Cmd	inc/stm32f10x_spi.h	/^void SPI_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState);$/;"	p	signature:(SPI_TypeDef* SPIx, FunctionalState NewState)
SPI_Cmd	src/stm32f10x_spi.c	/^void SPI_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)$/;"	f	signature:(SPI_TypeDef* SPIx, FunctionalState NewState)
SPI_DataSize	inc/stm32f10x_spi.h	/^  uint16_t SPI_DataSize;            \/*!< Specifies the SPI data size.$/;"	m	struct:__anon22	access:public
SPI_DataSizeConfig	inc/stm32f10x_spi.h	/^void SPI_DataSizeConfig(SPI_TypeDef* SPIx, uint16_t SPI_DataSize);$/;"	p	signature:(SPI_TypeDef* SPIx, uint16_t SPI_DataSize)
SPI_DataSizeConfig	src/stm32f10x_spi.c	/^void SPI_DataSizeConfig(SPI_TypeDef* SPIx, uint16_t SPI_DataSize)$/;"	f	signature:(SPI_TypeDef* SPIx, uint16_t SPI_DataSize)
SPI_DataSize_16b	inc/stm32f10x_spi.h	155;"	d
SPI_DataSize_8b	inc/stm32f10x_spi.h	156;"	d
SPI_Direction	inc/stm32f10x_spi.h	/^  uint16_t SPI_Direction;           \/*!< Specifies the SPI unidirectional or bidirectional data mode.$/;"	m	struct:__anon22	access:public
SPI_Direction_1Line_Rx	inc/stm32f10x_spi.h	129;"	d
SPI_Direction_1Line_Tx	inc/stm32f10x_spi.h	130;"	d
SPI_Direction_2Lines_FullDuplex	inc/stm32f10x_spi.h	127;"	d
SPI_Direction_2Lines_RxOnly	inc/stm32f10x_spi.h	128;"	d
SPI_Direction_Rx	inc/stm32f10x_spi.h	373;"	d
SPI_Direction_Tx	inc/stm32f10x_spi.h	374;"	d
SPI_FLAG_CRCERR	inc/stm32f10x_spi.h	411;"	d
SPI_FLAG_MODF	inc/stm32f10x_spi.h	412;"	d
SPI_FirstBit	inc/stm32f10x_spi.h	/^  uint16_t SPI_FirstBit;            \/*!< Specifies whether data transfers start from MSB or LSB bit.$/;"	m	struct:__anon22	access:public
SPI_FirstBit_LSB	inc/stm32f10x_spi.h	228;"	d
SPI_FirstBit_MSB	inc/stm32f10x_spi.h	227;"	d
SPI_GetCRC	inc/stm32f10x_spi.h	/^uint16_t SPI_GetCRC(SPI_TypeDef* SPIx, uint8_t SPI_CRC);$/;"	p	signature:(SPI_TypeDef* SPIx, uint8_t SPI_CRC)
SPI_GetCRC	src/stm32f10x_spi.c	/^uint16_t SPI_GetCRC(SPI_TypeDef* SPIx, uint8_t SPI_CRC)$/;"	f	signature:(SPI_TypeDef* SPIx, uint8_t SPI_CRC)
SPI_GetCRCPolynomial	inc/stm32f10x_spi.h	/^uint16_t SPI_GetCRCPolynomial(SPI_TypeDef* SPIx);$/;"	p	signature:(SPI_TypeDef* SPIx)
SPI_GetCRCPolynomial	src/stm32f10x_spi.c	/^uint16_t SPI_GetCRCPolynomial(SPI_TypeDef* SPIx)$/;"	f	signature:(SPI_TypeDef* SPIx)
SPI_I2S_ClearFlag	inc/stm32f10x_spi.h	/^void SPI_I2S_ClearFlag(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG);$/;"	p	signature:(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
SPI_I2S_ClearFlag	src/stm32f10x_spi.c	/^void SPI_I2S_ClearFlag(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)$/;"	f	signature:(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
SPI_I2S_ClearITPendingBit	inc/stm32f10x_spi.h	/^void SPI_I2S_ClearITPendingBit(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT);$/;"	p	signature:(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
SPI_I2S_ClearITPendingBit	src/stm32f10x_spi.c	/^void SPI_I2S_ClearITPendingBit(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)$/;"	f	signature:(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
SPI_I2S_DMACmd	inc/stm32f10x_spi.h	/^void SPI_I2S_DMACmd(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState NewState);$/;"	p	signature:(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState NewState)
SPI_I2S_DMACmd	src/stm32f10x_spi.c	/^void SPI_I2S_DMACmd(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState NewState)$/;"	f	signature:(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState NewState)
SPI_I2S_DMAReq_Rx	inc/stm32f10x_spi.h	340;"	d
SPI_I2S_DMAReq_Tx	inc/stm32f10x_spi.h	339;"	d
SPI_I2S_DeInit	inc/stm32f10x_spi.h	/^void SPI_I2S_DeInit(SPI_TypeDef* SPIx);$/;"	p	signature:(SPI_TypeDef* SPIx)
SPI_I2S_DeInit	src/stm32f10x_spi.c	/^void SPI_I2S_DeInit(SPI_TypeDef* SPIx)$/;"	f	signature:(SPI_TypeDef* SPIx)
SPI_I2S_FLAG_BSY	inc/stm32f10x_spi.h	414;"	d
SPI_I2S_FLAG_OVR	inc/stm32f10x_spi.h	413;"	d
SPI_I2S_FLAG_RXNE	inc/stm32f10x_spi.h	407;"	d
SPI_I2S_FLAG_TXE	inc/stm32f10x_spi.h	408;"	d
SPI_I2S_GetFlagStatus	inc/stm32f10x_spi.h	/^FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG);$/;"	p	signature:(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
SPI_I2S_GetFlagStatus	src/stm32f10x_spi.c	/^FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)$/;"	f	signature:(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
SPI_I2S_GetITStatus	inc/stm32f10x_spi.h	/^ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT);$/;"	p	signature:(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
SPI_I2S_GetITStatus	src/stm32f10x_spi.c	/^ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)$/;"	f	signature:(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
SPI_I2S_ITConfig	inc/stm32f10x_spi.h	/^void SPI_I2S_ITConfig(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState);$/;"	p	signature:(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState)
SPI_I2S_ITConfig	src/stm32f10x_spi.c	/^void SPI_I2S_ITConfig(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState)$/;"	f	signature:(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState)
SPI_I2S_IT_ERR	inc/stm32f10x_spi.h	387;"	d
SPI_I2S_IT_OVR	inc/stm32f10x_spi.h	391;"	d
SPI_I2S_IT_RXNE	inc/stm32f10x_spi.h	386;"	d
SPI_I2S_IT_TXE	inc/stm32f10x_spi.h	385;"	d
SPI_I2S_ReceiveData	inc/stm32f10x_spi.h	/^uint16_t SPI_I2S_ReceiveData(SPI_TypeDef* SPIx);$/;"	p	signature:(SPI_TypeDef* SPIx)
SPI_I2S_ReceiveData	src/stm32f10x_spi.c	/^uint16_t SPI_I2S_ReceiveData(SPI_TypeDef* SPIx)$/;"	f	signature:(SPI_TypeDef* SPIx)
SPI_I2S_SendData	inc/stm32f10x_spi.h	/^void SPI_I2S_SendData(SPI_TypeDef* SPIx, uint16_t Data);$/;"	p	signature:(SPI_TypeDef* SPIx, uint16_t Data)
SPI_I2S_SendData	src/stm32f10x_spi.c	/^void SPI_I2S_SendData(SPI_TypeDef* SPIx, uint16_t Data)$/;"	f	signature:(SPI_TypeDef* SPIx, uint16_t Data)
SPI_IT_CRCERR	inc/stm32f10x_spi.h	393;"	d
SPI_IT_MODF	inc/stm32f10x_spi.h	392;"	d
SPI_Init	inc/stm32f10x_spi.h	/^void SPI_Init(SPI_TypeDef* SPIx, SPI_InitTypeDef* SPI_InitStruct);$/;"	p	signature:(SPI_TypeDef* SPIx, SPI_InitTypeDef* SPI_InitStruct)
SPI_Init	src/stm32f10x_spi.c	/^void SPI_Init(SPI_TypeDef* SPIx, SPI_InitTypeDef* SPI_InitStruct)$/;"	f	signature:(SPI_TypeDef* SPIx, SPI_InitTypeDef* SPI_InitStruct)
SPI_InitTypeDef	inc/stm32f10x_spi.h	/^}SPI_InitTypeDef;$/;"	t	typeref:struct:__anon22
SPI_Mode	inc/stm32f10x_spi.h	/^  uint16_t SPI_Mode;                \/*!< Specifies the SPI operating mode.$/;"	m	struct:__anon22	access:public
SPI_Mode_Master	inc/stm32f10x_spi.h	143;"	d
SPI_Mode_Select	src/stm32f10x_spi.c	71;"	d	file:
SPI_Mode_Slave	inc/stm32f10x_spi.h	144;"	d
SPI_NSS	inc/stm32f10x_spi.h	/^  uint16_t SPI_NSS;                 \/*!< Specifies whether the NSS signal is managed by$/;"	m	struct:__anon22	access:public
SPI_NSSInternalSoft_Reset	inc/stm32f10x_spi.h	351;"	d
SPI_NSSInternalSoft_Set	inc/stm32f10x_spi.h	350;"	d
SPI_NSSInternalSoftwareConfig	inc/stm32f10x_spi.h	/^void SPI_NSSInternalSoftwareConfig(SPI_TypeDef* SPIx, uint16_t SPI_NSSInternalSoft);$/;"	p	signature:(SPI_TypeDef* SPIx, uint16_t SPI_NSSInternalSoft)
SPI_NSSInternalSoftwareConfig	src/stm32f10x_spi.c	/^void SPI_NSSInternalSoftwareConfig(SPI_TypeDef* SPIx, uint16_t SPI_NSSInternalSoft)$/;"	f	signature:(SPI_TypeDef* SPIx, uint16_t SPI_NSSInternalSoft)
SPI_NSS_Hard	inc/stm32f10x_spi.h	192;"	d
SPI_NSS_Soft	inc/stm32f10x_spi.h	191;"	d
SPI_SSOutputCmd	inc/stm32f10x_spi.h	/^void SPI_SSOutputCmd(SPI_TypeDef* SPIx, FunctionalState NewState);$/;"	p	signature:(SPI_TypeDef* SPIx, FunctionalState NewState)
SPI_SSOutputCmd	src/stm32f10x_spi.c	/^void SPI_SSOutputCmd(SPI_TypeDef* SPIx, FunctionalState NewState)$/;"	f	signature:(SPI_TypeDef* SPIx, FunctionalState NewState)
SPI_StructInit	inc/stm32f10x_spi.h	/^void SPI_StructInit(SPI_InitTypeDef* SPI_InitStruct);$/;"	p	signature:(SPI_InitTypeDef* SPI_InitStruct)
SPI_StructInit	src/stm32f10x_spi.c	/^void SPI_StructInit(SPI_InitTypeDef* SPI_InitStruct)$/;"	f	signature:(SPI_InitTypeDef* SPI_InitStruct)
SPI_TransmitCRC	inc/stm32f10x_spi.h	/^void SPI_TransmitCRC(SPI_TypeDef* SPIx);$/;"	p	signature:(SPI_TypeDef* SPIx)
SPI_TransmitCRC	src/stm32f10x_spi.c	/^void SPI_TransmitCRC(SPI_TypeDef* SPIx)$/;"	f	signature:(SPI_TypeDef* SPIx)
SQR1_CLEAR_Mask	src/stm32f10x_adc.c	122;"	d	file:
SQR1_SQ_Set	src/stm32f10x_adc.c	119;"	d	file:
SQR2_SQ_Set	src/stm32f10x_adc.c	118;"	d	file:
SQR3_SQ_Set	src/stm32f10x_adc.c	117;"	d	file:
SWTRIGR_SWTRIG_Set	src/stm32f10x_dac.c	56;"	d	file:
SYSCLK_Frequency	inc/stm32f10x_rcc.h	/^  uint32_t SYSCLK_Frequency;  \/*!< returns SYSCLK clock frequency expressed in Hz *\/$/;"	m	struct:__anon31	access:public
StdId	inc/stm32f10x_can.h	/^  uint32_t StdId;  \/*!< Specifies the standard identifier.$/;"	m	struct:__anon5	access:public
StdId	inc/stm32f10x_can.h	/^  uint32_t StdId;  \/*!< Specifies the standard identifier.$/;"	m	struct:__anon6	access:public
SysCtrl_SLEEPDEEP_Reset	src/stm32f10x_pwr.c	82;"	d	file:
SysCtrl_SLEEPDEEP_Set	src/stm32f10x_pwr.c	81;"	d	file:
SysTick_CLKSourceConfig	inc/misc.h	/^void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource);$/;"	p	signature:(uint32_t SysTick_CLKSource)
SysTick_CLKSourceConfig	src/misc.c	/^void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource)$/;"	f	signature:(uint32_t SysTick_CLKSource)
SysTick_CLKSource_HCLK	inc/misc.h	172;"	d
SysTick_CLKSource_HCLK_Div8	inc/misc.h	171;"	d
TEF_BitNumber	src/stm32f10x_bkp.c	72;"	d	file:
TEOM_BitNumber	src/stm32f10x_cec.c	69;"	d	file:
TI1_Config	src/stm32f10x_tim.c	/^static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,$/;"	f	file:	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection, uint16_t TIM_ICFilter)
TI1_Config	src/stm32f10x_tim.c	/^static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,$/;"	p	file:	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection, uint16_t TIM_ICFilter)
TI2_Config	src/stm32f10x_tim.c	/^static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,$/;"	f	file:	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection, uint16_t TIM_ICFilter)
TI2_Config	src/stm32f10x_tim.c	/^static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,$/;"	p	file:	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection, uint16_t TIM_ICFilter)
TI3_Config	src/stm32f10x_tim.c	/^static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,$/;"	f	file:	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection, uint16_t TIM_ICFilter)
TI3_Config	src/stm32f10x_tim.c	/^static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,$/;"	p	file:	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection, uint16_t TIM_ICFilter)
TI4_Config	src/stm32f10x_tim.c	/^static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,$/;"	f	file:	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection, uint16_t TIM_ICFilter)
TI4_Config	src/stm32f10x_tim.c	/^static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,$/;"	p	file:	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection, uint16_t TIM_ICFilter)
TIF_BitNumber	src/stm32f10x_bkp.c	68;"	d	file:
TIM_ARRPreloadConfig	inc/stm32f10x_tim.h	/^void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState);$/;"	p	signature:(TIM_TypeDef* TIMx, FunctionalState NewState)
TIM_ARRPreloadConfig	src/stm32f10x_tim.c	/^void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)$/;"	f	signature:(TIM_TypeDef* TIMx, FunctionalState NewState)
TIM_AutomaticOutput	inc/stm32f10x_tim.h	/^  uint16_t TIM_AutomaticOutput;  \/*!< Specifies whether the TIM Automatic Output feature is enabled or not. $/;"	m	struct:__anon21	access:public
TIM_AutomaticOutput_Disable	inc/stm32f10x_tim.h	477;"	d
TIM_AutomaticOutput_Enable	inc/stm32f10x_tim.h	476;"	d
TIM_BDTRConfig	inc/stm32f10x_tim.h	/^void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct);$/;"	p	signature:(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
TIM_BDTRConfig	src/stm32f10x_tim.c	/^void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)$/;"	f	signature:(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
TIM_BDTRInitTypeDef	inc/stm32f10x_tim.h	/^} TIM_BDTRInitTypeDef;$/;"	t	typeref:struct:__anon21
TIM_BDTRStructInit	inc/stm32f10x_tim.h	/^void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct);$/;"	p	signature:(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
TIM_BDTRStructInit	src/stm32f10x_tim.c	/^void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)$/;"	f	signature:(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
TIM_Break	inc/stm32f10x_tim.h	/^  uint16_t TIM_Break;            \/*!< Specifies whether the TIM Break input is enabled or not. $/;"	m	struct:__anon21	access:public
TIM_BreakPolarity	inc/stm32f10x_tim.h	/^  uint16_t TIM_BreakPolarity;    \/*!< Specifies the TIM Break Input pin polarity.$/;"	m	struct:__anon21	access:public
TIM_BreakPolarity_High	inc/stm32f10x_tim.h	465;"	d
TIM_BreakPolarity_Low	inc/stm32f10x_tim.h	464;"	d
TIM_Break_Disable	inc/stm32f10x_tim.h	453;"	d
TIM_Break_Enable	inc/stm32f10x_tim.h	452;"	d
TIM_CCPreloadControl	inc/stm32f10x_tim.h	/^void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState);$/;"	p	signature:(TIM_TypeDef* TIMx, FunctionalState NewState)
TIM_CCPreloadControl	src/stm32f10x_tim.c	/^void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)$/;"	f	signature:(TIM_TypeDef* TIMx, FunctionalState NewState)
TIM_CCxCmd	inc/stm32f10x_tim.h	/^void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
TIM_CCxCmd	src/stm32f10x_tim.c	/^void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
TIM_CCxNCmd	inc/stm32f10x_tim.h	/^void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
TIM_CCxNCmd	src/stm32f10x_tim.c	/^void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
TIM_CCxN_Disable	inc/stm32f10x_tim.h	441;"	d
TIM_CCxN_Enable	inc/stm32f10x_tim.h	440;"	d
TIM_CCx_Disable	inc/stm32f10x_tim.h	429;"	d
TIM_CCx_Enable	inc/stm32f10x_tim.h	428;"	d
TIM_CKD_DIV1	inc/stm32f10x_tim.h	348;"	d
TIM_CKD_DIV2	inc/stm32f10x_tim.h	349;"	d
TIM_CKD_DIV4	inc/stm32f10x_tim.h	350;"	d
TIM_Channel	inc/stm32f10x_tim.h	/^  uint16_t TIM_Channel;      \/*!< Specifies the TIM channel.$/;"	m	struct:__anon20	access:public
TIM_Channel_1	inc/stm32f10x_tim.h	327;"	d
TIM_Channel_2	inc/stm32f10x_tim.h	328;"	d
TIM_Channel_3	inc/stm32f10x_tim.h	329;"	d
TIM_Channel_4	inc/stm32f10x_tim.h	330;"	d
TIM_ClearFlag	inc/stm32f10x_tim.h	/^void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
TIM_ClearFlag	src/stm32f10x_tim.c	/^void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
TIM_ClearITPendingBit	inc/stm32f10x_tim.h	/^void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_IT)
TIM_ClearITPendingBit	src/stm32f10x_tim.c	/^void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_IT)
TIM_ClearOC1Ref	inc/stm32f10x_tim.h	/^void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
TIM_ClearOC1Ref	src/stm32f10x_tim.c	/^void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
TIM_ClearOC2Ref	inc/stm32f10x_tim.h	/^void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
TIM_ClearOC2Ref	src/stm32f10x_tim.c	/^void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
TIM_ClearOC3Ref	inc/stm32f10x_tim.h	/^void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
TIM_ClearOC3Ref	src/stm32f10x_tim.c	/^void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
TIM_ClearOC4Ref	inc/stm32f10x_tim.h	/^void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
TIM_ClearOC4Ref	src/stm32f10x_tim.c	/^void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
TIM_ClockDivision	inc/stm32f10x_tim.h	/^  uint16_t TIM_ClockDivision;     \/*!< Specifies the clock division.$/;"	m	struct:__anon18	access:public
TIM_Cmd	inc/stm32f10x_tim.h	/^void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState);$/;"	p	signature:(TIM_TypeDef* TIMx, FunctionalState NewState)
TIM_Cmd	src/stm32f10x_tim.c	/^void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)$/;"	f	signature:(TIM_TypeDef* TIMx, FunctionalState NewState)
TIM_CounterMode	inc/stm32f10x_tim.h	/^  uint16_t TIM_CounterMode;       \/*!< Specifies the counter mode.$/;"	m	struct:__anon18	access:public
TIM_CounterModeConfig	inc/stm32f10x_tim.h	/^void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
TIM_CounterModeConfig	src/stm32f10x_tim.c	/^void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
TIM_CounterMode_CenterAligned1	inc/stm32f10x_tim.h	364;"	d
TIM_CounterMode_CenterAligned2	inc/stm32f10x_tim.h	365;"	d
TIM_CounterMode_CenterAligned3	inc/stm32f10x_tim.h	366;"	d
TIM_CounterMode_Down	inc/stm32f10x_tim.h	363;"	d
TIM_CounterMode_Up	inc/stm32f10x_tim.h	362;"	d
TIM_CtrlPWMOutputs	inc/stm32f10x_tim.h	/^void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState);$/;"	p	signature:(TIM_TypeDef* TIMx, FunctionalState NewState)
TIM_CtrlPWMOutputs	src/stm32f10x_tim.c	/^void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)$/;"	f	signature:(TIM_TypeDef* TIMx, FunctionalState NewState)
TIM_DMABase_ARR	inc/stm32f10x_tim.h	633;"	d
TIM_DMABase_BDTR	inc/stm32f10x_tim.h	639;"	d
TIM_DMABase_CCER	inc/stm32f10x_tim.h	630;"	d
TIM_DMABase_CCMR1	inc/stm32f10x_tim.h	628;"	d
TIM_DMABase_CCMR2	inc/stm32f10x_tim.h	629;"	d
TIM_DMABase_CCR1	inc/stm32f10x_tim.h	635;"	d
TIM_DMABase_CCR2	inc/stm32f10x_tim.h	636;"	d
TIM_DMABase_CCR3	inc/stm32f10x_tim.h	637;"	d
TIM_DMABase_CCR4	inc/stm32f10x_tim.h	638;"	d
TIM_DMABase_CNT	inc/stm32f10x_tim.h	631;"	d
TIM_DMABase_CR1	inc/stm32f10x_tim.h	622;"	d
TIM_DMABase_CR2	inc/stm32f10x_tim.h	623;"	d
TIM_DMABase_DCR	inc/stm32f10x_tim.h	640;"	d
TIM_DMABase_DIER	inc/stm32f10x_tim.h	625;"	d
TIM_DMABase_EGR	inc/stm32f10x_tim.h	627;"	d
TIM_DMABase_PSC	inc/stm32f10x_tim.h	632;"	d
TIM_DMABase_RCR	inc/stm32f10x_tim.h	634;"	d
TIM_DMABase_SMCR	inc/stm32f10x_tim.h	624;"	d
TIM_DMABase_SR	inc/stm32f10x_tim.h	626;"	d
TIM_DMABurstLength_10Bytes	inc/stm32f10x_tim.h	677;"	d
TIM_DMABurstLength_11Bytes	inc/stm32f10x_tim.h	678;"	d
TIM_DMABurstLength_12Bytes	inc/stm32f10x_tim.h	679;"	d
TIM_DMABurstLength_13Bytes	inc/stm32f10x_tim.h	680;"	d
TIM_DMABurstLength_14Bytes	inc/stm32f10x_tim.h	681;"	d
TIM_DMABurstLength_15Bytes	inc/stm32f10x_tim.h	682;"	d
TIM_DMABurstLength_16Bytes	inc/stm32f10x_tim.h	683;"	d
TIM_DMABurstLength_17Bytes	inc/stm32f10x_tim.h	684;"	d
TIM_DMABurstLength_18Bytes	inc/stm32f10x_tim.h	685;"	d
TIM_DMABurstLength_1Byte	inc/stm32f10x_tim.h	668;"	d
TIM_DMABurstLength_2Bytes	inc/stm32f10x_tim.h	669;"	d
TIM_DMABurstLength_3Bytes	inc/stm32f10x_tim.h	670;"	d
TIM_DMABurstLength_4Bytes	inc/stm32f10x_tim.h	671;"	d
TIM_DMABurstLength_5Bytes	inc/stm32f10x_tim.h	672;"	d
TIM_DMABurstLength_6Bytes	inc/stm32f10x_tim.h	673;"	d
TIM_DMABurstLength_7Bytes	inc/stm32f10x_tim.h	674;"	d
TIM_DMABurstLength_8Bytes	inc/stm32f10x_tim.h	675;"	d
TIM_DMABurstLength_9Bytes	inc/stm32f10x_tim.h	676;"	d
TIM_DMACmd	inc/stm32f10x_tim.h	/^void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
TIM_DMACmd	src/stm32f10x_tim.c	/^void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
TIM_DMAConfig	inc/stm32f10x_tim.h	/^void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
TIM_DMAConfig	src/stm32f10x_tim.c	/^void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
TIM_DMA_CC1	inc/stm32f10x_tim.h	713;"	d
TIM_DMA_CC2	inc/stm32f10x_tim.h	714;"	d
TIM_DMA_CC3	inc/stm32f10x_tim.h	715;"	d
TIM_DMA_CC4	inc/stm32f10x_tim.h	716;"	d
TIM_DMA_COM	inc/stm32f10x_tim.h	717;"	d
TIM_DMA_Trigger	inc/stm32f10x_tim.h	718;"	d
TIM_DMA_Update	inc/stm32f10x_tim.h	712;"	d
TIM_DeInit	inc/stm32f10x_tim.h	/^void TIM_DeInit(TIM_TypeDef* TIMx);$/;"	p	signature:(TIM_TypeDef* TIMx)
TIM_DeInit	src/stm32f10x_tim.c	/^void TIM_DeInit(TIM_TypeDef* TIMx)$/;"	f	signature:(TIM_TypeDef* TIMx)
TIM_DeadTime	inc/stm32f10x_tim.h	/^  uint16_t TIM_DeadTime;         \/*!< Specifies the delay time between the switching-off and the$/;"	m	struct:__anon21	access:public
TIM_ETRClockMode1Config	inc/stm32f10x_tim.h	/^void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPolarity,$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
TIM_ETRClockMode1Config	src/stm32f10x_tim.c	/^void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPolarity,$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
TIM_ETRClockMode2Config	inc/stm32f10x_tim.h	/^void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, $/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
TIM_ETRClockMode2Config	src/stm32f10x_tim.c	/^void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, $/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
TIM_ETRConfig	inc/stm32f10x_tim.h	/^void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPolarity,$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
TIM_ETRConfig	src/stm32f10x_tim.c	/^void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPolarity,$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
TIM_EncoderInterfaceConfig	inc/stm32f10x_tim.h	/^void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode, uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
TIM_EncoderInterfaceConfig	src/stm32f10x_tim.c	/^void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode, uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
TIM_EncoderMode_TI1	inc/stm32f10x_tim.h	822;"	d
TIM_EncoderMode_TI12	inc/stm32f10x_tim.h	824;"	d
TIM_EncoderMode_TI2	inc/stm32f10x_tim.h	823;"	d
TIM_EventSource_Break	inc/stm32f10x_tim.h	844;"	d
TIM_EventSource_CC1	inc/stm32f10x_tim.h	838;"	d
TIM_EventSource_CC2	inc/stm32f10x_tim.h	839;"	d
TIM_EventSource_CC3	inc/stm32f10x_tim.h	840;"	d
TIM_EventSource_CC4	inc/stm32f10x_tim.h	841;"	d
TIM_EventSource_COM	inc/stm32f10x_tim.h	842;"	d
TIM_EventSource_Trigger	inc/stm32f10x_tim.h	843;"	d
TIM_EventSource_Update	inc/stm32f10x_tim.h	837;"	d
TIM_ExtTRGPSC_DIV2	inc/stm32f10x_tim.h	730;"	d
TIM_ExtTRGPSC_DIV4	inc/stm32f10x_tim.h	731;"	d
TIM_ExtTRGPSC_DIV8	inc/stm32f10x_tim.h	732;"	d
TIM_ExtTRGPSC_OFF	inc/stm32f10x_tim.h	729;"	d
TIM_ExtTRGPolarity_Inverted	inc/stm32f10x_tim.h	786;"	d
TIM_ExtTRGPolarity_NonInverted	inc/stm32f10x_tim.h	787;"	d
TIM_FLAG_Break	inc/stm32f10x_tim.h	965;"	d
TIM_FLAG_CC1	inc/stm32f10x_tim.h	959;"	d
TIM_FLAG_CC1OF	inc/stm32f10x_tim.h	966;"	d
TIM_FLAG_CC2	inc/stm32f10x_tim.h	960;"	d
TIM_FLAG_CC2OF	inc/stm32f10x_tim.h	967;"	d
TIM_FLAG_CC3	inc/stm32f10x_tim.h	961;"	d
TIM_FLAG_CC3OF	inc/stm32f10x_tim.h	968;"	d
TIM_FLAG_CC4	inc/stm32f10x_tim.h	962;"	d
TIM_FLAG_CC4OF	inc/stm32f10x_tim.h	969;"	d
TIM_FLAG_COM	inc/stm32f10x_tim.h	963;"	d
TIM_FLAG_Trigger	inc/stm32f10x_tim.h	964;"	d
TIM_FLAG_Update	inc/stm32f10x_tim.h	958;"	d
TIM_ForcedAction_Active	inc/stm32f10x_tim.h	810;"	d
TIM_ForcedAction_InActive	inc/stm32f10x_tim.h	811;"	d
TIM_ForcedOC1Config	inc/stm32f10x_tim.h	/^void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
TIM_ForcedOC1Config	src/stm32f10x_tim.c	/^void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
TIM_ForcedOC2Config	inc/stm32f10x_tim.h	/^void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
TIM_ForcedOC2Config	src/stm32f10x_tim.c	/^void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
TIM_ForcedOC3Config	inc/stm32f10x_tim.h	/^void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
TIM_ForcedOC3Config	src/stm32f10x_tim.c	/^void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
TIM_ForcedOC4Config	inc/stm32f10x_tim.h	/^void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
TIM_ForcedOC4Config	src/stm32f10x_tim.c	/^void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
TIM_GenerateEvent	inc/stm32f10x_tim.h	/^void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
TIM_GenerateEvent	src/stm32f10x_tim.c	/^void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
TIM_GetCapture1	inc/stm32f10x_tim.h	/^uint16_t TIM_GetCapture1(TIM_TypeDef* TIMx);$/;"	p	signature:(TIM_TypeDef* TIMx)
TIM_GetCapture1	src/stm32f10x_tim.c	/^uint16_t TIM_GetCapture1(TIM_TypeDef* TIMx)$/;"	f	signature:(TIM_TypeDef* TIMx)
TIM_GetCapture2	inc/stm32f10x_tim.h	/^uint16_t TIM_GetCapture2(TIM_TypeDef* TIMx);$/;"	p	signature:(TIM_TypeDef* TIMx)
TIM_GetCapture2	src/stm32f10x_tim.c	/^uint16_t TIM_GetCapture2(TIM_TypeDef* TIMx)$/;"	f	signature:(TIM_TypeDef* TIMx)
TIM_GetCapture3	inc/stm32f10x_tim.h	/^uint16_t TIM_GetCapture3(TIM_TypeDef* TIMx);$/;"	p	signature:(TIM_TypeDef* TIMx)
TIM_GetCapture3	src/stm32f10x_tim.c	/^uint16_t TIM_GetCapture3(TIM_TypeDef* TIMx)$/;"	f	signature:(TIM_TypeDef* TIMx)
TIM_GetCapture4	inc/stm32f10x_tim.h	/^uint16_t TIM_GetCapture4(TIM_TypeDef* TIMx);$/;"	p	signature:(TIM_TypeDef* TIMx)
TIM_GetCapture4	src/stm32f10x_tim.c	/^uint16_t TIM_GetCapture4(TIM_TypeDef* TIMx)$/;"	f	signature:(TIM_TypeDef* TIMx)
TIM_GetCounter	inc/stm32f10x_tim.h	/^uint16_t TIM_GetCounter(TIM_TypeDef* TIMx);$/;"	p	signature:(TIM_TypeDef* TIMx)
TIM_GetCounter	src/stm32f10x_tim.c	/^uint16_t TIM_GetCounter(TIM_TypeDef* TIMx)$/;"	f	signature:(TIM_TypeDef* TIMx)
TIM_GetFlagStatus	inc/stm32f10x_tim.h	/^FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
TIM_GetFlagStatus	src/stm32f10x_tim.c	/^FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
TIM_GetITStatus	inc/stm32f10x_tim.h	/^ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_IT)
TIM_GetITStatus	src/stm32f10x_tim.c	/^ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_IT)
TIM_GetPrescaler	inc/stm32f10x_tim.h	/^uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx);$/;"	p	signature:(TIM_TypeDef* TIMx)
TIM_GetPrescaler	src/stm32f10x_tim.c	/^uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)$/;"	f	signature:(TIM_TypeDef* TIMx)
TIM_ICFilter	inc/stm32f10x_tim.h	/^  uint16_t TIM_ICFilter;     \/*!< Specifies the input capture filter.$/;"	m	struct:__anon20	access:public
TIM_ICInit	inc/stm32f10x_tim.h	/^void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct);$/;"	p	signature:(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
TIM_ICInit	src/stm32f10x_tim.c	/^void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)$/;"	f	signature:(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
TIM_ICInitTypeDef	inc/stm32f10x_tim.h	/^} TIM_ICInitTypeDef;$/;"	t	typeref:struct:__anon20
TIM_ICPSC_DIV1	inc/stm32f10x_tim.h	580;"	d
TIM_ICPSC_DIV2	inc/stm32f10x_tim.h	581;"	d
TIM_ICPSC_DIV4	inc/stm32f10x_tim.h	582;"	d
TIM_ICPSC_DIV8	inc/stm32f10x_tim.h	583;"	d
TIM_ICPolarity	inc/stm32f10x_tim.h	/^  uint16_t TIM_ICPolarity;   \/*!< Specifies the active edge of the input signal.$/;"	m	struct:__anon20	access:public
TIM_ICPolarity_Falling	inc/stm32f10x_tim.h	553;"	d
TIM_ICPolarity_Rising	inc/stm32f10x_tim.h	552;"	d
TIM_ICPrescaler	inc/stm32f10x_tim.h	/^  uint16_t TIM_ICPrescaler;  \/*!< Specifies the Input Capture Prescaler.$/;"	m	struct:__anon20	access:public
TIM_ICSelection	inc/stm32f10x_tim.h	/^  uint16_t TIM_ICSelection;  \/*!< Specifies the input.$/;"	m	struct:__anon20	access:public
TIM_ICSelection_DirectTI	inc/stm32f10x_tim.h	564;"	d
TIM_ICSelection_IndirectTI	inc/stm32f10x_tim.h	566;"	d
TIM_ICSelection_TRC	inc/stm32f10x_tim.h	568;"	d
TIM_ICStructInit	inc/stm32f10x_tim.h	/^void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct);$/;"	p	signature:(TIM_ICInitTypeDef* TIM_ICInitStruct)
TIM_ICStructInit	src/stm32f10x_tim.c	/^void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)$/;"	f	signature:(TIM_ICInitTypeDef* TIM_ICInitStruct)
TIM_ITConfig	inc/stm32f10x_tim.h	/^void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
TIM_ITConfig	src/stm32f10x_tim.c	/^void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
TIM_ITRxExternalClockConfig	inc/stm32f10x_tim.h	/^void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
TIM_ITRxExternalClockConfig	src/stm32f10x_tim.c	/^void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
TIM_IT_Break	inc/stm32f10x_tim.h	603;"	d
TIM_IT_CC1	inc/stm32f10x_tim.h	597;"	d
TIM_IT_CC2	inc/stm32f10x_tim.h	598;"	d
TIM_IT_CC3	inc/stm32f10x_tim.h	599;"	d
TIM_IT_CC4	inc/stm32f10x_tim.h	600;"	d
TIM_IT_COM	inc/stm32f10x_tim.h	601;"	d
TIM_IT_Trigger	inc/stm32f10x_tim.h	602;"	d
TIM_IT_Update	inc/stm32f10x_tim.h	596;"	d
TIM_InternalClockConfig	inc/stm32f10x_tim.h	/^void TIM_InternalClockConfig(TIM_TypeDef* TIMx);$/;"	p	signature:(TIM_TypeDef* TIMx)
TIM_InternalClockConfig	src/stm32f10x_tim.c	/^void TIM_InternalClockConfig(TIM_TypeDef* TIMx)$/;"	f	signature:(TIM_TypeDef* TIMx)
TIM_LOCKLevel	inc/stm32f10x_tim.h	/^  uint16_t TIM_LOCKLevel;        \/*!< Specifies the LOCK level parameters.$/;"	m	struct:__anon21	access:public
TIM_LOCKLevel_1	inc/stm32f10x_tim.h	489;"	d
TIM_LOCKLevel_2	inc/stm32f10x_tim.h	490;"	d
TIM_LOCKLevel_3	inc/stm32f10x_tim.h	491;"	d
TIM_LOCKLevel_OFF	inc/stm32f10x_tim.h	488;"	d
TIM_MasterSlaveMode_Disable	inc/stm32f10x_tim.h	947;"	d
TIM_MasterSlaveMode_Enable	inc/stm32f10x_tim.h	946;"	d
TIM_OC1FastConfig	inc/stm32f10x_tim.h	/^void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
TIM_OC1FastConfig	src/stm32f10x_tim.c	/^void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
TIM_OC1Init	inc/stm32f10x_tim.h	/^void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct);$/;"	p	signature:(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
TIM_OC1Init	src/stm32f10x_tim.c	/^void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)$/;"	f	signature:(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
TIM_OC1NPolarityConfig	inc/stm32f10x_tim.h	/^void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
TIM_OC1NPolarityConfig	src/stm32f10x_tim.c	/^void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
TIM_OC1PolarityConfig	inc/stm32f10x_tim.h	/^void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
TIM_OC1PolarityConfig	src/stm32f10x_tim.c	/^void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
TIM_OC1PreloadConfig	inc/stm32f10x_tim.h	/^void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
TIM_OC1PreloadConfig	src/stm32f10x_tim.c	/^void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
TIM_OC2FastConfig	inc/stm32f10x_tim.h	/^void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
TIM_OC2FastConfig	src/stm32f10x_tim.c	/^void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
TIM_OC2Init	inc/stm32f10x_tim.h	/^void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct);$/;"	p	signature:(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
TIM_OC2Init	src/stm32f10x_tim.c	/^void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)$/;"	f	signature:(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
TIM_OC2NPolarityConfig	inc/stm32f10x_tim.h	/^void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
TIM_OC2NPolarityConfig	src/stm32f10x_tim.c	/^void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
TIM_OC2PolarityConfig	inc/stm32f10x_tim.h	/^void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
TIM_OC2PolarityConfig	src/stm32f10x_tim.c	/^void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
TIM_OC2PreloadConfig	inc/stm32f10x_tim.h	/^void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
TIM_OC2PreloadConfig	src/stm32f10x_tim.c	/^void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
TIM_OC3FastConfig	inc/stm32f10x_tim.h	/^void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
TIM_OC3FastConfig	src/stm32f10x_tim.c	/^void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
TIM_OC3Init	inc/stm32f10x_tim.h	/^void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct);$/;"	p	signature:(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
TIM_OC3Init	src/stm32f10x_tim.c	/^void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)$/;"	f	signature:(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
TIM_OC3NPolarityConfig	inc/stm32f10x_tim.h	/^void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
TIM_OC3NPolarityConfig	src/stm32f10x_tim.c	/^void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
TIM_OC3PolarityConfig	inc/stm32f10x_tim.h	/^void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
TIM_OC3PolarityConfig	src/stm32f10x_tim.c	/^void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
TIM_OC3PreloadConfig	inc/stm32f10x_tim.h	/^void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
TIM_OC3PreloadConfig	src/stm32f10x_tim.c	/^void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
TIM_OC4FastConfig	inc/stm32f10x_tim.h	/^void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
TIM_OC4FastConfig	src/stm32f10x_tim.c	/^void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
TIM_OC4Init	inc/stm32f10x_tim.h	/^void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct);$/;"	p	signature:(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
TIM_OC4Init	src/stm32f10x_tim.c	/^void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)$/;"	f	signature:(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
TIM_OC4PolarityConfig	inc/stm32f10x_tim.h	/^void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
TIM_OC4PolarityConfig	src/stm32f10x_tim.c	/^void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
TIM_OC4PreloadConfig	inc/stm32f10x_tim.h	/^void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
TIM_OC4PreloadConfig	src/stm32f10x_tim.c	/^void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
TIM_OCClear_Disable	inc/stm32f10x_tim.h	895;"	d
TIM_OCClear_Enable	inc/stm32f10x_tim.h	894;"	d
TIM_OCFast_Disable	inc/stm32f10x_tim.h	882;"	d
TIM_OCFast_Enable	inc/stm32f10x_tim.h	881;"	d
TIM_OCIdleState	inc/stm32f10x_tim.h	/^  uint16_t TIM_OCIdleState;   \/*!< Specifies the TIM Output Compare pin state during Idle state.$/;"	m	struct:__anon19	access:public
TIM_OCIdleState_Reset	inc/stm32f10x_tim.h	529;"	d
TIM_OCIdleState_Set	inc/stm32f10x_tim.h	528;"	d
TIM_OCInitTypeDef	inc/stm32f10x_tim.h	/^} TIM_OCInitTypeDef;$/;"	t	typeref:struct:__anon19
TIM_OCMode	inc/stm32f10x_tim.h	/^  uint16_t TIM_OCMode;        \/*!< Specifies the TIM mode.$/;"	m	struct:__anon19	access:public
TIM_OCMode_Active	inc/stm32f10x_tim.h	288;"	d
TIM_OCMode_Inactive	inc/stm32f10x_tim.h	289;"	d
TIM_OCMode_PWM1	inc/stm32f10x_tim.h	291;"	d
TIM_OCMode_PWM2	inc/stm32f10x_tim.h	292;"	d
TIM_OCMode_Timing	inc/stm32f10x_tim.h	287;"	d
TIM_OCMode_Toggle	inc/stm32f10x_tim.h	290;"	d
TIM_OCNIdleState	inc/stm32f10x_tim.h	/^  uint16_t TIM_OCNIdleState;  \/*!< Specifies the TIM Output Compare pin state during Idle state.$/;"	m	struct:__anon19	access:public
TIM_OCNIdleState_Reset	inc/stm32f10x_tim.h	541;"	d
TIM_OCNIdleState_Set	inc/stm32f10x_tim.h	540;"	d
TIM_OCNPolarity	inc/stm32f10x_tim.h	/^  uint16_t TIM_OCNPolarity;   \/*!< Specifies the complementary output polarity.$/;"	m	struct:__anon19	access:public
TIM_OCNPolarity_High	inc/stm32f10x_tim.h	392;"	d
TIM_OCNPolarity_Low	inc/stm32f10x_tim.h	393;"	d
TIM_OCPolarity	inc/stm32f10x_tim.h	/^  uint16_t TIM_OCPolarity;    \/*!< Specifies the output polarity.$/;"	m	struct:__anon19	access:public
TIM_OCPolarity_High	inc/stm32f10x_tim.h	380;"	d
TIM_OCPolarity_Low	inc/stm32f10x_tim.h	381;"	d
TIM_OCPreload_Disable	inc/stm32f10x_tim.h	870;"	d
TIM_OCPreload_Enable	inc/stm32f10x_tim.h	869;"	d
TIM_OCStructInit	inc/stm32f10x_tim.h	/^void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct);$/;"	p	signature:(TIM_OCInitTypeDef* TIM_OCInitStruct)
TIM_OCStructInit	src/stm32f10x_tim.c	/^void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)$/;"	f	signature:(TIM_OCInitTypeDef* TIM_OCInitStruct)
TIM_OPMode_Repetitive	inc/stm32f10x_tim.h	316;"	d
TIM_OPMode_Single	inc/stm32f10x_tim.h	315;"	d
TIM_OSSIState	inc/stm32f10x_tim.h	/^  uint16_t TIM_OSSIState;        \/*!< Specifies the Off-State used in Idle state.$/;"	m	struct:__anon21	access:public
TIM_OSSIState_Disable	inc/stm32f10x_tim.h	505;"	d
TIM_OSSIState_Enable	inc/stm32f10x_tim.h	504;"	d
TIM_OSSRState	inc/stm32f10x_tim.h	/^  uint16_t TIM_OSSRState;        \/*!< Specifies the Off-State selection used in Run mode.$/;"	m	struct:__anon21	access:public
TIM_OSSRState_Disable	inc/stm32f10x_tim.h	517;"	d
TIM_OSSRState_Enable	inc/stm32f10x_tim.h	516;"	d
TIM_OutputNState	inc/stm32f10x_tim.h	/^  uint16_t TIM_OutputNState;  \/*!< Specifies the TIM complementary Output Compare state.$/;"	m	struct:__anon19	access:public
TIM_OutputNState_Disable	inc/stm32f10x_tim.h	416;"	d
TIM_OutputNState_Enable	inc/stm32f10x_tim.h	417;"	d
TIM_OutputState	inc/stm32f10x_tim.h	/^  uint16_t TIM_OutputState;   \/*!< Specifies the TIM Output Compare state.$/;"	m	struct:__anon19	access:public
TIM_OutputState_Disable	inc/stm32f10x_tim.h	404;"	d
TIM_OutputState_Enable	inc/stm32f10x_tim.h	405;"	d
TIM_PSCReloadMode_Immediate	inc/stm32f10x_tim.h	799;"	d
TIM_PSCReloadMode_Update	inc/stm32f10x_tim.h	798;"	d
TIM_PWMIConfig	inc/stm32f10x_tim.h	/^void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct);$/;"	p	signature:(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
TIM_PWMIConfig	src/stm32f10x_tim.c	/^void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)$/;"	f	signature:(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
TIM_Period	inc/stm32f10x_tim.h	/^  uint16_t TIM_Period;            \/*!< Specifies the period value to be loaded into the active$/;"	m	struct:__anon18	access:public
TIM_Prescaler	inc/stm32f10x_tim.h	/^  uint16_t TIM_Prescaler;         \/*!< Specifies the prescaler value used to divide the TIM clock.$/;"	m	struct:__anon18	access:public
TIM_PrescalerConfig	inc/stm32f10x_tim.h	/^void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
TIM_PrescalerConfig	src/stm32f10x_tim.c	/^void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
TIM_Pulse	inc/stm32f10x_tim.h	/^  uint16_t TIM_Pulse;         \/*!< Specifies the pulse value to be loaded into the Capture Compare Register. $/;"	m	struct:__anon19	access:public
TIM_RepetitionCounter	inc/stm32f10x_tim.h	/^  uint8_t TIM_RepetitionCounter;  \/*!< Specifies the repetition counter value. Each time the RCR downcounter$/;"	m	struct:__anon18	access:public
TIM_SelectCCDMA	inc/stm32f10x_tim.h	/^void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState);$/;"	p	signature:(TIM_TypeDef* TIMx, FunctionalState NewState)
TIM_SelectCCDMA	src/stm32f10x_tim.c	/^void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)$/;"	f	signature:(TIM_TypeDef* TIMx, FunctionalState NewState)
TIM_SelectCOM	inc/stm32f10x_tim.h	/^void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState);$/;"	p	signature:(TIM_TypeDef* TIMx, FunctionalState NewState)
TIM_SelectCOM	src/stm32f10x_tim.c	/^void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)$/;"	f	signature:(TIM_TypeDef* TIMx, FunctionalState NewState)
TIM_SelectHallSensor	inc/stm32f10x_tim.h	/^void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState);$/;"	p	signature:(TIM_TypeDef* TIMx, FunctionalState NewState)
TIM_SelectHallSensor	src/stm32f10x_tim.c	/^void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)$/;"	f	signature:(TIM_TypeDef* TIMx, FunctionalState NewState)
TIM_SelectInputTrigger	inc/stm32f10x_tim.h	/^void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
TIM_SelectInputTrigger	src/stm32f10x_tim.c	/^void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
TIM_SelectMasterSlaveMode	inc/stm32f10x_tim.h	/^void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
TIM_SelectMasterSlaveMode	src/stm32f10x_tim.c	/^void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
TIM_SelectOCxM	inc/stm32f10x_tim.h	/^void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
TIM_SelectOCxM	src/stm32f10x_tim.c	/^void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
TIM_SelectOnePulseMode	inc/stm32f10x_tim.h	/^void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
TIM_SelectOnePulseMode	src/stm32f10x_tim.c	/^void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
TIM_SelectOutputTrigger	inc/stm32f10x_tim.h	/^void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
TIM_SelectOutputTrigger	src/stm32f10x_tim.c	/^void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
TIM_SelectSlaveMode	inc/stm32f10x_tim.h	/^void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
TIM_SelectSlaveMode	src/stm32f10x_tim.c	/^void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
TIM_SetAutoreload	inc/stm32f10x_tim.h	/^void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint16_t Autoreload);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t Autoreload)
TIM_SetAutoreload	src/stm32f10x_tim.c	/^void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint16_t Autoreload)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t Autoreload)
TIM_SetClockDivision	inc/stm32f10x_tim.h	/^void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
TIM_SetClockDivision	src/stm32f10x_tim.c	/^void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
TIM_SetCompare1	inc/stm32f10x_tim.h	/^void TIM_SetCompare1(TIM_TypeDef* TIMx, uint16_t Compare1);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t Compare1)
TIM_SetCompare1	src/stm32f10x_tim.c	/^void TIM_SetCompare1(TIM_TypeDef* TIMx, uint16_t Compare1)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t Compare1)
TIM_SetCompare2	inc/stm32f10x_tim.h	/^void TIM_SetCompare2(TIM_TypeDef* TIMx, uint16_t Compare2);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t Compare2)
TIM_SetCompare2	src/stm32f10x_tim.c	/^void TIM_SetCompare2(TIM_TypeDef* TIMx, uint16_t Compare2)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t Compare2)
TIM_SetCompare3	inc/stm32f10x_tim.h	/^void TIM_SetCompare3(TIM_TypeDef* TIMx, uint16_t Compare3);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t Compare3)
TIM_SetCompare3	src/stm32f10x_tim.c	/^void TIM_SetCompare3(TIM_TypeDef* TIMx, uint16_t Compare3)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t Compare3)
TIM_SetCompare4	inc/stm32f10x_tim.h	/^void TIM_SetCompare4(TIM_TypeDef* TIMx, uint16_t Compare4);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t Compare4)
TIM_SetCompare4	src/stm32f10x_tim.c	/^void TIM_SetCompare4(TIM_TypeDef* TIMx, uint16_t Compare4)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t Compare4)
TIM_SetCounter	inc/stm32f10x_tim.h	/^void TIM_SetCounter(TIM_TypeDef* TIMx, uint16_t Counter);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t Counter)
TIM_SetCounter	src/stm32f10x_tim.c	/^void TIM_SetCounter(TIM_TypeDef* TIMx, uint16_t Counter)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t Counter)
TIM_SetIC1Prescaler	inc/stm32f10x_tim.h	/^void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
TIM_SetIC1Prescaler	src/stm32f10x_tim.c	/^void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
TIM_SetIC2Prescaler	inc/stm32f10x_tim.h	/^void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
TIM_SetIC2Prescaler	src/stm32f10x_tim.c	/^void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
TIM_SetIC3Prescaler	inc/stm32f10x_tim.h	/^void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
TIM_SetIC3Prescaler	src/stm32f10x_tim.c	/^void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
TIM_SetIC4Prescaler	inc/stm32f10x_tim.h	/^void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
TIM_SetIC4Prescaler	src/stm32f10x_tim.c	/^void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
TIM_SlaveMode_External1	inc/stm32f10x_tim.h	933;"	d
TIM_SlaveMode_Gated	inc/stm32f10x_tim.h	931;"	d
TIM_SlaveMode_Reset	inc/stm32f10x_tim.h	930;"	d
TIM_SlaveMode_Trigger	inc/stm32f10x_tim.h	932;"	d
TIM_TIxExternalCLK1Source_TI1	inc/stm32f10x_tim.h	773;"	d
TIM_TIxExternalCLK1Source_TI1ED	inc/stm32f10x_tim.h	775;"	d
TIM_TIxExternalCLK1Source_TI2	inc/stm32f10x_tim.h	774;"	d
TIM_TIxExternalClockConfig	inc/stm32f10x_tim.h	/^void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource, uint16_t TIM_ICPolarity, uint16_t ICFilter)
TIM_TIxExternalClockConfig	src/stm32f10x_tim.c	/^void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource, uint16_t TIM_ICPolarity, uint16_t ICFilter)
TIM_TRGOSource_Enable	inc/stm32f10x_tim.h	907;"	d
TIM_TRGOSource_OC1	inc/stm32f10x_tim.h	909;"	d
TIM_TRGOSource_OC1Ref	inc/stm32f10x_tim.h	910;"	d
TIM_TRGOSource_OC2Ref	inc/stm32f10x_tim.h	911;"	d
TIM_TRGOSource_OC3Ref	inc/stm32f10x_tim.h	912;"	d
TIM_TRGOSource_OC4Ref	inc/stm32f10x_tim.h	913;"	d
TIM_TRGOSource_Reset	inc/stm32f10x_tim.h	906;"	d
TIM_TRGOSource_Update	inc/stm32f10x_tim.h	908;"	d
TIM_TS_ETRF	inc/stm32f10x_tim.h	752;"	d
TIM_TS_ITR0	inc/stm32f10x_tim.h	745;"	d
TIM_TS_ITR1	inc/stm32f10x_tim.h	746;"	d
TIM_TS_ITR2	inc/stm32f10x_tim.h	747;"	d
TIM_TS_ITR3	inc/stm32f10x_tim.h	748;"	d
TIM_TS_TI1FP1	inc/stm32f10x_tim.h	750;"	d
TIM_TS_TI1F_ED	inc/stm32f10x_tim.h	749;"	d
TIM_TS_TI2FP2	inc/stm32f10x_tim.h	751;"	d
TIM_TimeBaseInit	inc/stm32f10x_tim.h	/^void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct);$/;"	p	signature:(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
TIM_TimeBaseInit	src/stm32f10x_tim.c	/^void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)$/;"	f	signature:(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
TIM_TimeBaseInitTypeDef	inc/stm32f10x_tim.h	/^} TIM_TimeBaseInitTypeDef;       $/;"	t	typeref:struct:__anon18
TIM_TimeBaseStructInit	inc/stm32f10x_tim.h	/^void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct);$/;"	p	signature:(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
TIM_TimeBaseStructInit	src/stm32f10x_tim.c	/^void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)$/;"	f	signature:(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
TIM_UpdateDisableConfig	inc/stm32f10x_tim.h	/^void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState);$/;"	p	signature:(TIM_TypeDef* TIMx, FunctionalState NewState)
TIM_UpdateDisableConfig	src/stm32f10x_tim.c	/^void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)$/;"	f	signature:(TIM_TypeDef* TIMx, FunctionalState NewState)
TIM_UpdateRequestConfig	inc/stm32f10x_tim.h	/^void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource);$/;"	p	signature:(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
TIM_UpdateRequestConfig	src/stm32f10x_tim.c	/^void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)$/;"	f	signature:(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
TIM_UpdateSource_Global	inc/stm32f10x_tim.h	855;"	d
TIM_UpdateSource_Regular	inc/stm32f10x_tim.h	858;"	d
TMIDxR_TXRQ	src/stm32f10x_can.c	93;"	d	file:
TPAL_BitNumber	src/stm32f10x_bkp.c	53;"	d	file:
TPE_BitNumber	src/stm32f10x_bkp.c	57;"	d	file:
TPIE_BitNumber	src/stm32f10x_bkp.c	64;"	d	file:
TSOM_BitNumber	src/stm32f10x_cec.c	65;"	d	file:
TSR_ABRQ0	src/stm32f10x_can.c	66;"	d	file:
TSR_ABRQ1	src/stm32f10x_can.c	69;"	d	file:
TSR_ABRQ2	src/stm32f10x_can.c	72;"	d	file:
TSR_RQCP0	src/stm32f10x_can.c	64;"	d	file:
TSR_RQCP1	src/stm32f10x_can.c	67;"	d	file:
TSR_RQCP2	src/stm32f10x_can.c	70;"	d	file:
TSR_TME0	src/stm32f10x_can.c	73;"	d	file:
TSR_TME1	src/stm32f10x_can.c	74;"	d	file:
TSR_TME2	src/stm32f10x_can.c	75;"	d	file:
TSR_TXOK0	src/stm32f10x_can.c	65;"	d	file:
TSR_TXOK1	src/stm32f10x_can.c	68;"	d	file:
TSR_TXOK2	src/stm32f10x_can.c	71;"	d	file:
USART_BaudRate	inc/stm32f10x_usart.h	/^  uint32_t USART_BaudRate;            \/*!< This member configures the USART communication baud rate.$/;"	m	struct:__anon1	access:public
USART_CPHA	inc/stm32f10x_usart.h	/^  uint16_t USART_CPHA;    \/*!< Specifies the clock transition on which the bit capture is made.$/;"	m	struct:__anon2	access:public
USART_CPHA_1Edge	inc/stm32f10x_usart.h	217;"	d
USART_CPHA_2Edge	inc/stm32f10x_usart.h	218;"	d
USART_CPOL	inc/stm32f10x_usart.h	/^  uint16_t USART_CPOL;    \/*!< Specifies the steady state value of the serial clock.$/;"	m	struct:__anon2	access:public
USART_CPOL_High	inc/stm32f10x_usart.h	206;"	d
USART_CPOL_Low	inc/stm32f10x_usart.h	205;"	d
USART_ClearFlag	inc/stm32f10x_usart.h	/^void USART_ClearFlag(USART_TypeDef* USARTx, uint16_t USART_FLAG);$/;"	p	signature:(USART_TypeDef* USARTx, uint16_t USART_FLAG)
USART_ClearFlag	src/stm32f10x_usart.c	/^void USART_ClearFlag(USART_TypeDef* USARTx, uint16_t USART_FLAG)$/;"	f	signature:(USART_TypeDef* USARTx, uint16_t USART_FLAG)
USART_ClearITPendingBit	inc/stm32f10x_usart.h	/^void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint16_t USART_IT);$/;"	p	signature:(USART_TypeDef* USARTx, uint16_t USART_IT)
USART_ClearITPendingBit	src/stm32f10x_usart.c	/^void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint16_t USART_IT)$/;"	f	signature:(USART_TypeDef* USARTx, uint16_t USART_IT)
USART_Clock	inc/stm32f10x_usart.h	/^  uint16_t USART_Clock;   \/*!< Specifies whether the USART clock is enabled or disabled.$/;"	m	struct:__anon2	access:public
USART_ClockInit	inc/stm32f10x_usart.h	/^void USART_ClockInit(USART_TypeDef* USARTx, USART_ClockInitTypeDef* USART_ClockInitStruct);$/;"	p	signature:(USART_TypeDef* USARTx, USART_ClockInitTypeDef* USART_ClockInitStruct)
USART_ClockInit	src/stm32f10x_usart.c	/^void USART_ClockInit(USART_TypeDef* USARTx, USART_ClockInitTypeDef* USART_ClockInitStruct)$/;"	f	signature:(USART_TypeDef* USARTx, USART_ClockInitTypeDef* USART_ClockInitStruct)
USART_ClockInitTypeDef	inc/stm32f10x_usart.h	/^} USART_ClockInitTypeDef;$/;"	t	typeref:struct:__anon2
USART_ClockStructInit	inc/stm32f10x_usart.h	/^void USART_ClockStructInit(USART_ClockInitTypeDef* USART_ClockInitStruct);$/;"	p	signature:(USART_ClockInitTypeDef* USART_ClockInitStruct)
USART_ClockStructInit	src/stm32f10x_usart.c	/^void USART_ClockStructInit(USART_ClockInitTypeDef* USART_ClockInitStruct)$/;"	f	signature:(USART_ClockInitTypeDef* USART_ClockInitStruct)
USART_Clock_Disable	inc/stm32f10x_usart.h	193;"	d
USART_Clock_Enable	inc/stm32f10x_usart.h	194;"	d
USART_Cmd	inc/stm32f10x_usart.h	/^void USART_Cmd(USART_TypeDef* USARTx, FunctionalState NewState);$/;"	p	signature:(USART_TypeDef* USARTx, FunctionalState NewState)
USART_Cmd	src/stm32f10x_usart.c	/^void USART_Cmd(USART_TypeDef* USARTx, FunctionalState NewState)$/;"	f	signature:(USART_TypeDef* USARTx, FunctionalState NewState)
USART_DMACmd	inc/stm32f10x_usart.h	/^void USART_DMACmd(USART_TypeDef* USARTx, uint16_t USART_DMAReq, FunctionalState NewState);$/;"	p	signature:(USART_TypeDef* USARTx, uint16_t USART_DMAReq, FunctionalState NewState)
USART_DMACmd	src/stm32f10x_usart.c	/^void USART_DMACmd(USART_TypeDef* USARTx, uint16_t USART_DMAReq, FunctionalState NewState)$/;"	f	signature:(USART_TypeDef* USARTx, uint16_t USART_DMAReq, FunctionalState NewState)
USART_DMAReq_Rx	inc/stm32f10x_usart.h	272;"	d
USART_DMAReq_Tx	inc/stm32f10x_usart.h	271;"	d
USART_DeInit	inc/stm32f10x_usart.h	/^void USART_DeInit(USART_TypeDef* USARTx);$/;"	p	signature:(USART_TypeDef* USARTx)
USART_DeInit	src/stm32f10x_usart.c	/^void USART_DeInit(USART_TypeDef* USARTx)$/;"	f	signature:(USART_TypeDef* USARTx)
USART_FLAG_CTS	inc/stm32f10x_usart.h	320;"	d
USART_FLAG_FE	inc/stm32f10x_usart.h	328;"	d
USART_FLAG_IDLE	inc/stm32f10x_usart.h	325;"	d
USART_FLAG_LBD	inc/stm32f10x_usart.h	321;"	d
USART_FLAG_NE	inc/stm32f10x_usart.h	327;"	d
USART_FLAG_ORE	inc/stm32f10x_usart.h	326;"	d
USART_FLAG_PE	inc/stm32f10x_usart.h	329;"	d
USART_FLAG_RXNE	inc/stm32f10x_usart.h	324;"	d
USART_FLAG_TC	inc/stm32f10x_usart.h	323;"	d
USART_FLAG_TXE	inc/stm32f10x_usart.h	322;"	d
USART_GetFlagStatus	inc/stm32f10x_usart.h	/^FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG);$/;"	p	signature:(USART_TypeDef* USARTx, uint16_t USART_FLAG)
USART_GetFlagStatus	src/stm32f10x_usart.c	/^FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG)$/;"	f	signature:(USART_TypeDef* USARTx, uint16_t USART_FLAG)
USART_GetITStatus	inc/stm32f10x_usart.h	/^ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint16_t USART_IT);$/;"	p	signature:(USART_TypeDef* USARTx, uint16_t USART_IT)
USART_GetITStatus	src/stm32f10x_usart.c	/^ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint16_t USART_IT)$/;"	f	signature:(USART_TypeDef* USARTx, uint16_t USART_IT)
USART_HalfDuplexCmd	inc/stm32f10x_usart.h	/^void USART_HalfDuplexCmd(USART_TypeDef* USARTx, FunctionalState NewState);$/;"	p	signature:(USART_TypeDef* USARTx, FunctionalState NewState)
USART_HalfDuplexCmd	src/stm32f10x_usart.c	/^void USART_HalfDuplexCmd(USART_TypeDef* USARTx, FunctionalState NewState)$/;"	f	signature:(USART_TypeDef* USARTx, FunctionalState NewState)
USART_HardwareFlowControl	inc/stm32f10x_usart.h	/^  uint16_t USART_HardwareFlowControl; \/*!< Specifies wether the hardware flow control mode is enabled$/;"	m	struct:__anon1	access:public
USART_HardwareFlowControl_CTS	inc/stm32f10x_usart.h	179;"	d
USART_HardwareFlowControl_None	inc/stm32f10x_usart.h	177;"	d
USART_HardwareFlowControl_RTS	inc/stm32f10x_usart.h	178;"	d
USART_HardwareFlowControl_RTS_CTS	inc/stm32f10x_usart.h	180;"	d
USART_ITConfig	inc/stm32f10x_usart.h	/^void USART_ITConfig(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState);$/;"	p	signature:(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState)
USART_ITConfig	src/stm32f10x_usart.c	/^void USART_ITConfig(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState)$/;"	f	signature:(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState)
USART_IT_CTS	inc/stm32f10x_usart.h	247;"	d
USART_IT_ERR	inc/stm32f10x_usart.h	248;"	d
USART_IT_FE	inc/stm32f10x_usart.h	251;"	d
USART_IT_IDLE	inc/stm32f10x_usart.h	245;"	d
USART_IT_LBD	inc/stm32f10x_usart.h	246;"	d
USART_IT_NE	inc/stm32f10x_usart.h	250;"	d
USART_IT_ORE	inc/stm32f10x_usart.h	249;"	d
USART_IT_PE	inc/stm32f10x_usart.h	241;"	d
USART_IT_RXNE	inc/stm32f10x_usart.h	244;"	d
USART_IT_TC	inc/stm32f10x_usart.h	243;"	d
USART_IT_TXE	inc/stm32f10x_usart.h	242;"	d
USART_Init	inc/stm32f10x_usart.h	/^void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct);$/;"	p	signature:(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)
USART_Init	src/stm32f10x_usart.c	/^void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)$/;"	f	signature:(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)
USART_InitTypeDef	inc/stm32f10x_usart.h	/^} USART_InitTypeDef;$/;"	t	typeref:struct:__anon1
USART_IrDACmd	inc/stm32f10x_usart.h	/^void USART_IrDACmd(USART_TypeDef* USARTx, FunctionalState NewState);$/;"	p	signature:(USART_TypeDef* USARTx, FunctionalState NewState)
USART_IrDACmd	src/stm32f10x_usart.c	/^void USART_IrDACmd(USART_TypeDef* USARTx, FunctionalState NewState)$/;"	f	signature:(USART_TypeDef* USARTx, FunctionalState NewState)
USART_IrDAConfig	inc/stm32f10x_usart.h	/^void USART_IrDAConfig(USART_TypeDef* USARTx, uint16_t USART_IrDAMode);$/;"	p	signature:(USART_TypeDef* USARTx, uint16_t USART_IrDAMode)
USART_IrDAConfig	src/stm32f10x_usart.c	/^void USART_IrDAConfig(USART_TypeDef* USARTx, uint16_t USART_IrDAMode)$/;"	f	signature:(USART_TypeDef* USARTx, uint16_t USART_IrDAMode)
USART_IrDAMode_LowPower	inc/stm32f10x_usart.h	308;"	d
USART_IrDAMode_Normal	inc/stm32f10x_usart.h	309;"	d
USART_LINBreakDetectLengthConfig	inc/stm32f10x_usart.h	/^void USART_LINBreakDetectLengthConfig(USART_TypeDef* USARTx, uint16_t USART_LINBreakDetectLength);$/;"	p	signature:(USART_TypeDef* USARTx, uint16_t USART_LINBreakDetectLength)
USART_LINBreakDetectLengthConfig	src/stm32f10x_usart.c	/^void USART_LINBreakDetectLengthConfig(USART_TypeDef* USARTx, uint16_t USART_LINBreakDetectLength)$/;"	f	signature:(USART_TypeDef* USARTx, uint16_t USART_LINBreakDetectLength)
USART_LINBreakDetectLength_10b	inc/stm32f10x_usart.h	295;"	d
USART_LINBreakDetectLength_11b	inc/stm32f10x_usart.h	296;"	d
USART_LINCmd	inc/stm32f10x_usart.h	/^void USART_LINCmd(USART_TypeDef* USARTx, FunctionalState NewState);$/;"	p	signature:(USART_TypeDef* USARTx, FunctionalState NewState)
USART_LINCmd	src/stm32f10x_usart.c	/^void USART_LINCmd(USART_TypeDef* USARTx, FunctionalState NewState)$/;"	f	signature:(USART_TypeDef* USARTx, FunctionalState NewState)
USART_LastBit	inc/stm32f10x_usart.h	/^  uint16_t USART_LastBit; \/*!< Specifies whether the clock pulse corresponding to the last transmitted$/;"	m	struct:__anon2	access:public
USART_LastBit_Disable	inc/stm32f10x_usart.h	229;"	d
USART_LastBit_Enable	inc/stm32f10x_usart.h	230;"	d
USART_Mode	inc/stm32f10x_usart.h	/^  uint16_t USART_Mode;                \/*!< Specifies wether the Receive or Transmit mode is enabled or disabled.$/;"	m	struct:__anon1	access:public
USART_Mode_Rx	inc/stm32f10x_usart.h	167;"	d
USART_Mode_Tx	inc/stm32f10x_usart.h	168;"	d
USART_OneBitMethodCmd	inc/stm32f10x_usart.h	/^void USART_OneBitMethodCmd(USART_TypeDef* USARTx, FunctionalState NewState);$/;"	p	signature:(USART_TypeDef* USARTx, FunctionalState NewState)
USART_OneBitMethodCmd	src/stm32f10x_usart.c	/^void USART_OneBitMethodCmd(USART_TypeDef* USARTx, FunctionalState NewState)$/;"	f	signature:(USART_TypeDef* USARTx, FunctionalState NewState)
USART_OverSampling8Cmd	inc/stm32f10x_usart.h	/^void USART_OverSampling8Cmd(USART_TypeDef* USARTx, FunctionalState NewState);$/;"	p	signature:(USART_TypeDef* USARTx, FunctionalState NewState)
USART_OverSampling8Cmd	src/stm32f10x_usart.c	/^void USART_OverSampling8Cmd(USART_TypeDef* USARTx, FunctionalState NewState)$/;"	f	signature:(USART_TypeDef* USARTx, FunctionalState NewState)
USART_Parity	inc/stm32f10x_usart.h	/^  uint16_t USART_Parity;              \/*!< Specifies the parity mode.$/;"	m	struct:__anon1	access:public
USART_Parity_Even	inc/stm32f10x_usart.h	154;"	d
USART_Parity_No	inc/stm32f10x_usart.h	153;"	d
USART_Parity_Odd	inc/stm32f10x_usart.h	155;"	d
USART_ReceiveData	inc/stm32f10x_usart.h	/^uint16_t USART_ReceiveData(USART_TypeDef* USARTx);$/;"	p	signature:(USART_TypeDef* USARTx)
USART_ReceiveData	src/stm32f10x_usart.c	/^uint16_t USART_ReceiveData(USART_TypeDef* USARTx)$/;"	f	signature:(USART_TypeDef* USARTx)
USART_ReceiverWakeUpCmd	inc/stm32f10x_usart.h	/^void USART_ReceiverWakeUpCmd(USART_TypeDef* USARTx, FunctionalState NewState);$/;"	p	signature:(USART_TypeDef* USARTx, FunctionalState NewState)
USART_ReceiverWakeUpCmd	src/stm32f10x_usart.c	/^void USART_ReceiverWakeUpCmd(USART_TypeDef* USARTx, FunctionalState NewState)$/;"	f	signature:(USART_TypeDef* USARTx, FunctionalState NewState)
USART_SendBreak	inc/stm32f10x_usart.h	/^void USART_SendBreak(USART_TypeDef* USARTx);$/;"	p	signature:(USART_TypeDef* USARTx)
USART_SendBreak	src/stm32f10x_usart.c	/^void USART_SendBreak(USART_TypeDef* USARTx)$/;"	f	signature:(USART_TypeDef* USARTx)
USART_SendData	inc/stm32f10x_usart.h	/^void USART_SendData(USART_TypeDef* USARTx, uint16_t Data);$/;"	p	signature:(USART_TypeDef* USARTx, uint16_t Data)
USART_SendData	src/stm32f10x_usart.c	/^void USART_SendData(USART_TypeDef* USARTx, uint16_t Data)$/;"	f	signature:(USART_TypeDef* USARTx, uint16_t Data)
USART_SetAddress	inc/stm32f10x_usart.h	/^void USART_SetAddress(USART_TypeDef* USARTx, uint8_t USART_Address);$/;"	p	signature:(USART_TypeDef* USARTx, uint8_t USART_Address)
USART_SetAddress	src/stm32f10x_usart.c	/^void USART_SetAddress(USART_TypeDef* USARTx, uint8_t USART_Address)$/;"	f	signature:(USART_TypeDef* USARTx, uint8_t USART_Address)
USART_SetGuardTime	inc/stm32f10x_usart.h	/^void USART_SetGuardTime(USART_TypeDef* USARTx, uint8_t USART_GuardTime);$/;"	p	signature:(USART_TypeDef* USARTx, uint8_t USART_GuardTime)
USART_SetGuardTime	src/stm32f10x_usart.c	/^void USART_SetGuardTime(USART_TypeDef* USARTx, uint8_t USART_GuardTime)$/;"	f	signature:(USART_TypeDef* USARTx, uint8_t USART_GuardTime)
USART_SetPrescaler	inc/stm32f10x_usart.h	/^void USART_SetPrescaler(USART_TypeDef* USARTx, uint8_t USART_Prescaler);$/;"	p	signature:(USART_TypeDef* USARTx, uint8_t USART_Prescaler)
USART_SetPrescaler	src/stm32f10x_usart.c	/^void USART_SetPrescaler(USART_TypeDef* USARTx, uint8_t USART_Prescaler)$/;"	f	signature:(USART_TypeDef* USARTx, uint8_t USART_Prescaler)
USART_SmartCardCmd	inc/stm32f10x_usart.h	/^void USART_SmartCardCmd(USART_TypeDef* USARTx, FunctionalState NewState);$/;"	p	signature:(USART_TypeDef* USARTx, FunctionalState NewState)
USART_SmartCardCmd	src/stm32f10x_usart.c	/^void USART_SmartCardCmd(USART_TypeDef* USARTx, FunctionalState NewState)$/;"	f	signature:(USART_TypeDef* USARTx, FunctionalState NewState)
USART_SmartCardNACKCmd	inc/stm32f10x_usart.h	/^void USART_SmartCardNACKCmd(USART_TypeDef* USARTx, FunctionalState NewState);$/;"	p	signature:(USART_TypeDef* USARTx, FunctionalState NewState)
USART_SmartCardNACKCmd	src/stm32f10x_usart.c	/^void USART_SmartCardNACKCmd(USART_TypeDef* USARTx, FunctionalState NewState)$/;"	f	signature:(USART_TypeDef* USARTx, FunctionalState NewState)
USART_StopBits	inc/stm32f10x_usart.h	/^  uint16_t USART_StopBits;            \/*!< Specifies the number of stop bits transmitted.$/;"	m	struct:__anon1	access:public
USART_StopBits_0_5	inc/stm32f10x_usart.h	138;"	d
USART_StopBits_1	inc/stm32f10x_usart.h	137;"	d
USART_StopBits_1_5	inc/stm32f10x_usart.h	140;"	d
USART_StopBits_2	inc/stm32f10x_usart.h	139;"	d
USART_StructInit	inc/stm32f10x_usart.h	/^void USART_StructInit(USART_InitTypeDef* USART_InitStruct);$/;"	p	signature:(USART_InitTypeDef* USART_InitStruct)
USART_StructInit	src/stm32f10x_usart.c	/^void USART_StructInit(USART_InitTypeDef* USART_InitStruct)$/;"	f	signature:(USART_InitTypeDef* USART_InitStruct)
USART_WakeUpConfig	inc/stm32f10x_usart.h	/^void USART_WakeUpConfig(USART_TypeDef* USARTx, uint16_t USART_WakeUp);$/;"	p	signature:(USART_TypeDef* USARTx, uint16_t USART_WakeUp)
USART_WakeUpConfig	src/stm32f10x_usart.c	/^void USART_WakeUpConfig(USART_TypeDef* USARTx, uint16_t USART_WakeUp)$/;"	f	signature:(USART_TypeDef* USARTx, uint16_t USART_WakeUp)
USART_WakeUp_AddressMark	inc/stm32f10x_usart.h	284;"	d
USART_WakeUp_IdleLine	inc/stm32f10x_usart.h	283;"	d
USART_WordLength	inc/stm32f10x_usart.h	/^  uint16_t USART_WordLength;          \/*!< Specifies the number of data bits transmitted or received in a frame.$/;"	m	struct:__anon1	access:public
USART_WordLength_8b	inc/stm32f10x_usart.h	124;"	d
USART_WordLength_9b	inc/stm32f10x_usart.h	125;"	d
USBPRE_BitNumber	src/stm32f10x_rcc.c	79;"	d	file:
WRP0_Mask	src/stm32f10x_flash.c	69;"	d	file:
WRP1_Mask	src/stm32f10x_flash.c	70;"	d	file:
WRP2_Mask	src/stm32f10x_flash.c	71;"	d	file:
WRP3_Mask	src/stm32f10x_flash.c	72;"	d	file:
WWDG_ClearFlag	inc/stm32f10x_wwdg.h	/^void WWDG_ClearFlag(void);$/;"	p	signature:(void)
WWDG_ClearFlag	src/stm32f10x_wwdg.c	/^void WWDG_ClearFlag(void)$/;"	f	signature:(void)
WWDG_DeInit	inc/stm32f10x_wwdg.h	/^void WWDG_DeInit(void);$/;"	p	signature:(void)
WWDG_DeInit	src/stm32f10x_wwdg.c	/^void WWDG_DeInit(void)$/;"	f	signature:(void)
WWDG_Enable	inc/stm32f10x_wwdg.h	/^void WWDG_Enable(uint8_t Counter);$/;"	p	signature:(uint8_t Counter)
WWDG_Enable	src/stm32f10x_wwdg.c	/^void WWDG_Enable(uint8_t Counter)$/;"	f	signature:(uint8_t Counter)
WWDG_EnableIT	inc/stm32f10x_wwdg.h	/^void WWDG_EnableIT(void);$/;"	p	signature:(void)
WWDG_EnableIT	src/stm32f10x_wwdg.c	/^void WWDG_EnableIT(void)$/;"	f	signature:(void)
WWDG_GetFlagStatus	inc/stm32f10x_wwdg.h	/^FlagStatus WWDG_GetFlagStatus(void);$/;"	p	signature:(void)
WWDG_GetFlagStatus	src/stm32f10x_wwdg.c	/^FlagStatus WWDG_GetFlagStatus(void)$/;"	f	signature:(void)
WWDG_OFFSET	src/stm32f10x_wwdg.c	47;"	d	file:
WWDG_Prescaler_1	inc/stm32f10x_wwdg.h	57;"	d
WWDG_Prescaler_2	inc/stm32f10x_wwdg.h	58;"	d
WWDG_Prescaler_4	inc/stm32f10x_wwdg.h	59;"	d
WWDG_Prescaler_8	inc/stm32f10x_wwdg.h	60;"	d
WWDG_SetCounter	inc/stm32f10x_wwdg.h	/^void WWDG_SetCounter(uint8_t Counter);$/;"	p	signature:(uint8_t Counter)
WWDG_SetCounter	src/stm32f10x_wwdg.c	/^void WWDG_SetCounter(uint8_t Counter)$/;"	f	signature:(uint8_t Counter)
WWDG_SetPrescaler	inc/stm32f10x_wwdg.h	/^void WWDG_SetPrescaler(uint32_t WWDG_Prescaler);$/;"	p	signature:(uint32_t WWDG_Prescaler)
WWDG_SetPrescaler	src/stm32f10x_wwdg.c	/^void WWDG_SetPrescaler(uint32_t WWDG_Prescaler)$/;"	f	signature:(uint32_t WWDG_Prescaler)
WWDG_SetWindowValue	inc/stm32f10x_wwdg.h	/^void WWDG_SetWindowValue(uint8_t WindowValue);$/;"	p	signature:(uint8_t WindowValue)
WWDG_SetWindowValue	src/stm32f10x_wwdg.c	/^void WWDG_SetWindowValue(uint8_t WindowValue)$/;"	f	signature:(uint8_t WindowValue)
__MISC_H	inc/misc.h	24;"	d
__STM32F10x_ADC_H	inc/stm32f10x_adc.h	24;"	d
__STM32F10x_BKP_H	inc/stm32f10x_bkp.h	24;"	d
__STM32F10x_CAN_H	inc/stm32f10x_can.h	24;"	d
__STM32F10x_CEC_H	inc/stm32f10x_cec.h	24;"	d
__STM32F10x_CRC_H	inc/stm32f10x_crc.h	24;"	d
__STM32F10x_DAC_H	inc/stm32f10x_dac.h	24;"	d
__STM32F10x_DBGMCU_H	inc/stm32f10x_dbgmcu.h	24;"	d
__STM32F10x_DMA_H	inc/stm32f10x_dma.h	24;"	d
__STM32F10x_EXTI_H	inc/stm32f10x_exti.h	24;"	d
__STM32F10x_FLASH_H	inc/stm32f10x_flash.h	24;"	d
__STM32F10x_FSMC_H	inc/stm32f10x_fsmc.h	24;"	d
__STM32F10x_GPIO_H	inc/stm32f10x_gpio.h	24;"	d
__STM32F10x_I2C_H	inc/stm32f10x_i2c.h	24;"	d
__STM32F10x_IWDG_H	inc/stm32f10x_iwdg.h	24;"	d
__STM32F10x_PWR_H	inc/stm32f10x_pwr.h	24;"	d
__STM32F10x_RCC_H	inc/stm32f10x_rcc.h	24;"	d
__STM32F10x_RTC_H	inc/stm32f10x_rtc.h	24;"	d
__STM32F10x_SDIO_H	inc/stm32f10x_sdio.h	24;"	d
__STM32F10x_SPI_H	inc/stm32f10x_spi.h	24;"	d
__STM32F10x_TIM_H	inc/stm32f10x_tim.h	24;"	d
__STM32F10x_USART_H	inc/stm32f10x_usart.h	24;"	d
__STM32F10x_WWDG_H	inc/stm32f10x_wwdg.h	24;"	d
__anon12::EXTI_Line	inc/stm32f10x_exti.h	/^  uint32_t EXTI_Line;               \/*!< Specifies the EXTI lines to be enabled or disabled.$/;"	m	struct:__anon12	access:public
__anon12::EXTI_LineCmd	inc/stm32f10x_exti.h	/^  FunctionalState EXTI_LineCmd;     \/*!< Specifies the new state of the selected EXTI lines.$/;"	m	struct:__anon12	access:public
__anon12::EXTI_Mode	inc/stm32f10x_exti.h	/^  EXTIMode_TypeDef EXTI_Mode;       \/*!< Specifies the mode for the EXTI lines.$/;"	m	struct:__anon12	access:public
__anon12::EXTI_Trigger	inc/stm32f10x_exti.h	/^  EXTITrigger_TypeDef EXTI_Trigger; \/*!< Specifies the trigger signal active edge for the EXTI lines.$/;"	m	struct:__anon12	access:public
__anon13::FSMC_AccessMode	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_AccessMode;             \/*!< Specifies the asynchronous access mode. $/;"	m	struct:__anon13	access:public
__anon13::FSMC_AddressHoldTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_AddressHoldTime;        \/*!< Defines the number of HCLK cycles to configure$/;"	m	struct:__anon13	access:public
__anon13::FSMC_AddressSetupTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_AddressSetupTime;       \/*!< Defines the number of HCLK cycles to configure$/;"	m	struct:__anon13	access:public
__anon13::FSMC_BusTurnAroundDuration	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_BusTurnAroundDuration;  \/*!< Defines the number of HCLK cycles to configure$/;"	m	struct:__anon13	access:public
__anon13::FSMC_CLKDivision	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_CLKDivision;            \/*!< Defines the period of CLK clock output signal, expressed in number of HCLK cycles.$/;"	m	struct:__anon13	access:public
__anon13::FSMC_DataLatency	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_DataLatency;            \/*!< Defines the number of memory clock cycles to issue$/;"	m	struct:__anon13	access:public
__anon13::FSMC_DataSetupTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_DataSetupTime;          \/*!< Defines the number of HCLK cycles to configure$/;"	m	struct:__anon13	access:public
__anon14::FSMC_Bank	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_Bank;                \/*!< Specifies the NOR\/SRAM memory bank that will be used.$/;"	m	struct:__anon14	access:public
__anon14::FSMC_BurstAccessMode	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_BurstAccessMode;     \/*!< Enables or disables the burst access mode for Flash memory,$/;"	m	struct:__anon14	access:public
__anon14::FSMC_DataAddressMux	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_DataAddressMux;      \/*!< Specifies whether the address and data values are$/;"	m	struct:__anon14	access:public
__anon14::FSMC_ExtendedMode	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_ExtendedMode;        \/*!< Enables or disables the extended mode.$/;"	m	struct:__anon14	access:public
__anon14::FSMC_MemoryDataWidth	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_MemoryDataWidth;     \/*!< Specifies the external memory device width.$/;"	m	struct:__anon14	access:public
__anon14::FSMC_MemoryType	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_MemoryType;          \/*!< Specifies the type of external memory attached to$/;"	m	struct:__anon14	access:public
__anon14::FSMC_ReadWriteTimingStruct	inc/stm32f10x_fsmc.h	/^  FSMC_NORSRAMTimingInitTypeDef* FSMC_ReadWriteTimingStruct; \/*!< Timing Parameters for write and read access if the  ExtendedMode is not used*\/  $/;"	m	struct:__anon14	access:public
__anon14::FSMC_WaitSignal	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_WaitSignal;          \/*!< Enables or disables the wait-state insertion via wait$/;"	m	struct:__anon14	access:public
__anon14::FSMC_WaitSignalActive	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_WaitSignalActive;    \/*!< Specifies if the wait signal is asserted by the memory one$/;"	m	struct:__anon14	access:public
__anon14::FSMC_WaitSignalPolarity	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_WaitSignalPolarity;  \/*!< Specifies the wait signal polarity, valid only when accessing$/;"	m	struct:__anon14	access:public
__anon14::FSMC_WrapMode	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_WrapMode;            \/*!< Enables or disables the Wrapped burst access mode for Flash$/;"	m	struct:__anon14	access:public
__anon14::FSMC_WriteBurst	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_WriteBurst;          \/*!< Enables or disables the write burst operation.$/;"	m	struct:__anon14	access:public
__anon14::FSMC_WriteOperation	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_WriteOperation;      \/*!< Enables or disables the write operation in the selected bank by the FSMC. $/;"	m	struct:__anon14	access:public
__anon14::FSMC_WriteTimingStruct	inc/stm32f10x_fsmc.h	/^  FSMC_NORSRAMTimingInitTypeDef* FSMC_WriteTimingStruct;     \/*!< Timing Parameters for write access if the  ExtendedMode is used*\/      $/;"	m	struct:__anon14	access:public
__anon15::FSMC_HiZSetupTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_HiZSetupTime;   \/*!< Defines the number of HCLK clock cycles during which the$/;"	m	struct:__anon15	access:public
__anon15::FSMC_HoldSetupTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_HoldSetupTime;  \/*!< Defines the number of HCLK clock cycles to hold address$/;"	m	struct:__anon15	access:public
__anon15::FSMC_SetupTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_SetupTime;      \/*!< Defines the number of HCLK cycles to setup address before$/;"	m	struct:__anon15	access:public
__anon15::FSMC_WaitSetupTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_WaitSetupTime;  \/*!< Defines the minimum number of HCLK cycles to assert the$/;"	m	struct:__anon15	access:public
__anon16::FSMC_AttributeSpaceTimingStruct	inc/stm32f10x_fsmc.h	/^  FSMC_NAND_PCCARDTimingInitTypeDef*  FSMC_AttributeSpaceTimingStruct; \/*!< FSMC Attribute Space Timing *\/$/;"	m	struct:__anon16	access:public
__anon16::FSMC_Bank	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_Bank;              \/*!< Specifies the NAND memory bank that will be used.$/;"	m	struct:__anon16	access:public
__anon16::FSMC_CommonSpaceTimingStruct	inc/stm32f10x_fsmc.h	/^  FSMC_NAND_PCCARDTimingInitTypeDef*  FSMC_CommonSpaceTimingStruct;   \/*!< FSMC Common Space Timing *\/ $/;"	m	struct:__anon16	access:public
__anon16::FSMC_ECC	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_ECC;              \/*!< Enables or disables the ECC computation.$/;"	m	struct:__anon16	access:public
__anon16::FSMC_ECCPageSize	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_ECCPageSize;      \/*!< Defines the page size for the extended ECC.$/;"	m	struct:__anon16	access:public
__anon16::FSMC_MemoryDataWidth	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_MemoryDataWidth;  \/*!< Specifies the external memory device width.$/;"	m	struct:__anon16	access:public
__anon16::FSMC_TARSetupTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_TARSetupTime;     \/*!< Defines the number of HCLK cycles to configure the$/;"	m	struct:__anon16	access:public
__anon16::FSMC_TCLRSetupTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_TCLRSetupTime;    \/*!< Defines the number of HCLK cycles to configure the$/;"	m	struct:__anon16	access:public
__anon16::FSMC_Waitfeature	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_Waitfeature;      \/*!< Enables or disables the Wait feature for the NAND Memory Bank.$/;"	m	struct:__anon16	access:public
__anon17::FSMC_AttributeSpaceTimingStruct	inc/stm32f10x_fsmc.h	/^  FSMC_NAND_PCCARDTimingInitTypeDef*  FSMC_AttributeSpaceTimingStruct;  \/*!< FSMC Attribute Space Timing *\/ $/;"	m	struct:__anon17	access:public
__anon17::FSMC_CommonSpaceTimingStruct	inc/stm32f10x_fsmc.h	/^  FSMC_NAND_PCCARDTimingInitTypeDef*  FSMC_CommonSpaceTimingStruct; \/*!< FSMC Common Space Timing *\/$/;"	m	struct:__anon17	access:public
__anon17::FSMC_IOSpaceTimingStruct	inc/stm32f10x_fsmc.h	/^  FSMC_NAND_PCCARDTimingInitTypeDef*  FSMC_IOSpaceTimingStruct; \/*!< FSMC IO Space Timing *\/  $/;"	m	struct:__anon17	access:public
__anon17::FSMC_TARSetupTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_TARSetupTime;   \/*!< Defines the number of HCLK cycles to configure the$/;"	m	struct:__anon17	access:public
__anon17::FSMC_TCLRSetupTime	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_TCLRSetupTime;  \/*!< Defines the number of HCLK cycles to configure the$/;"	m	struct:__anon17	access:public
__anon17::FSMC_Waitfeature	inc/stm32f10x_fsmc.h	/^  uint32_t FSMC_Waitfeature;    \/*!< Enables or disables the Wait feature for the Memory Bank.$/;"	m	struct:__anon17	access:public
__anon18::TIM_ClockDivision	inc/stm32f10x_tim.h	/^  uint16_t TIM_ClockDivision;     \/*!< Specifies the clock division.$/;"	m	struct:__anon18	access:public
__anon18::TIM_CounterMode	inc/stm32f10x_tim.h	/^  uint16_t TIM_CounterMode;       \/*!< Specifies the counter mode.$/;"	m	struct:__anon18	access:public
__anon18::TIM_Period	inc/stm32f10x_tim.h	/^  uint16_t TIM_Period;            \/*!< Specifies the period value to be loaded into the active$/;"	m	struct:__anon18	access:public
__anon18::TIM_Prescaler	inc/stm32f10x_tim.h	/^  uint16_t TIM_Prescaler;         \/*!< Specifies the prescaler value used to divide the TIM clock.$/;"	m	struct:__anon18	access:public
__anon18::TIM_RepetitionCounter	inc/stm32f10x_tim.h	/^  uint8_t TIM_RepetitionCounter;  \/*!< Specifies the repetition counter value. Each time the RCR downcounter$/;"	m	struct:__anon18	access:public
__anon19::TIM_OCIdleState	inc/stm32f10x_tim.h	/^  uint16_t TIM_OCIdleState;   \/*!< Specifies the TIM Output Compare pin state during Idle state.$/;"	m	struct:__anon19	access:public
__anon19::TIM_OCMode	inc/stm32f10x_tim.h	/^  uint16_t TIM_OCMode;        \/*!< Specifies the TIM mode.$/;"	m	struct:__anon19	access:public
__anon19::TIM_OCNIdleState	inc/stm32f10x_tim.h	/^  uint16_t TIM_OCNIdleState;  \/*!< Specifies the TIM Output Compare pin state during Idle state.$/;"	m	struct:__anon19	access:public
__anon19::TIM_OCNPolarity	inc/stm32f10x_tim.h	/^  uint16_t TIM_OCNPolarity;   \/*!< Specifies the complementary output polarity.$/;"	m	struct:__anon19	access:public
__anon19::TIM_OCPolarity	inc/stm32f10x_tim.h	/^  uint16_t TIM_OCPolarity;    \/*!< Specifies the output polarity.$/;"	m	struct:__anon19	access:public
__anon19::TIM_OutputNState	inc/stm32f10x_tim.h	/^  uint16_t TIM_OutputNState;  \/*!< Specifies the TIM complementary Output Compare state.$/;"	m	struct:__anon19	access:public
__anon19::TIM_OutputState	inc/stm32f10x_tim.h	/^  uint16_t TIM_OutputState;   \/*!< Specifies the TIM Output Compare state.$/;"	m	struct:__anon19	access:public
__anon19::TIM_Pulse	inc/stm32f10x_tim.h	/^  uint16_t TIM_Pulse;         \/*!< Specifies the pulse value to be loaded into the Capture Compare Register. $/;"	m	struct:__anon19	access:public
__anon1::USART_BaudRate	inc/stm32f10x_usart.h	/^  uint32_t USART_BaudRate;            \/*!< This member configures the USART communication baud rate.$/;"	m	struct:__anon1	access:public
__anon1::USART_HardwareFlowControl	inc/stm32f10x_usart.h	/^  uint16_t USART_HardwareFlowControl; \/*!< Specifies wether the hardware flow control mode is enabled$/;"	m	struct:__anon1	access:public
__anon1::USART_Mode	inc/stm32f10x_usart.h	/^  uint16_t USART_Mode;                \/*!< Specifies wether the Receive or Transmit mode is enabled or disabled.$/;"	m	struct:__anon1	access:public
__anon1::USART_Parity	inc/stm32f10x_usart.h	/^  uint16_t USART_Parity;              \/*!< Specifies the parity mode.$/;"	m	struct:__anon1	access:public
__anon1::USART_StopBits	inc/stm32f10x_usart.h	/^  uint16_t USART_StopBits;            \/*!< Specifies the number of stop bits transmitted.$/;"	m	struct:__anon1	access:public
__anon1::USART_WordLength	inc/stm32f10x_usart.h	/^  uint16_t USART_WordLength;          \/*!< Specifies the number of data bits transmitted or received in a frame.$/;"	m	struct:__anon1	access:public
__anon20::TIM_Channel	inc/stm32f10x_tim.h	/^  uint16_t TIM_Channel;      \/*!< Specifies the TIM channel.$/;"	m	struct:__anon20	access:public
__anon20::TIM_ICFilter	inc/stm32f10x_tim.h	/^  uint16_t TIM_ICFilter;     \/*!< Specifies the input capture filter.$/;"	m	struct:__anon20	access:public
__anon20::TIM_ICPolarity	inc/stm32f10x_tim.h	/^  uint16_t TIM_ICPolarity;   \/*!< Specifies the active edge of the input signal.$/;"	m	struct:__anon20	access:public
__anon20::TIM_ICPrescaler	inc/stm32f10x_tim.h	/^  uint16_t TIM_ICPrescaler;  \/*!< Specifies the Input Capture Prescaler.$/;"	m	struct:__anon20	access:public
__anon20::TIM_ICSelection	inc/stm32f10x_tim.h	/^  uint16_t TIM_ICSelection;  \/*!< Specifies the input.$/;"	m	struct:__anon20	access:public
__anon21::TIM_AutomaticOutput	inc/stm32f10x_tim.h	/^  uint16_t TIM_AutomaticOutput;  \/*!< Specifies whether the TIM Automatic Output feature is enabled or not. $/;"	m	struct:__anon21	access:public
__anon21::TIM_Break	inc/stm32f10x_tim.h	/^  uint16_t TIM_Break;            \/*!< Specifies whether the TIM Break input is enabled or not. $/;"	m	struct:__anon21	access:public
__anon21::TIM_BreakPolarity	inc/stm32f10x_tim.h	/^  uint16_t TIM_BreakPolarity;    \/*!< Specifies the TIM Break Input pin polarity.$/;"	m	struct:__anon21	access:public
__anon21::TIM_DeadTime	inc/stm32f10x_tim.h	/^  uint16_t TIM_DeadTime;         \/*!< Specifies the delay time between the switching-off and the$/;"	m	struct:__anon21	access:public
__anon21::TIM_LOCKLevel	inc/stm32f10x_tim.h	/^  uint16_t TIM_LOCKLevel;        \/*!< Specifies the LOCK level parameters.$/;"	m	struct:__anon21	access:public
__anon21::TIM_OSSIState	inc/stm32f10x_tim.h	/^  uint16_t TIM_OSSIState;        \/*!< Specifies the Off-State used in Idle state.$/;"	m	struct:__anon21	access:public
__anon21::TIM_OSSRState	inc/stm32f10x_tim.h	/^  uint16_t TIM_OSSRState;        \/*!< Specifies the Off-State selection used in Run mode.$/;"	m	struct:__anon21	access:public
__anon22::SPI_BaudRatePrescaler	inc/stm32f10x_spi.h	/^  uint16_t SPI_BaudRatePrescaler;   \/*!< Specifies the Baud Rate prescaler value which will be$/;"	m	struct:__anon22	access:public
__anon22::SPI_CPHA	inc/stm32f10x_spi.h	/^  uint16_t SPI_CPHA;                \/*!< Specifies the clock active edge for the bit capture.$/;"	m	struct:__anon22	access:public
__anon22::SPI_CPOL	inc/stm32f10x_spi.h	/^  uint16_t SPI_CPOL;                \/*!< Specifies the serial clock steady state.$/;"	m	struct:__anon22	access:public
__anon22::SPI_CRCPolynomial	inc/stm32f10x_spi.h	/^  uint16_t SPI_CRCPolynomial;       \/*!< Specifies the polynomial used for the CRC calculation. *\/$/;"	m	struct:__anon22	access:public
__anon22::SPI_DataSize	inc/stm32f10x_spi.h	/^  uint16_t SPI_DataSize;            \/*!< Specifies the SPI data size.$/;"	m	struct:__anon22	access:public
__anon22::SPI_Direction	inc/stm32f10x_spi.h	/^  uint16_t SPI_Direction;           \/*!< Specifies the SPI unidirectional or bidirectional data mode.$/;"	m	struct:__anon22	access:public
__anon22::SPI_FirstBit	inc/stm32f10x_spi.h	/^  uint16_t SPI_FirstBit;            \/*!< Specifies whether data transfers start from MSB or LSB bit.$/;"	m	struct:__anon22	access:public
__anon22::SPI_Mode	inc/stm32f10x_spi.h	/^  uint16_t SPI_Mode;                \/*!< Specifies the SPI operating mode.$/;"	m	struct:__anon22	access:public
__anon22::SPI_NSS	inc/stm32f10x_spi.h	/^  uint16_t SPI_NSS;                 \/*!< Specifies whether the NSS signal is managed by$/;"	m	struct:__anon22	access:public
__anon23::I2S_AudioFreq	inc/stm32f10x_spi.h	/^  uint32_t I2S_AudioFreq;    \/*!< Specifies the frequency selected for the I2S communication.$/;"	m	struct:__anon23	access:public
__anon23::I2S_CPOL	inc/stm32f10x_spi.h	/^  uint16_t I2S_CPOL;         \/*!< Specifies the idle state of the I2S clock.$/;"	m	struct:__anon23	access:public
__anon23::I2S_DataFormat	inc/stm32f10x_spi.h	/^  uint16_t I2S_DataFormat;   \/*!< Specifies the data format for the I2S communication.$/;"	m	struct:__anon23	access:public
__anon23::I2S_MCLKOutput	inc/stm32f10x_spi.h	/^  uint16_t I2S_MCLKOutput;   \/*!< Specifies whether the I2S MCLK output is enabled or not.$/;"	m	struct:__anon23	access:public
__anon23::I2S_Mode	inc/stm32f10x_spi.h	/^  uint16_t I2S_Mode;         \/*!< Specifies the I2S operating mode.$/;"	m	struct:__anon23	access:public
__anon23::I2S_Standard	inc/stm32f10x_spi.h	/^  uint16_t I2S_Standard;     \/*!< Specifies the standard used for the I2S communication.$/;"	m	struct:__anon23	access:public
__anon27::GPIO_Mode	inc/stm32f10x_gpio.h	/^  GPIOMode_TypeDef GPIO_Mode;    \/*!< Specifies the operating mode for the selected pins.$/;"	m	struct:__anon27	access:public
__anon27::GPIO_Pin	inc/stm32f10x_gpio.h	/^  uint16_t GPIO_Pin;             \/*!< Specifies the GPIO pins to be configured.$/;"	m	struct:__anon27	access:public
__anon27::GPIO_Speed	inc/stm32f10x_gpio.h	/^  GPIOSpeed_TypeDef GPIO_Speed;  \/*!< Specifies the speed for the selected pins.$/;"	m	struct:__anon27	access:public
__anon29::NVIC_IRQChannel	inc/misc.h	/^  uint8_t NVIC_IRQChannel;                    \/*!< Specifies the IRQ channel to be enabled or disabled.$/;"	m	struct:__anon29	access:public
__anon29::NVIC_IRQChannelCmd	inc/misc.h	/^  FunctionalState NVIC_IRQChannelCmd;         \/*!< Specifies whether the IRQ channel defined in NVIC_IRQChannel$/;"	m	struct:__anon29	access:public
__anon29::NVIC_IRQChannelPreemptionPriority	inc/misc.h	/^  uint8_t NVIC_IRQChannelPreemptionPriority;  \/*!< Specifies the pre-emption priority for the IRQ channel$/;"	m	struct:__anon29	access:public
__anon29::NVIC_IRQChannelSubPriority	inc/misc.h	/^  uint8_t NVIC_IRQChannelSubPriority;         \/*!< Specifies the subpriority level for the IRQ channel specified$/;"	m	struct:__anon29	access:public
__anon2::USART_CPHA	inc/stm32f10x_usart.h	/^  uint16_t USART_CPHA;    \/*!< Specifies the clock transition on which the bit capture is made.$/;"	m	struct:__anon2	access:public
__anon2::USART_CPOL	inc/stm32f10x_usart.h	/^  uint16_t USART_CPOL;    \/*!< Specifies the steady state value of the serial clock.$/;"	m	struct:__anon2	access:public
__anon2::USART_Clock	inc/stm32f10x_usart.h	/^  uint16_t USART_Clock;   \/*!< Specifies whether the USART clock is enabled or disabled.$/;"	m	struct:__anon2	access:public
__anon2::USART_LastBit	inc/stm32f10x_usart.h	/^  uint16_t USART_LastBit; \/*!< Specifies whether the clock pulse corresponding to the last transmitted$/;"	m	struct:__anon2	access:public
__anon30::ADC_ContinuousConvMode	inc/stm32f10x_adc.h	/^  FunctionalState ADC_ContinuousConvMode; \/*!< Specifies whether the conversion is performed in$/;"	m	struct:__anon30	access:public
__anon30::ADC_DataAlign	inc/stm32f10x_adc.h	/^  uint32_t ADC_DataAlign;                 \/*!< Specifies whether the ADC data alignment is left or right.$/;"	m	struct:__anon30	access:public
__anon30::ADC_ExternalTrigConv	inc/stm32f10x_adc.h	/^  uint32_t ADC_ExternalTrigConv;          \/*!< Defines the external trigger used to start the analog$/;"	m	struct:__anon30	access:public
__anon30::ADC_Mode	inc/stm32f10x_adc.h	/^  uint32_t ADC_Mode;                      \/*!< Configures the ADC to operate in independent or$/;"	m	struct:__anon30	access:public
__anon30::ADC_NbrOfChannel	inc/stm32f10x_adc.h	/^  uint8_t ADC_NbrOfChannel;               \/*!< Specifies the number of ADC channels that will be converted$/;"	m	struct:__anon30	access:public
__anon30::ADC_ScanConvMode	inc/stm32f10x_adc.h	/^  FunctionalState ADC_ScanConvMode;       \/*!< Specifies whether the conversion is performed in$/;"	m	struct:__anon30	access:public
__anon31::ADCCLK_Frequency	inc/stm32f10x_rcc.h	/^  uint32_t ADCCLK_Frequency;  \/*!< returns ADCCLK clock frequency expressed in Hz *\/$/;"	m	struct:__anon31	access:public
__anon31::HCLK_Frequency	inc/stm32f10x_rcc.h	/^  uint32_t HCLK_Frequency;    \/*!< returns HCLK clock frequency expressed in Hz *\/$/;"	m	struct:__anon31	access:public
__anon31::PCLK1_Frequency	inc/stm32f10x_rcc.h	/^  uint32_t PCLK1_Frequency;   \/*!< returns PCLK1 clock frequency expressed in Hz *\/$/;"	m	struct:__anon31	access:public
__anon31::PCLK2_Frequency	inc/stm32f10x_rcc.h	/^  uint32_t PCLK2_Frequency;   \/*!< returns PCLK2 clock frequency expressed in Hz *\/$/;"	m	struct:__anon31	access:public
__anon31::SYSCLK_Frequency	inc/stm32f10x_rcc.h	/^  uint32_t SYSCLK_Frequency;  \/*!< returns SYSCLK clock frequency expressed in Hz *\/$/;"	m	struct:__anon31	access:public
__anon32::SDIO_BusWide	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_BusWide;              \/*!< Specifies the SDIO bus width.$/;"	m	struct:__anon32	access:public
__anon32::SDIO_ClockBypass	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_ClockBypass;          \/*!< Specifies whether the SDIO Clock divider bypass is$/;"	m	struct:__anon32	access:public
__anon32::SDIO_ClockDiv	inc/stm32f10x_sdio.h	/^  uint8_t SDIO_ClockDiv;              \/*!< Specifies the clock frequency of the SDIO controller.$/;"	m	struct:__anon32	access:public
__anon32::SDIO_ClockEdge	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_ClockEdge;            \/*!< Specifies the clock transition on which the bit capture is made.$/;"	m	struct:__anon32	access:public
__anon32::SDIO_ClockPowerSave	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_ClockPowerSave;       \/*!< Specifies whether SDIO Clock output is enabled or$/;"	m	struct:__anon32	access:public
__anon32::SDIO_HardwareFlowControl	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_HardwareFlowControl;  \/*!< Specifies whether the SDIO hardware flow control is enabled or disabled.$/;"	m	struct:__anon32	access:public
__anon33::SDIO_Argument	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_Argument;  \/*!< Specifies the SDIO command argument which is sent$/;"	m	struct:__anon33	access:public
__anon33::SDIO_CPSM	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_CPSM;      \/*!< Specifies whether SDIO Command path state machine (CPSM)$/;"	m	struct:__anon33	access:public
__anon33::SDIO_CmdIndex	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_CmdIndex;  \/*!< Specifies the SDIO command index. It must be lower than 0x40. *\/$/;"	m	struct:__anon33	access:public
__anon33::SDIO_Response	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_Response;  \/*!< Specifies the SDIO response type.$/;"	m	struct:__anon33	access:public
__anon33::SDIO_Wait	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_Wait;      \/*!< Specifies whether SDIO wait-for-interrupt request is enabled or disabled.$/;"	m	struct:__anon33	access:public
__anon34::SDIO_DPSM	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_DPSM;           \/*!< Specifies whether SDIO Data path state machine (DPSM)$/;"	m	struct:__anon34	access:public
__anon34::SDIO_DataBlockSize	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_DataBlockSize;  \/*!< Specifies the data block size for block transfer.$/;"	m	struct:__anon34	access:public
__anon34::SDIO_DataLength	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_DataLength;     \/*!< Specifies the number of data bytes to be transferred. *\/$/;"	m	struct:__anon34	access:public
__anon34::SDIO_DataTimeOut	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_DataTimeOut;    \/*!< Specifies the data timeout period in card bus clock periods. *\/$/;"	m	struct:__anon34	access:public
__anon34::SDIO_TransferDir	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_TransferDir;    \/*!< Specifies the data transfer direction, whether the transfer$/;"	m	struct:__anon34	access:public
__anon34::SDIO_TransferMode	inc/stm32f10x_sdio.h	/^  uint32_t SDIO_TransferMode;   \/*!< Specifies whether data transfer is in stream or block mode.$/;"	m	struct:__anon34	access:public
__anon35::DMA_BufferSize	inc/stm32f10x_dma.h	/^  uint32_t DMA_BufferSize;         \/*!< Specifies the buffer size, in data unit, of the specified Channel. $/;"	m	struct:__anon35	access:public
__anon35::DMA_DIR	inc/stm32f10x_dma.h	/^  uint32_t DMA_DIR;                \/*!< Specifies if the peripheral is the source or destination.$/;"	m	struct:__anon35	access:public
__anon35::DMA_M2M	inc/stm32f10x_dma.h	/^  uint32_t DMA_M2M;                \/*!< Specifies if the DMAy Channelx will be used in memory-to-memory transfer.$/;"	m	struct:__anon35	access:public
__anon35::DMA_MemoryBaseAddr	inc/stm32f10x_dma.h	/^  uint32_t DMA_MemoryBaseAddr;     \/*!< Specifies the memory base address for DMAy Channelx. *\/$/;"	m	struct:__anon35	access:public
__anon35::DMA_MemoryDataSize	inc/stm32f10x_dma.h	/^  uint32_t DMA_MemoryDataSize;     \/*!< Specifies the Memory data width.$/;"	m	struct:__anon35	access:public
__anon35::DMA_MemoryInc	inc/stm32f10x_dma.h	/^  uint32_t DMA_MemoryInc;          \/*!< Specifies whether the memory address register is incremented or not.$/;"	m	struct:__anon35	access:public
__anon35::DMA_Mode	inc/stm32f10x_dma.h	/^  uint32_t DMA_Mode;               \/*!< Specifies the operation mode of the DMAy Channelx.$/;"	m	struct:__anon35	access:public
__anon35::DMA_PeripheralBaseAddr	inc/stm32f10x_dma.h	/^  uint32_t DMA_PeripheralBaseAddr; \/*!< Specifies the peripheral base address for DMAy Channelx. *\/$/;"	m	struct:__anon35	access:public
__anon35::DMA_PeripheralDataSize	inc/stm32f10x_dma.h	/^  uint32_t DMA_PeripheralDataSize; \/*!< Specifies the Peripheral data width.$/;"	m	struct:__anon35	access:public
__anon35::DMA_PeripheralInc	inc/stm32f10x_dma.h	/^  uint32_t DMA_PeripheralInc;      \/*!< Specifies whether the Peripheral address register is incremented or not.$/;"	m	struct:__anon35	access:public
__anon35::DMA_Priority	inc/stm32f10x_dma.h	/^  uint32_t DMA_Priority;           \/*!< Specifies the software priority for the DMAy Channelx.$/;"	m	struct:__anon35	access:public
__anon3::CAN_ABOM	inc/stm32f10x_can.h	/^  FunctionalState CAN_ABOM;  \/*!< Enable or disable the automatic bus-off management.$/;"	m	struct:__anon3	access:public
__anon3::CAN_AWUM	inc/stm32f10x_can.h	/^  FunctionalState CAN_AWUM;  \/*!< Enable or disable the automatic wake-up mode. $/;"	m	struct:__anon3	access:public
__anon3::CAN_BS1	inc/stm32f10x_can.h	/^  uint8_t CAN_BS1;          \/*!< Specifies the number of time quanta in Bit Segment 1.$/;"	m	struct:__anon3	access:public
__anon3::CAN_BS2	inc/stm32f10x_can.h	/^  uint8_t CAN_BS2;          \/*!< Specifies the number of time quanta in Bit Segment 2.$/;"	m	struct:__anon3	access:public
__anon3::CAN_Mode	inc/stm32f10x_can.h	/^  uint8_t CAN_Mode;         \/*!< Specifies the CAN operating mode.$/;"	m	struct:__anon3	access:public
__anon3::CAN_NART	inc/stm32f10x_can.h	/^  FunctionalState CAN_NART;  \/*!< Enable or disable the no-automatic retransmission mode.$/;"	m	struct:__anon3	access:public
__anon3::CAN_Prescaler	inc/stm32f10x_can.h	/^  uint16_t CAN_Prescaler;   \/*!< Specifies the length of a time quantum. It ranges from 1 to 1024. *\/$/;"	m	struct:__anon3	access:public
__anon3::CAN_RFLM	inc/stm32f10x_can.h	/^  FunctionalState CAN_RFLM;  \/*!< Enable or disable the Receive FIFO Locked mode.$/;"	m	struct:__anon3	access:public
__anon3::CAN_SJW	inc/stm32f10x_can.h	/^  uint8_t CAN_SJW;          \/*!< Specifies the maximum number of time quanta the CAN hardware$/;"	m	struct:__anon3	access:public
__anon3::CAN_TTCM	inc/stm32f10x_can.h	/^  FunctionalState CAN_TTCM; \/*!< Enable or disable the time triggered communication mode.$/;"	m	struct:__anon3	access:public
__anon3::CAN_TXFP	inc/stm32f10x_can.h	/^  FunctionalState CAN_TXFP;  \/*!< Enable or disable the transmit FIFO priority.$/;"	m	struct:__anon3	access:public
__anon4::CAN_FilterActivation	inc/stm32f10x_can.h	/^  FunctionalState CAN_FilterActivation;  \/*!< Enable or disable the filter.$/;"	m	struct:__anon4	access:public
__anon4::CAN_FilterFIFOAssignment	inc/stm32f10x_can.h	/^  uint16_t CAN_FilterFIFOAssignment;     \/*!< Specifies the FIFO (0 or 1) which will be assigned to the filter.$/;"	m	struct:__anon4	access:public
__anon4::CAN_FilterIdHigh	inc/stm32f10x_can.h	/^  uint16_t CAN_FilterIdHigh;             \/*!< Specifies the filter identification number (MSBs for a 32-bit$/;"	m	struct:__anon4	access:public
__anon4::CAN_FilterIdLow	inc/stm32f10x_can.h	/^  uint16_t CAN_FilterIdLow;              \/*!< Specifies the filter identification number (LSBs for a 32-bit$/;"	m	struct:__anon4	access:public
__anon4::CAN_FilterMaskIdHigh	inc/stm32f10x_can.h	/^  uint16_t CAN_FilterMaskIdHigh;         \/*!< Specifies the filter mask number or identification number,$/;"	m	struct:__anon4	access:public
__anon4::CAN_FilterMaskIdLow	inc/stm32f10x_can.h	/^  uint16_t CAN_FilterMaskIdLow;          \/*!< Specifies the filter mask number or identification number,$/;"	m	struct:__anon4	access:public
__anon4::CAN_FilterMode	inc/stm32f10x_can.h	/^  uint8_t CAN_FilterMode;                \/*!< Specifies the filter mode to be initialized.$/;"	m	struct:__anon4	access:public
__anon4::CAN_FilterNumber	inc/stm32f10x_can.h	/^  uint8_t CAN_FilterNumber;              \/*!< Specifies the filter which will be initialized. It ranges from 0 to 13. *\/$/;"	m	struct:__anon4	access:public
__anon4::CAN_FilterScale	inc/stm32f10x_can.h	/^  uint8_t CAN_FilterScale;               \/*!< Specifies the filter scale.$/;"	m	struct:__anon4	access:public
__anon5::DLC	inc/stm32f10x_can.h	/^  uint8_t DLC;     \/*!< Specifies the length of the frame that will be transmitted.$/;"	m	struct:__anon5	access:public
__anon5::Data	inc/stm32f10x_can.h	/^  uint8_t Data[8]; \/*!< Contains the data to be transmitted. It ranges from 0 to 0xFF. *\/$/;"	m	struct:__anon5	access:public
__anon5::ExtId	inc/stm32f10x_can.h	/^  uint32_t ExtId;  \/*!< Specifies the extended identifier.$/;"	m	struct:__anon5	access:public
__anon5::IDE	inc/stm32f10x_can.h	/^  uint8_t IDE;     \/*!< Specifies the type of identifier for the message that will be transmitted.$/;"	m	struct:__anon5	access:public
__anon5::RTR	inc/stm32f10x_can.h	/^  uint8_t RTR;     \/*!< Specifies the type of frame for the message that will be transmitted.$/;"	m	struct:__anon5	access:public
__anon5::StdId	inc/stm32f10x_can.h	/^  uint32_t StdId;  \/*!< Specifies the standard identifier.$/;"	m	struct:__anon5	access:public
__anon6::DLC	inc/stm32f10x_can.h	/^  uint8_t DLC;     \/*!< Specifies the length of the frame that will be received.$/;"	m	struct:__anon6	access:public
__anon6::Data	inc/stm32f10x_can.h	/^  uint8_t Data[8]; \/*!< Contains the data to be received. It ranges from 0 to 0xFF. *\/$/;"	m	struct:__anon6	access:public
__anon6::ExtId	inc/stm32f10x_can.h	/^  uint32_t ExtId;  \/*!< Specifies the extended identifier.$/;"	m	struct:__anon6	access:public
__anon6::FMI	inc/stm32f10x_can.h	/^  uint8_t FMI;     \/*!< Specifies the index of the filter the message stored in the mailbox passes through.$/;"	m	struct:__anon6	access:public
__anon6::IDE	inc/stm32f10x_can.h	/^  uint8_t IDE;     \/*!< Specifies the type of identifier for the message that will be received.$/;"	m	struct:__anon6	access:public
__anon6::RTR	inc/stm32f10x_can.h	/^  uint8_t RTR;     \/*!< Specifies the type of frame for the received message.$/;"	m	struct:__anon6	access:public
__anon6::StdId	inc/stm32f10x_can.h	/^  uint32_t StdId;  \/*!< Specifies the standard identifier.$/;"	m	struct:__anon6	access:public
__anon7::CEC_BitPeriodMode	inc/stm32f10x_cec.h	/^  uint16_t CEC_BitPeriodMode; \/*!< Configures the CEC Bit Period Error Mode. $/;"	m	struct:__anon7	access:public
__anon7::CEC_BitTimingMode	inc/stm32f10x_cec.h	/^  uint16_t CEC_BitTimingMode; \/*!< Configures the CEC Bit Timing Error Mode. $/;"	m	struct:__anon7	access:public
__anon8::DAC_LFSRUnmask_TriangleAmplitude	inc/stm32f10x_dac.h	/^  uint32_t DAC_LFSRUnmask_TriangleAmplitude; \/*!< Specifies the LFSR mask for noise wave generation or$/;"	m	struct:__anon8	access:public
__anon8::DAC_OutputBuffer	inc/stm32f10x_dac.h	/^  uint32_t DAC_OutputBuffer;                 \/*!< Specifies whether the DAC channel output buffer is enabled or disabled.$/;"	m	struct:__anon8	access:public
__anon8::DAC_Trigger	inc/stm32f10x_dac.h	/^  uint32_t DAC_Trigger;                      \/*!< Specifies the external trigger for the selected DAC channel.$/;"	m	struct:__anon8	access:public
__anon8::DAC_WaveGeneration	inc/stm32f10x_dac.h	/^  uint32_t DAC_WaveGeneration;               \/*!< Specifies whether DAC channel noise waves or triangle waves$/;"	m	struct:__anon8	access:public
__anon9::I2C_Ack	inc/stm32f10x_i2c.h	/^  uint16_t I2C_Ack;                 \/*!< Enables or disables the acknowledgement.$/;"	m	struct:__anon9	access:public
__anon9::I2C_AcknowledgedAddress	inc/stm32f10x_i2c.h	/^  uint16_t I2C_AcknowledgedAddress; \/*!< Specifies if 7-bit or 10-bit address is acknowledged.$/;"	m	struct:__anon9	access:public
__anon9::I2C_ClockSpeed	inc/stm32f10x_i2c.h	/^  uint32_t I2C_ClockSpeed;          \/*!< Specifies the clock frequency.$/;"	m	struct:__anon9	access:public
__anon9::I2C_DutyCycle	inc/stm32f10x_i2c.h	/^  uint16_t I2C_DutyCycle;           \/*!< Specifies the I2C fast mode duty cycle.$/;"	m	struct:__anon9	access:public
__anon9::I2C_Mode	inc/stm32f10x_i2c.h	/^  uint16_t I2C_Mode;                \/*!< Specifies the I2C mode.$/;"	m	struct:__anon9	access:public
__anon9::I2C_OwnAddress1	inc/stm32f10x_i2c.h	/^  uint16_t I2C_OwnAddress1;         \/*!< Specifies the first device own address.$/;"	m	struct:__anon9	access:public
format	tags	/^!_TAG_FILE_FORMAT	2	\/extended format; --format=1 will not append ;" to lines\/$/;"	v
